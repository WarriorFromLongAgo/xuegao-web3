{
  "openapi": "3.0.0",
  "paths": {
    "/v1/health-check": {
      "get": {
        "operationId": "health-check",
        "summary": "Get the health of the service",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health Check"
        ]
      }
    },
    "/v1/chains/{chainId}/nfts/collections/{address}/tokens/{tokenId}:reindex": {
      "post": {
        "operationId": "reindexNft",
        "summary": "Reindex NFT metadata",
        "description": "Triggers reindexing of token metadata for an NFT token. Reindexing can only be called once per hour for each NFT token.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Contract address on the relevant chain.",
            "example": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "TokenId on the contract",
            "example": "145",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "NFTs"
        ]
      }
    },
    "/v1/chains/{chainId}/nfts/collections/{address}/tokens": {
      "get": {
        "operationId": "listTokens",
        "summary": "List tokens",
        "description": "Lists tokens for an NFT contract.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Contract address on the relevant chain.",
            "example": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "tokens": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "tokens"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "NFTs"
        ]
      }
    },
    "/v1/chains/{chainId}/nfts/collections/{address}/tokens/{tokenId}": {
      "get": {
        "operationId": "getTokenDetails",
        "summary": "Get token details",
        "description": "Gets token details for a specific token of an NFT contract.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Contract address on the relevant chain.",
            "example": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "TokenId on the contract",
            "example": "145",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-721"
                          ]
                        },
                        "tokenId": {
                          "type": "string"
                        },
                        "tokenUri": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "indexStatus": {
                              "example": "indexed",
                              "type": "string",
                              "description": "The metadata indexing status of the nft.",
                              "enum": [
                                "UNKNOWN",
                                "MISSING_TOKEN",
                                "INVALID_TOKEN_URI",
                                "INVALID_TOKEN_URI_SCHEME",
                                "UNREACHABLE_TOKEN_URI",
                                "THROTTLED_TOKEN_URI",
                                "METADATA_CONTENT_TOO_LARGE",
                                "INVALID_METADATA",
                                "INVALID_METADATA_JSON",
                                "INDEXED",
                                "UNINDEXED"
                              ]
                            },
                            "metadataLastUpdatedTimestamp": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "animationUri": {
                              "type": "string"
                            },
                            "externalUrl": {
                              "type": "string"
                            },
                            "background": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "indexStatus"
                          ]
                        },
                        "ownerAddress": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address",
                        "name",
                        "symbol",
                        "ercType",
                        "tokenId",
                        "tokenUri",
                        "metadata"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-1155"
                          ]
                        },
                        "tokenId": {
                          "type": "string"
                        },
                        "tokenUri": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "indexStatus": {
                              "example": "indexed",
                              "type": "string",
                              "description": "The metadata indexing status of the nft.",
                              "enum": [
                                "UNKNOWN",
                                "MISSING_TOKEN",
                                "INVALID_TOKEN_URI",
                                "INVALID_TOKEN_URI_SCHEME",
                                "UNREACHABLE_TOKEN_URI",
                                "THROTTLED_TOKEN_URI",
                                "METADATA_CONTENT_TOO_LARGE",
                                "INVALID_METADATA",
                                "INVALID_METADATA_JSON",
                                "INDEXED",
                                "UNINDEXED"
                              ]
                            },
                            "metadataLastUpdatedTimestamp": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "animationUri": {
                              "type": "string"
                            },
                            "externalUrl": {
                              "type": "string"
                            },
                            "background": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "properties": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "indexStatus"
                          ]
                        }
                      },
                      "required": [
                        "address",
                        "ercType",
                        "tokenId",
                        "tokenUri",
                        "metadata"
                      ]
                    }
                  ],
                  "discriminator": {
                    "propertyName": "ercType",
                    "mapping": {
                      "ERC-721": "#/components/schemas/Erc721Token",
                      "ERC-1155": "#/components/schemas/Erc1155Token"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs"
        ]
      }
    },
    "/v1/operations/{operationId}": {
      "get": {
        "operationId": "getOperationResult",
        "summary": "Get operation",
        "description": "Gets operation details for the given operation id.",
        "parameters": [
          {
            "name": "operationId",
            "required": true,
            "in": "path",
            "description": "UUID of given operation",
            "example": "aa22054a-cb7c-4a4e-9b83-59f2ede74138",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operationId": {
                      "type": "string"
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK",
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE",
                        "TRANSACTION_EXPORT_EVM"
                      ]
                    },
                    "operationStatus": {
                      "type": "string",
                      "enum": [
                        "RUNNING",
                        "COMPLETED",
                        "COMPLETED_WITH_WARNING",
                        "FAILED"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "ErrInvalidRequest",
                                "ErrInternal",
                                "WarnTruncatedExport"
                              ]
                            },
                            "downloadUrl": {
                              "type": "string",
                              "description": "File download URL. Provided only for COMPLETED and COMPLETED_WITH_WARNING operations."
                            },
                            "nextDate": {
                              "type": "string",
                              "description": "The next date (YYYY-MM-DD) to use as the firstDate in follow up requests if a request results in a transaction history exceeding the max size and has been reported as `COMPLETED_WITH_WARNING` with the warning 'WarnTruncatedExport'."
                            }
                          }
                        }
                      ]
                    },
                    "createdAtTimestamp": {
                      "type": "number"
                    },
                    "updatedAtTimestamp": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "operationId",
                    "operationType",
                    "operationStatus",
                    "metadata",
                    "createdAtTimestamp",
                    "updatedAtTimestamp"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Operations"
        ]
      }
    },
    "/v1/operations/transactions:export": {
      "post": {
        "operationId": "postTransactionExportJob",
        "summary": "Create transaction export operation",
        "description": "Trigger a transaction export operation with given parameters.\n\nThe transaction export operation runs asynchronously in the background. The status of the job can be retrieved from the `/v1/operations/:operationId` endpoint using the `operationId` returned from this endpoint.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "TRANSACTION_EXPORT_EVM"
                        ]
                      },
                      "firstDate": {
                        "type": "string",
                        "example": "2023-05-01"
                      },
                      "lastDate": {
                        "type": "string",
                        "example": "2023-05-02"
                      },
                      "startDate": {
                        "type": "string",
                        "example": "2023-05-01",
                        "deprecated": true
                      },
                      "endDate": {
                        "type": "string",
                        "example": "2023-05-02",
                        "deprecated": true
                      },
                      "options": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeChains": {
                            "example": [
                              "43114"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "addresses",
                          "includeChains"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "firstDate",
                      "lastDate",
                      "startDate",
                      "endDate",
                      "options"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "TRANSACTION_EXPORT_PRIMARY_NETWORK",
                          "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
                          "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE"
                        ]
                      },
                      "firstDate": {
                        "type": "string",
                        "example": "2023-05-01"
                      },
                      "lastDate": {
                        "type": "string",
                        "example": "2023-05-02"
                      },
                      "startDate": {
                        "type": "string",
                        "example": "2023-05-01",
                        "deprecated": true
                      },
                      "endDate": {
                        "type": "string",
                        "example": "2023-05-02",
                        "deprecated": true
                      },
                      "options": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "cChainEvmAddresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeChains": {
                            "type": "array",
                            "example": [
                              "p-chain"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "11111111111111111111111111111111LpoYY",
                                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            }
                          }
                        },
                        "required": [
                          "includeChains"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "firstDate",
                      "lastDate",
                      "startDate",
                      "endDate",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operationId": {
                      "type": "string"
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK",
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
                        "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE",
                        "TRANSACTION_EXPORT_EVM"
                      ]
                    },
                    "operationStatus": {
                      "type": "string",
                      "enum": [
                        "RUNNING",
                        "COMPLETED",
                        "COMPLETED_WITH_WARNING",
                        "FAILED"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "ErrInvalidRequest",
                                "ErrInternal",
                                "WarnTruncatedExport"
                              ]
                            },
                            "downloadUrl": {
                              "type": "string",
                              "description": "File download URL. Provided only for COMPLETED and COMPLETED_WITH_WARNING operations."
                            },
                            "nextDate": {
                              "type": "string",
                              "description": "The next date (YYYY-MM-DD) to use as the firstDate in follow up requests if a request results in a transaction history exceeding the max size and has been reported as `COMPLETED_WITH_WARNING` with the warning 'WarnTruncatedExport'."
                            }
                          }
                        }
                      ]
                    },
                    "createdAtTimestamp": {
                      "type": "number"
                    },
                    "updatedAtTimestamp": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "operationId",
                    "operationType",
                    "operationStatus",
                    "metadata",
                    "createdAtTimestamp",
                    "updatedAtTimestamp"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Operations"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/transactions/{txHash}": {
      "get": {
        "operationId": "getTxByHash",
        "summary": "Get transaction",
        "description": "Gets the details of a single transaction on one of the Primary Network chains.",
        "parameters": [
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "txHash",
            "required": true,
            "in": "path",
            "description": "A primary network (P or X chain) transaction hash.",
            "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string",
                          "description": "A P-Chain transaction hash.",
                          "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP"
                        },
                        "txType": {
                          "example": "AddDelegatorTx",
                          "type": "string",
                          "enum": [
                            "AddValidatorTx",
                            "AddSubnetValidatorTx",
                            "AddDelegatorTx",
                            "CreateChainTx",
                            "CreateSubnetTx",
                            "ImportTx",
                            "ExportTx",
                            "AdvanceTimeTx",
                            "RewardValidatorTx",
                            "RemoveSubnetValidatorTx",
                            "TransformSubnetTx",
                            "AddPermissionlessValidatorTx",
                            "AddPermissionlessDelegatorTx",
                            "BaseTx",
                            "TransferSubnetOwnershipTx",
                            "UNKNOWN"
                          ]
                        },
                        "blockTimestamp": {
                          "type": "number",
                          "description": "The block finality timestamp.",
                          "example": 1648672486
                        },
                        "blockNumber": {
                          "type": "string"
                        },
                        "blockHash": {
                          "type": "string"
                        },
                        "consumedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "amount": {
                                "type": "string",
                                "deprecated": true
                              },
                              "assetId": {
                                "type": "string",
                                "deprecated": true
                              },
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockTimestamp": {
                                "type": "number"
                              },
                              "consumingBlockNumber": {
                                "type": "string"
                              },
                              "consumingBlockTimestamp": {
                                "type": "number"
                              },
                              "platformLocktime": {
                                "type": "number"
                              },
                              "outputIndex": {
                                "type": "number"
                              },
                              "rewardType": {
                                "type": "string",
                                "enum": [
                                  "VALIDATOR",
                                  "DELEGATOR",
                                  "VALIDATOR_FEE"
                                ]
                              },
                              "stakeableLocktime": {
                                "type": "number"
                              },
                              "staked": {
                                "type": "boolean"
                              },
                              "threshold": {
                                "type": "number"
                              },
                              "txHash": {
                                "type": "string"
                              },
                              "utxoEndTimestamp": {
                                "type": "number"
                              },
                              "utxoStartTimestamp": {
                                "type": "number"
                              },
                              "utxoType": {
                                "type": "string",
                                "enum": [
                                  "STAKE",
                                  "TRANSFER"
                                ]
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "amount",
                              "assetId",
                              "blockNumber",
                              "blockTimestamp",
                              "outputIndex",
                              "txHash",
                              "utxoType"
                            ]
                          }
                        },
                        "emittedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "amount": {
                                "type": "string",
                                "deprecated": true
                              },
                              "assetId": {
                                "type": "string",
                                "deprecated": true
                              },
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockTimestamp": {
                                "type": "number"
                              },
                              "consumingBlockNumber": {
                                "type": "string"
                              },
                              "consumingBlockTimestamp": {
                                "type": "number"
                              },
                              "platformLocktime": {
                                "type": "number"
                              },
                              "outputIndex": {
                                "type": "number"
                              },
                              "rewardType": {
                                "type": "string",
                                "enum": [
                                  "VALIDATOR",
                                  "DELEGATOR",
                                  "VALIDATOR_FEE"
                                ]
                              },
                              "stakeableLocktime": {
                                "type": "number"
                              },
                              "staked": {
                                "type": "boolean"
                              },
                              "threshold": {
                                "type": "number"
                              },
                              "txHash": {
                                "type": "string"
                              },
                              "utxoEndTimestamp": {
                                "type": "number"
                              },
                              "utxoStartTimestamp": {
                                "type": "number"
                              },
                              "utxoType": {
                                "type": "string",
                                "enum": [
                                  "STAKE",
                                  "TRANSFER"
                                ]
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "amount",
                              "assetId",
                              "blockNumber",
                              "blockTimestamp",
                              "outputIndex",
                              "txHash",
                              "utxoType"
                            ]
                          }
                        },
                        "sourceChain": {
                          "type": "string",
                          "description": "Source chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "destinationChain": {
                          "type": "string",
                          "description": "Destination chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "value": {
                          "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountBurned": {
                          "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountStaked": {
                          "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID. Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "startTimestamp": {
                          "type": "number",
                          "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                        },
                        "endTimestamp": {
                          "type": "number",
                          "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                        },
                        "delegationFeePercent": {
                          "type": "string",
                          "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx"
                        },
                        "nodeId": {
                          "type": "string",
                          "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx, CreateChainTx, CreateSubnetTx"
                        },
                        "estimatedReward": {
                          "type": "string",
                          "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                        },
                        "rewardTxHash": {
                          "type": "string"
                        },
                        "rewardAddresses": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "memo": {
                          "type": "string"
                        },
                        "stakingTxHash": {
                          "type": "string",
                          "description": "Present for RewardValidatorTx"
                        },
                        "subnetOwnershipInfo": {
                          "description": "Subnet owner details for the CreateSubnetTx or TransferSubnetOwnershipTx",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "locktime": {
                                  "type": "number",
                                  "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                                  "example": 0
                                },
                                "threshold": {
                                  "type": "number",
                                  "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                                  "example": 1
                                },
                                "addresses": {
                                  "description": "Addresses that are eligible to sign the Subnet update transactions.",
                                  "example": [
                                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "locktime",
                                "threshold",
                                "addresses"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "txHash",
                        "txType",
                        "blockTimestamp",
                        "blockNumber",
                        "blockHash",
                        "consumedUtxos",
                        "emittedUtxos",
                        "value",
                        "amountBurned",
                        "amountStaked"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string",
                          "description": "Unique ID for this transaction.",
                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                        },
                        "chainFormat": {
                          "type": "string",
                          "description": "Represents chain format this transaction is included in.",
                          "enum": [
                            "non-linear",
                            "linear"
                          ],
                          "example": "non-linear"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                          "example": 1600762738
                        },
                        "txType": {
                          "example": "BaseTx",
                          "type": "string",
                          "description": "Type of transaction.",
                          "enum": [
                            "BaseTx",
                            "CreateAssetTx",
                            "OperationTx",
                            "ImportTx",
                            "ExportTx",
                            "UNKNOWN"
                          ]
                        },
                        "memo": {
                          "type": "string",
                          "description": "Hex encoded memo bytes for this transaction.",
                          "example": "0x546865204176616c616e6368652050726f6a656374"
                        },
                        "consumedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        },
                        "emittedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        },
                        "amountUnlocked": {
                          "description": "Assets unlocked by inputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountCreated": {
                          "description": "Assets created by outputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "sourceChain": {
                          "type": "string",
                          "description": "Source chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "destinationChain": {
                          "type": "string",
                          "description": "Destination chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "assetCreated": {
                          "description": "AssetAmount details of the asset created in CreateAssetTx",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "assetId": {
                                  "type": "string",
                                  "description": "Unique ID for an asset.",
                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this asset.",
                                  "example": "Avalanche"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Symbol for this asset (max 4 characters).",
                                  "example": "AVAX"
                                },
                                "denomination": {
                                  "type": "number",
                                  "description": "Denomination of this asset to represent fungibility.",
                                  "example": 9
                                },
                                "type": {
                                  "example": "secp256k1",
                                  "type": "string",
                                  "description": "Type of asset like SECP256K1 or NFT.",
                                  "enum": [
                                    "secp256k1",
                                    "nft"
                                  ]
                                },
                                "createdAtTimestamp": {
                                  "type": "number",
                                  "description": "Timestamp in seconds this asset was created on.",
                                  "example": 1675444720
                                },
                                "cap": {
                                  "example": "fixed",
                                  "type": "string",
                                  "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                  "enum": [
                                    "fixed",
                                    "variable"
                                  ]
                                }
                              },
                              "required": [
                                "assetId",
                                "name",
                                "symbol",
                                "denomination",
                                "type",
                                "createdAtTimestamp",
                                "cap"
                              ]
                            }
                          ]
                        },
                        "vertices": {
                          "description": "A transaction on X-Chain can be accepted over multiple vertices.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "hash": {
                                "type": "string",
                                "description": "Vertex ID of the vertex this transaction belongs to.",
                                "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                              },
                              "height": {
                                "type": "number",
                                "description": "Vertex height of the vertex this transaction belongs to.",
                                "example": 1961
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Timestamp in seconds this vertex was accepted.",
                                "example": 1600762738
                              }
                            },
                            "required": [
                              "hash",
                              "height",
                              "timestamp"
                            ]
                          }
                        }
                      },
                      "required": [
                        "txHash",
                        "chainFormat",
                        "timestamp",
                        "txType",
                        "memo",
                        "consumedUtxos",
                        "emittedUtxos",
                        "amountUnlocked",
                        "amountCreated",
                        "vertices"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string",
                          "description": "Unique ID for this transaction.",
                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                        },
                        "chainFormat": {
                          "type": "string",
                          "description": "Represents chain format this transaction is included in.",
                          "enum": [
                            "non-linear",
                            "linear"
                          ],
                          "example": "non-linear"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                          "example": 1600762738
                        },
                        "txType": {
                          "example": "BaseTx",
                          "type": "string",
                          "description": "Type of transaction.",
                          "enum": [
                            "BaseTx",
                            "CreateAssetTx",
                            "OperationTx",
                            "ImportTx",
                            "ExportTx",
                            "UNKNOWN"
                          ]
                        },
                        "memo": {
                          "type": "string",
                          "description": "Hex encoded memo bytes for this transaction.",
                          "example": "0x546865204176616c616e6368652050726f6a656374"
                        },
                        "consumedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        },
                        "emittedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        },
                        "amountUnlocked": {
                          "description": "Assets unlocked by inputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountCreated": {
                          "description": "Assets created by outputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "sourceChain": {
                          "type": "string",
                          "description": "Source chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "destinationChain": {
                          "type": "string",
                          "description": "Destination chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "assetCreated": {
                          "description": "AssetAmount details of the asset created in CreateAssetTx",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "assetId": {
                                  "type": "string",
                                  "description": "Unique ID for an asset.",
                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this asset.",
                                  "example": "Avalanche"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Symbol for this asset (max 4 characters).",
                                  "example": "AVAX"
                                },
                                "denomination": {
                                  "type": "number",
                                  "description": "Denomination of this asset to represent fungibility.",
                                  "example": 9
                                },
                                "type": {
                                  "example": "secp256k1",
                                  "type": "string",
                                  "description": "Type of asset like SECP256K1 or NFT.",
                                  "enum": [
                                    "secp256k1",
                                    "nft"
                                  ]
                                },
                                "createdAtTimestamp": {
                                  "type": "number",
                                  "description": "Timestamp in seconds this asset was created on.",
                                  "example": 1675444720
                                },
                                "cap": {
                                  "example": "fixed",
                                  "type": "string",
                                  "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                  "enum": [
                                    "fixed",
                                    "variable"
                                  ]
                                }
                              },
                              "required": [
                                "assetId",
                                "name",
                                "symbol",
                                "denomination",
                                "type",
                                "createdAtTimestamp",
                                "cap"
                              ]
                            }
                          ]
                        },
                        "blockHeight": {
                          "type": "number",
                          "description": "Height of the block this transaction belongs to.",
                          "example": 1005
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "Hash of the block this transaction belongs to.",
                          "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                        }
                      },
                      "required": [
                        "txHash",
                        "chainFormat",
                        "timestamp",
                        "txType",
                        "memo",
                        "consumedUtxos",
                        "emittedUtxos",
                        "amountUnlocked",
                        "amountCreated",
                        "blockHeight",
                        "blockHash"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string",
                          "description": "Unique ID for this transaction.",
                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                        },
                        "blockHeight": {
                          "type": "number",
                          "description": "Height of the block this transaction belongs to.",
                          "example": 1005
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "Hash of the block this transaction belongs to.",
                          "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Latest timestamp in seconds this transaction was accepted.",
                          "example": 1600762738
                        },
                        "memo": {
                          "type": "string",
                          "description": "Hex encoded memo bytes for this transaction.",
                          "example": "0x546865204176616c616e6368652050726f6a656374"
                        },
                        "amountUnlocked": {
                          "description": "Assets unlocked by inputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountCreated": {
                          "description": "Assets created by outputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "sourceChain": {
                          "type": "string",
                          "description": "Source chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "destinationChain": {
                          "type": "string",
                          "description": "Destination chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "txType": {
                          "type": "string",
                          "description": "Type of transaction.",
                          "enum": [
                            "ExportTx"
                          ],
                          "example": "ExportTx"
                        },
                        "evmInputs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fromAddress": {
                                "type": "string",
                                "description": "EVM address from which the asset is exported in ExportTx.",
                                "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                              },
                              "asset": {
                                "description": "AssetAmount details for the asset being transferred.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "assetId": {
                                        "type": "string",
                                        "description": "Unique ID for an asset.",
                                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of this asset.",
                                        "example": "Avalanche"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "Symbol for this asset (max 4 characters).",
                                        "example": "AVAX"
                                      },
                                      "denomination": {
                                        "type": "number",
                                        "description": "Denomination of this asset to represent fungibility.",
                                        "example": 9
                                      },
                                      "type": {
                                        "example": "secp256k1",
                                        "type": "string",
                                        "description": "Type of asset like SECP256K1 or NFT.",
                                        "enum": [
                                          "secp256k1",
                                          "nft"
                                        ]
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount of the asset.",
                                        "example": "5001000"
                                      }
                                    },
                                    "required": [
                                      "assetId",
                                      "name",
                                      "symbol",
                                      "denomination",
                                      "type",
                                      "amount"
                                    ]
                                  }
                                ]
                              },
                              "credentials": {
                                "description": "Credentials that signed this transaction.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "fromAddress",
                              "asset",
                              "credentials"
                            ]
                          }
                        },
                        "emittedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        }
                      },
                      "required": [
                        "txHash",
                        "blockHeight",
                        "blockHash",
                        "timestamp",
                        "memo",
                        "amountUnlocked",
                        "amountCreated",
                        "sourceChain",
                        "destinationChain",
                        "txType",
                        "evmInputs",
                        "emittedUtxos"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string",
                          "description": "Unique ID for this transaction.",
                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                        },
                        "blockHeight": {
                          "type": "number",
                          "description": "Height of the block this transaction belongs to.",
                          "example": 1005
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "Hash of the block this transaction belongs to.",
                          "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Latest timestamp in seconds this transaction was accepted.",
                          "example": 1600762738
                        },
                        "memo": {
                          "type": "string",
                          "description": "Hex encoded memo bytes for this transaction.",
                          "example": "0x546865204176616c616e6368652050726f6a656374"
                        },
                        "amountUnlocked": {
                          "description": "Assets unlocked by inputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "amountCreated": {
                          "description": "Assets created by outputs of this transaction.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          }
                        },
                        "sourceChain": {
                          "type": "string",
                          "description": "Source chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "destinationChain": {
                          "type": "string",
                          "description": "Destination chain for an atomic transaction.",
                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                        },
                        "txType": {
                          "type": "string",
                          "description": "Type of transaction.",
                          "enum": [
                            "ImportTx"
                          ],
                          "example": "ImportTx"
                        },
                        "evmOutputs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "toAddress": {
                                "type": "string",
                                "description": "EVM address to which the asset is imported in ImportTx",
                                "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                              },
                              "asset": {
                                "description": "AssetAmount details for the asset being transferred.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "assetId": {
                                        "type": "string",
                                        "description": "Unique ID for an asset.",
                                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of this asset.",
                                        "example": "Avalanche"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "Symbol for this asset (max 4 characters).",
                                        "example": "AVAX"
                                      },
                                      "denomination": {
                                        "type": "number",
                                        "description": "Denomination of this asset to represent fungibility.",
                                        "example": 9
                                      },
                                      "type": {
                                        "example": "secp256k1",
                                        "type": "string",
                                        "description": "Type of asset like SECP256K1 or NFT.",
                                        "enum": [
                                          "secp256k1",
                                          "nft"
                                        ]
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount of the asset.",
                                        "example": "5001000"
                                      }
                                    },
                                    "required": [
                                      "assetId",
                                      "name",
                                      "symbol",
                                      "denomination",
                                      "type",
                                      "amount"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "toAddress",
                              "asset"
                            ]
                          }
                        },
                        "consumedUtxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        }
                      },
                      "required": [
                        "txHash",
                        "blockHeight",
                        "blockHash",
                        "timestamp",
                        "memo",
                        "amountUnlocked",
                        "amountCreated",
                        "sourceChain",
                        "destinationChain",
                        "txType",
                        "evmOutputs",
                        "consumedUtxos"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Transactions"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/transactions": {
      "get": {
        "operationId": "listLatestPrimaryNetworkTransactions",
        "summary": "List latest transactions",
        "description": "Lists the latest transactions on one of the Primary Network chains.\n\nTransactions are filterable by addresses, txTypes, and timestamps. When querying for latest transactions without an address parameter, filtering by txTypes and timestamps is not supported. An address filter must be provided to utilize txTypes and timestamp filters.\n\nGiven that each transaction may return a large number of UTXO objects, bounded only by the maximum transaction size, the query may return less transactions than the provided page size. The result will contain less results than the page size if the number of utxos contained in the resulting transactions reach a performance threshold.",
        "parameters": [
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\".",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txTypes",
            "required": false,
            "in": "query",
            "example": "AddValidatorTx",
            "description": "Query param for filtering items based on transaction types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "enum": [
                  "AddValidatorTx",
                  "AddSubnetValidatorTx",
                  "AddDelegatorTx",
                  "CreateChainTx",
                  "CreateSubnetTx",
                  "ImportTx",
                  "ExportTx",
                  "AdvanceTimeTx",
                  "RewardValidatorTx",
                  "RemoveSubnetValidatorTx",
                  "TransformSubnetTx",
                  "AddPermissionlessValidatorTx",
                  "AddPermissionlessDelegatorTx",
                  "BaseTx",
                  "TransferSubnetOwnershipTx",
                  "UNKNOWN",
                  "CreateAssetTx",
                  "OperationTx"
                ]
              }
            }
          },
          {
            "name": "startTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items after a specific timestamp.",
            "example": 1689541049,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "endTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items before a specific timestamp.",
            "example": 1689800249,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "nextPageToken": {
                          "type": "string",
                          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string",
                                "description": "A P-Chain transaction hash.",
                                "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP"
                              },
                              "txType": {
                                "example": "AddDelegatorTx",
                                "type": "string",
                                "enum": [
                                  "AddValidatorTx",
                                  "AddSubnetValidatorTx",
                                  "AddDelegatorTx",
                                  "CreateChainTx",
                                  "CreateSubnetTx",
                                  "ImportTx",
                                  "ExportTx",
                                  "AdvanceTimeTx",
                                  "RewardValidatorTx",
                                  "RemoveSubnetValidatorTx",
                                  "TransformSubnetTx",
                                  "AddPermissionlessValidatorTx",
                                  "AddPermissionlessDelegatorTx",
                                  "BaseTx",
                                  "TransferSubnetOwnershipTx",
                                  "UNKNOWN"
                                ]
                              },
                              "blockTimestamp": {
                                "type": "number",
                                "description": "The block finality timestamp.",
                                "example": 1648672486
                              },
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockHash": {
                                "type": "string"
                              },
                              "consumedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "deprecated": true
                                    },
                                    "assetId": {
                                      "type": "string",
                                      "deprecated": true
                                    },
                                    "blockNumber": {
                                      "type": "string"
                                    },
                                    "blockTimestamp": {
                                      "type": "number"
                                    },
                                    "consumingBlockNumber": {
                                      "type": "string"
                                    },
                                    "consumingBlockTimestamp": {
                                      "type": "number"
                                    },
                                    "platformLocktime": {
                                      "type": "number"
                                    },
                                    "outputIndex": {
                                      "type": "number"
                                    },
                                    "rewardType": {
                                      "type": "string",
                                      "enum": [
                                        "VALIDATOR",
                                        "DELEGATOR",
                                        "VALIDATOR_FEE"
                                      ]
                                    },
                                    "stakeableLocktime": {
                                      "type": "number"
                                    },
                                    "staked": {
                                      "type": "boolean"
                                    },
                                    "threshold": {
                                      "type": "number"
                                    },
                                    "txHash": {
                                      "type": "string"
                                    },
                                    "utxoEndTimestamp": {
                                      "type": "number"
                                    },
                                    "utxoStartTimestamp": {
                                      "type": "number"
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "enum": [
                                        "STAKE",
                                        "TRANSFER"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "amount",
                                    "assetId",
                                    "blockNumber",
                                    "blockTimestamp",
                                    "outputIndex",
                                    "txHash",
                                    "utxoType"
                                  ]
                                }
                              },
                              "emittedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "deprecated": true
                                    },
                                    "assetId": {
                                      "type": "string",
                                      "deprecated": true
                                    },
                                    "blockNumber": {
                                      "type": "string"
                                    },
                                    "blockTimestamp": {
                                      "type": "number"
                                    },
                                    "consumingBlockNumber": {
                                      "type": "string"
                                    },
                                    "consumingBlockTimestamp": {
                                      "type": "number"
                                    },
                                    "platformLocktime": {
                                      "type": "number"
                                    },
                                    "outputIndex": {
                                      "type": "number"
                                    },
                                    "rewardType": {
                                      "type": "string",
                                      "enum": [
                                        "VALIDATOR",
                                        "DELEGATOR",
                                        "VALIDATOR_FEE"
                                      ]
                                    },
                                    "stakeableLocktime": {
                                      "type": "number"
                                    },
                                    "staked": {
                                      "type": "boolean"
                                    },
                                    "threshold": {
                                      "type": "number"
                                    },
                                    "txHash": {
                                      "type": "string"
                                    },
                                    "utxoEndTimestamp": {
                                      "type": "number"
                                    },
                                    "utxoStartTimestamp": {
                                      "type": "number"
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "enum": [
                                        "STAKE",
                                        "TRANSFER"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "amount",
                                    "assetId",
                                    "blockNumber",
                                    "blockTimestamp",
                                    "outputIndex",
                                    "txHash",
                                    "utxoType"
                                  ]
                                }
                              },
                              "sourceChain": {
                                "type": "string",
                                "description": "Source chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "destinationChain": {
                                "type": "string",
                                "description": "Destination chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "value": {
                                "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "amountBurned": {
                                "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "amountStaked": {
                                "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID. Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "startTimestamp": {
                                "type": "number",
                                "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                              },
                              "endTimestamp": {
                                "type": "number",
                                "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                              },
                              "delegationFeePercent": {
                                "type": "string",
                                "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx"
                              },
                              "nodeId": {
                                "type": "string",
                                "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx, CreateChainTx, CreateSubnetTx"
                              },
                              "estimatedReward": {
                                "type": "string",
                                "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                              },
                              "rewardTxHash": {
                                "type": "string"
                              },
                              "rewardAddresses": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "memo": {
                                "type": "string"
                              },
                              "stakingTxHash": {
                                "type": "string",
                                "description": "Present for RewardValidatorTx"
                              },
                              "subnetOwnershipInfo": {
                                "description": "Subnet owner details for the CreateSubnetTx or TransferSubnetOwnershipTx",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "locktime": {
                                        "type": "number",
                                        "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                                        "example": 0
                                      },
                                      "threshold": {
                                        "type": "number",
                                        "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                                        "example": 1
                                      },
                                      "addresses": {
                                        "description": "Addresses that are eligible to sign the Subnet update transactions.",
                                        "example": [
                                          "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "locktime",
                                      "threshold",
                                      "addresses"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "txType",
                              "blockTimestamp",
                              "blockNumber",
                              "blockHash",
                              "consumedUtxos",
                              "emittedUtxos",
                              "value",
                              "amountBurned",
                              "amountStaked"
                            ]
                          }
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "transactions",
                        "chainInfo"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "nextPageToken": {
                          "type": "string",
                          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string",
                                    "description": "Unique ID for this transaction.",
                                    "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                  },
                                  "chainFormat": {
                                    "type": "string",
                                    "description": "Represents chain format this transaction is included in.",
                                    "enum": [
                                      "non-linear",
                                      "linear"
                                    ],
                                    "example": "non-linear"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                                    "example": 1600762738
                                  },
                                  "txType": {
                                    "example": "BaseTx",
                                    "type": "string",
                                    "description": "Type of transaction.",
                                    "enum": [
                                      "BaseTx",
                                      "CreateAssetTx",
                                      "OperationTx",
                                      "ImportTx",
                                      "ExportTx",
                                      "UNKNOWN"
                                    ]
                                  },
                                  "memo": {
                                    "type": "string",
                                    "description": "Hex encoded memo bytes for this transaction.",
                                    "example": "0x546865204176616c616e6368652050726f6a656374"
                                  },
                                  "consumedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  },
                                  "emittedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  },
                                  "amountUnlocked": {
                                    "description": "Assets unlocked by inputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "amountCreated": {
                                    "description": "Assets created by outputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "sourceChain": {
                                    "type": "string",
                                    "description": "Source chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "destinationChain": {
                                    "type": "string",
                                    "description": "Destination chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "assetCreated": {
                                    "description": "AssetAmount details of the asset created in CreateAssetTx",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "assetId": {
                                            "type": "string",
                                            "description": "Unique ID for an asset.",
                                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of this asset.",
                                            "example": "Avalanche"
                                          },
                                          "symbol": {
                                            "type": "string",
                                            "description": "Symbol for this asset (max 4 characters).",
                                            "example": "AVAX"
                                          },
                                          "denomination": {
                                            "type": "number",
                                            "description": "Denomination of this asset to represent fungibility.",
                                            "example": 9
                                          },
                                          "type": {
                                            "example": "secp256k1",
                                            "type": "string",
                                            "description": "Type of asset like SECP256K1 or NFT.",
                                            "enum": [
                                              "secp256k1",
                                              "nft"
                                            ]
                                          },
                                          "createdAtTimestamp": {
                                            "type": "number",
                                            "description": "Timestamp in seconds this asset was created on.",
                                            "example": 1675444720
                                          },
                                          "cap": {
                                            "example": "fixed",
                                            "type": "string",
                                            "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                            "enum": [
                                              "fixed",
                                              "variable"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "assetId",
                                          "name",
                                          "symbol",
                                          "denomination",
                                          "type",
                                          "createdAtTimestamp",
                                          "cap"
                                        ]
                                      }
                                    ]
                                  },
                                  "vertices": {
                                    "description": "A transaction on X-Chain can be accepted over multiple vertices.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hash": {
                                          "type": "string",
                                          "description": "Vertex ID of the vertex this transaction belongs to.",
                                          "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                                        },
                                        "height": {
                                          "type": "number",
                                          "description": "Vertex height of the vertex this transaction belongs to.",
                                          "example": 1961
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Timestamp in seconds this vertex was accepted.",
                                          "example": 1600762738
                                        }
                                      },
                                      "required": [
                                        "hash",
                                        "height",
                                        "timestamp"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "chainFormat",
                                  "timestamp",
                                  "txType",
                                  "memo",
                                  "consumedUtxos",
                                  "emittedUtxos",
                                  "amountUnlocked",
                                  "amountCreated",
                                  "vertices"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string",
                                    "description": "Unique ID for this transaction.",
                                    "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                  },
                                  "chainFormat": {
                                    "type": "string",
                                    "description": "Represents chain format this transaction is included in.",
                                    "enum": [
                                      "non-linear",
                                      "linear"
                                    ],
                                    "example": "non-linear"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                                    "example": 1600762738
                                  },
                                  "txType": {
                                    "example": "BaseTx",
                                    "type": "string",
                                    "description": "Type of transaction.",
                                    "enum": [
                                      "BaseTx",
                                      "CreateAssetTx",
                                      "OperationTx",
                                      "ImportTx",
                                      "ExportTx",
                                      "UNKNOWN"
                                    ]
                                  },
                                  "memo": {
                                    "type": "string",
                                    "description": "Hex encoded memo bytes for this transaction.",
                                    "example": "0x546865204176616c616e6368652050726f6a656374"
                                  },
                                  "consumedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  },
                                  "emittedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  },
                                  "amountUnlocked": {
                                    "description": "Assets unlocked by inputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "amountCreated": {
                                    "description": "Assets created by outputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "sourceChain": {
                                    "type": "string",
                                    "description": "Source chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "destinationChain": {
                                    "type": "string",
                                    "description": "Destination chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "assetCreated": {
                                    "description": "AssetAmount details of the asset created in CreateAssetTx",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "assetId": {
                                            "type": "string",
                                            "description": "Unique ID for an asset.",
                                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of this asset.",
                                            "example": "Avalanche"
                                          },
                                          "symbol": {
                                            "type": "string",
                                            "description": "Symbol for this asset (max 4 characters).",
                                            "example": "AVAX"
                                          },
                                          "denomination": {
                                            "type": "number",
                                            "description": "Denomination of this asset to represent fungibility.",
                                            "example": 9
                                          },
                                          "type": {
                                            "example": "secp256k1",
                                            "type": "string",
                                            "description": "Type of asset like SECP256K1 or NFT.",
                                            "enum": [
                                              "secp256k1",
                                              "nft"
                                            ]
                                          },
                                          "createdAtTimestamp": {
                                            "type": "number",
                                            "description": "Timestamp in seconds this asset was created on.",
                                            "example": 1675444720
                                          },
                                          "cap": {
                                            "example": "fixed",
                                            "type": "string",
                                            "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                            "enum": [
                                              "fixed",
                                              "variable"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "assetId",
                                          "name",
                                          "symbol",
                                          "denomination",
                                          "type",
                                          "createdAtTimestamp",
                                          "cap"
                                        ]
                                      }
                                    ]
                                  },
                                  "blockHeight": {
                                    "type": "number",
                                    "description": "Height of the block this transaction belongs to.",
                                    "example": 1005
                                  },
                                  "blockHash": {
                                    "type": "string",
                                    "description": "Hash of the block this transaction belongs to.",
                                    "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "chainFormat",
                                  "timestamp",
                                  "txType",
                                  "memo",
                                  "consumedUtxos",
                                  "emittedUtxos",
                                  "amountUnlocked",
                                  "amountCreated",
                                  "blockHeight",
                                  "blockHash"
                                ]
                              }
                            ]
                          }
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "transactions",
                        "chainInfo"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "nextPageToken": {
                          "type": "string",
                          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string",
                                    "description": "Unique ID for this transaction.",
                                    "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                  },
                                  "blockHeight": {
                                    "type": "number",
                                    "description": "Height of the block this transaction belongs to.",
                                    "example": 1005
                                  },
                                  "blockHash": {
                                    "type": "string",
                                    "description": "Hash of the block this transaction belongs to.",
                                    "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Latest timestamp in seconds this transaction was accepted.",
                                    "example": 1600762738
                                  },
                                  "memo": {
                                    "type": "string",
                                    "description": "Hex encoded memo bytes for this transaction.",
                                    "example": "0x546865204176616c616e6368652050726f6a656374"
                                  },
                                  "amountUnlocked": {
                                    "description": "Assets unlocked by inputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "amountCreated": {
                                    "description": "Assets created by outputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "sourceChain": {
                                    "type": "string",
                                    "description": "Source chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "destinationChain": {
                                    "type": "string",
                                    "description": "Destination chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "txType": {
                                    "type": "string",
                                    "description": "Type of transaction.",
                                    "enum": [
                                      "ExportTx"
                                    ],
                                    "example": "ExportTx"
                                  },
                                  "evmInputs": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "fromAddress": {
                                          "type": "string",
                                          "description": "EVM address from which the asset is exported in ExportTx.",
                                          "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                                        },
                                        "asset": {
                                          "description": "AssetAmount details for the asset being transferred.",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "assetId": {
                                                  "type": "string",
                                                  "description": "Unique ID for an asset.",
                                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of this asset.",
                                                  "example": "Avalanche"
                                                },
                                                "symbol": {
                                                  "type": "string",
                                                  "description": "Symbol for this asset (max 4 characters).",
                                                  "example": "AVAX"
                                                },
                                                "denomination": {
                                                  "type": "number",
                                                  "description": "Denomination of this asset to represent fungibility.",
                                                  "example": 9
                                                },
                                                "type": {
                                                  "example": "secp256k1",
                                                  "type": "string",
                                                  "description": "Type of asset like SECP256K1 or NFT.",
                                                  "enum": [
                                                    "secp256k1",
                                                    "nft"
                                                  ]
                                                },
                                                "amount": {
                                                  "type": "string",
                                                  "description": "Amount of the asset.",
                                                  "example": "5001000"
                                                }
                                              },
                                              "required": [
                                                "assetId",
                                                "name",
                                                "symbol",
                                                "denomination",
                                                "type",
                                                "amount"
                                              ]
                                            }
                                          ]
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed this transaction.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "fromAddress",
                                        "asset",
                                        "credentials"
                                      ]
                                    }
                                  },
                                  "emittedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "blockHeight",
                                  "blockHash",
                                  "timestamp",
                                  "memo",
                                  "amountUnlocked",
                                  "amountCreated",
                                  "sourceChain",
                                  "destinationChain",
                                  "txType",
                                  "evmInputs",
                                  "emittedUtxos"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string",
                                    "description": "Unique ID for this transaction.",
                                    "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                  },
                                  "blockHeight": {
                                    "type": "number",
                                    "description": "Height of the block this transaction belongs to.",
                                    "example": 1005
                                  },
                                  "blockHash": {
                                    "type": "string",
                                    "description": "Hash of the block this transaction belongs to.",
                                    "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Latest timestamp in seconds this transaction was accepted.",
                                    "example": 1600762738
                                  },
                                  "memo": {
                                    "type": "string",
                                    "description": "Hex encoded memo bytes for this transaction.",
                                    "example": "0x546865204176616c616e6368652050726f6a656374"
                                  },
                                  "amountUnlocked": {
                                    "description": "Assets unlocked by inputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "amountCreated": {
                                    "description": "Assets created by outputs of this transaction.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    }
                                  },
                                  "sourceChain": {
                                    "type": "string",
                                    "description": "Source chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "destinationChain": {
                                    "type": "string",
                                    "description": "Destination chain for an atomic transaction.",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "txType": {
                                    "type": "string",
                                    "description": "Type of transaction.",
                                    "enum": [
                                      "ImportTx"
                                    ],
                                    "example": "ImportTx"
                                  },
                                  "evmOutputs": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "toAddress": {
                                          "type": "string",
                                          "description": "EVM address to which the asset is imported in ImportTx",
                                          "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                                        },
                                        "asset": {
                                          "description": "AssetAmount details for the asset being transferred.",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "assetId": {
                                                  "type": "string",
                                                  "description": "Unique ID for an asset.",
                                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of this asset.",
                                                  "example": "Avalanche"
                                                },
                                                "symbol": {
                                                  "type": "string",
                                                  "description": "Symbol for this asset (max 4 characters).",
                                                  "example": "AVAX"
                                                },
                                                "denomination": {
                                                  "type": "number",
                                                  "description": "Denomination of this asset to represent fungibility.",
                                                  "example": 9
                                                },
                                                "type": {
                                                  "example": "secp256k1",
                                                  "type": "string",
                                                  "description": "Type of asset like SECP256K1 or NFT.",
                                                  "enum": [
                                                    "secp256k1",
                                                    "nft"
                                                  ]
                                                },
                                                "amount": {
                                                  "type": "string",
                                                  "description": "Amount of the asset.",
                                                  "example": "5001000"
                                                }
                                              },
                                              "required": [
                                                "assetId",
                                                "name",
                                                "symbol",
                                                "denomination",
                                                "type",
                                                "amount"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "toAddress",
                                        "asset"
                                      ]
                                    }
                                  },
                                  "consumedUtxos": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "addresses": {
                                          "description": "Addresses that are eligible to sign the consumption of this output.",
                                          "example": [
                                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "asset": {
                                          "type": "object",
                                          "properties": {
                                            "assetId": {
                                              "type": "string",
                                              "description": "Unique ID for an asset.",
                                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of this asset.",
                                              "example": "Avalanche"
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "Symbol for this asset (max 4 characters).",
                                              "example": "AVAX"
                                            },
                                            "denomination": {
                                              "type": "number",
                                              "description": "Denomination of this asset to represent fungibility.",
                                              "example": 9
                                            },
                                            "type": {
                                              "example": "secp256k1",
                                              "type": "string",
                                              "description": "Type of asset like SECP256K1 or NFT.",
                                              "enum": [
                                                "secp256k1",
                                                "nft"
                                              ]
                                            },
                                            "amount": {
                                              "type": "string",
                                              "description": "Amount of the asset.",
                                              "example": "5001000"
                                            }
                                          },
                                          "required": [
                                            "assetId",
                                            "name",
                                            "symbol",
                                            "denomination",
                                            "type",
                                            "amount"
                                          ]
                                        },
                                        "consumedOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is consumed on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "consumingTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that consumed this output.",
                                          "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                        },
                                        "createdOnChainId": {
                                          "type": "string",
                                          "description": "Blockchain ID on which this output is created on.",
                                          "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                        },
                                        "utxoId": {
                                          "type": "string",
                                          "description": "UTXO ID for this output.",
                                          "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                        },
                                        "consumingTxTimestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this output was consumed.",
                                          "example": 1599696000
                                        },
                                        "creationTxHash": {
                                          "type": "string",
                                          "description": "Transaction ID that created this output.",
                                          "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                        },
                                        "credentials": {
                                          "description": "Credentials that signed the transaction to consume this utxo",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "signature": {
                                                "type": "string",
                                                "description": "Signature provided to consume the output.",
                                                "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                              },
                                              "publicKey": {
                                                "type": "string",
                                                "description": "Public key associated with the signature.",
                                                "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                              }
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "number",
                                          "description": "Index representing the minting set for the NFT mint output."
                                        },
                                        "locktime": {
                                          "type": "number",
                                          "description": "Locktime in seconds after which this output can be consumed.",
                                          "example": 0
                                        },
                                        "outputIndex": {
                                          "type": "string",
                                          "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                          "example": "38"
                                        },
                                        "payload": {
                                          "type": "string",
                                          "description": "Hex encoded data for NFT assets."
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "description": "Minimum number of signatures required to consume this output.",
                                          "example": 1
                                        },
                                        "timestamp": {
                                          "type": "number",
                                          "description": "Unix timestamp in seconds at which this outptut was created.",
                                          "example": 1599696000
                                        },
                                        "utxoType": {
                                          "type": "string",
                                          "description": "Type of output.",
                                          "example": "mint"
                                        }
                                      },
                                      "required": [
                                        "addresses",
                                        "asset",
                                        "consumedOnChainId",
                                        "createdOnChainId",
                                        "utxoId",
                                        "creationTxHash",
                                        "locktime",
                                        "outputIndex",
                                        "threshold",
                                        "timestamp",
                                        "utxoType"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "blockHeight",
                                  "blockHash",
                                  "timestamp",
                                  "memo",
                                  "amountUnlocked",
                                  "amountCreated",
                                  "sourceChain",
                                  "destinationChain",
                                  "txType",
                                  "evmOutputs",
                                  "consumedUtxos"
                                ]
                              }
                            ]
                          }
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "transactions",
                        "chainInfo"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Transactions"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/transactions:listStaking": {
      "get": {
        "operationId": "listActivePrimaryNetworkStakingTransactions",
        "summary": "List staking transactions",
        "description": "Lists active staking transactions on the P-Chain for the supplied addresses.",
        "parameters": [
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\".",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txTypes",
            "required": false,
            "in": "query",
            "example": "AddValidatorTx",
            "description": "Query param for filtering items based on transaction types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "enum": [
                  "AddValidatorTx",
                  "AddSubnetValidatorTx",
                  "AddDelegatorTx",
                  "CreateChainTx",
                  "CreateSubnetTx",
                  "ImportTx",
                  "ExportTx",
                  "AdvanceTimeTx",
                  "RewardValidatorTx",
                  "RemoveSubnetValidatorTx",
                  "TransformSubnetTx",
                  "AddPermissionlessValidatorTx",
                  "AddPermissionlessDelegatorTx",
                  "BaseTx",
                  "TransferSubnetOwnershipTx",
                  "UNKNOWN",
                  "CreateAssetTx",
                  "OperationTx"
                ]
              }
            }
          },
          {
            "name": "startTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items after a specific timestamp.",
            "example": 1689541049,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "endTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items before a specific timestamp.",
            "example": 1689800249,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "p-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "txHash": {
                            "type": "string",
                            "description": "A P-Chain transaction hash.",
                            "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP"
                          },
                          "txType": {
                            "example": "AddDelegatorTx",
                            "type": "string",
                            "enum": [
                              "AddValidatorTx",
                              "AddSubnetValidatorTx",
                              "AddDelegatorTx",
                              "CreateChainTx",
                              "CreateSubnetTx",
                              "ImportTx",
                              "ExportTx",
                              "AdvanceTimeTx",
                              "RewardValidatorTx",
                              "RemoveSubnetValidatorTx",
                              "TransformSubnetTx",
                              "AddPermissionlessValidatorTx",
                              "AddPermissionlessDelegatorTx",
                              "BaseTx",
                              "TransferSubnetOwnershipTx",
                              "UNKNOWN"
                            ]
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockNumber": {
                            "type": "string"
                          },
                          "blockHash": {
                            "type": "string"
                          },
                          "consumedUtxos": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addresses": {
                                  "description": "Addresses that are eligible to sign the consumption of this output.",
                                  "example": [
                                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "asset": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                },
                                "consumedOnChainId": {
                                  "type": "string",
                                  "description": "Blockchain ID on which this output is consumed on.",
                                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                },
                                "consumingTxHash": {
                                  "type": "string",
                                  "description": "Transaction ID that consumed this output.",
                                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                },
                                "createdOnChainId": {
                                  "type": "string",
                                  "description": "Blockchain ID on which this output is created on.",
                                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                },
                                "utxoId": {
                                  "type": "string",
                                  "description": "UTXO ID for this output.",
                                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                },
                                "amount": {
                                  "type": "string",
                                  "deprecated": true
                                },
                                "assetId": {
                                  "type": "string",
                                  "deprecated": true
                                },
                                "blockNumber": {
                                  "type": "string"
                                },
                                "blockTimestamp": {
                                  "type": "number"
                                },
                                "consumingBlockNumber": {
                                  "type": "string"
                                },
                                "consumingBlockTimestamp": {
                                  "type": "number"
                                },
                                "platformLocktime": {
                                  "type": "number"
                                },
                                "outputIndex": {
                                  "type": "number"
                                },
                                "rewardType": {
                                  "type": "string",
                                  "enum": [
                                    "VALIDATOR",
                                    "DELEGATOR",
                                    "VALIDATOR_FEE"
                                  ]
                                },
                                "stakeableLocktime": {
                                  "type": "number"
                                },
                                "staked": {
                                  "type": "boolean"
                                },
                                "threshold": {
                                  "type": "number"
                                },
                                "txHash": {
                                  "type": "string"
                                },
                                "utxoEndTimestamp": {
                                  "type": "number"
                                },
                                "utxoStartTimestamp": {
                                  "type": "number"
                                },
                                "utxoType": {
                                  "type": "string",
                                  "enum": [
                                    "STAKE",
                                    "TRANSFER"
                                  ]
                                }
                              },
                              "required": [
                                "addresses",
                                "asset",
                                "consumedOnChainId",
                                "createdOnChainId",
                                "utxoId",
                                "amount",
                                "assetId",
                                "blockNumber",
                                "blockTimestamp",
                                "outputIndex",
                                "txHash",
                                "utxoType"
                              ]
                            }
                          },
                          "emittedUtxos": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addresses": {
                                  "description": "Addresses that are eligible to sign the consumption of this output.",
                                  "example": [
                                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "asset": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                },
                                "consumedOnChainId": {
                                  "type": "string",
                                  "description": "Blockchain ID on which this output is consumed on.",
                                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                },
                                "consumingTxHash": {
                                  "type": "string",
                                  "description": "Transaction ID that consumed this output.",
                                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                },
                                "createdOnChainId": {
                                  "type": "string",
                                  "description": "Blockchain ID on which this output is created on.",
                                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                },
                                "utxoId": {
                                  "type": "string",
                                  "description": "UTXO ID for this output.",
                                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                },
                                "amount": {
                                  "type": "string",
                                  "deprecated": true
                                },
                                "assetId": {
                                  "type": "string",
                                  "deprecated": true
                                },
                                "blockNumber": {
                                  "type": "string"
                                },
                                "blockTimestamp": {
                                  "type": "number"
                                },
                                "consumingBlockNumber": {
                                  "type": "string"
                                },
                                "consumingBlockTimestamp": {
                                  "type": "number"
                                },
                                "platformLocktime": {
                                  "type": "number"
                                },
                                "outputIndex": {
                                  "type": "number"
                                },
                                "rewardType": {
                                  "type": "string",
                                  "enum": [
                                    "VALIDATOR",
                                    "DELEGATOR",
                                    "VALIDATOR_FEE"
                                  ]
                                },
                                "stakeableLocktime": {
                                  "type": "number"
                                },
                                "staked": {
                                  "type": "boolean"
                                },
                                "threshold": {
                                  "type": "number"
                                },
                                "txHash": {
                                  "type": "string"
                                },
                                "utxoEndTimestamp": {
                                  "type": "number"
                                },
                                "utxoStartTimestamp": {
                                  "type": "number"
                                },
                                "utxoType": {
                                  "type": "string",
                                  "enum": [
                                    "STAKE",
                                    "TRANSFER"
                                  ]
                                }
                              },
                              "required": [
                                "addresses",
                                "asset",
                                "consumedOnChainId",
                                "createdOnChainId",
                                "utxoId",
                                "amount",
                                "assetId",
                                "blockNumber",
                                "blockTimestamp",
                                "outputIndex",
                                "txHash",
                                "utxoType"
                              ]
                            }
                          },
                          "sourceChain": {
                            "type": "string",
                            "description": "Source chain for an atomic transaction.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "destinationChain": {
                            "type": "string",
                            "description": "Destination chain for an atomic transaction.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "value": {
                            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "assetId": {
                                  "type": "string",
                                  "description": "Unique ID for an asset.",
                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this asset.",
                                  "example": "Avalanche"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Symbol for this asset (max 4 characters).",
                                  "example": "AVAX"
                                },
                                "denomination": {
                                  "type": "number",
                                  "description": "Denomination of this asset to represent fungibility.",
                                  "example": 9
                                },
                                "type": {
                                  "example": "secp256k1",
                                  "type": "string",
                                  "description": "Type of asset like SECP256K1 or NFT.",
                                  "enum": [
                                    "secp256k1",
                                    "nft"
                                  ]
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "Amount of the asset.",
                                  "example": "5001000"
                                }
                              },
                              "required": [
                                "assetId",
                                "name",
                                "symbol",
                                "denomination",
                                "type",
                                "amount"
                              ]
                            }
                          },
                          "amountBurned": {
                            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "assetId": {
                                  "type": "string",
                                  "description": "Unique ID for an asset.",
                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this asset.",
                                  "example": "Avalanche"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Symbol for this asset (max 4 characters).",
                                  "example": "AVAX"
                                },
                                "denomination": {
                                  "type": "number",
                                  "description": "Denomination of this asset to represent fungibility.",
                                  "example": 9
                                },
                                "type": {
                                  "example": "secp256k1",
                                  "type": "string",
                                  "description": "Type of asset like SECP256K1 or NFT.",
                                  "enum": [
                                    "secp256k1",
                                    "nft"
                                  ]
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "Amount of the asset.",
                                  "example": "5001000"
                                }
                              },
                              "required": [
                                "assetId",
                                "name",
                                "symbol",
                                "denomination",
                                "type",
                                "amount"
                              ]
                            }
                          },
                          "amountStaked": {
                            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID. Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "assetId": {
                                  "type": "string",
                                  "description": "Unique ID for an asset.",
                                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this asset.",
                                  "example": "Avalanche"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Symbol for this asset (max 4 characters).",
                                  "example": "AVAX"
                                },
                                "denomination": {
                                  "type": "number",
                                  "description": "Denomination of this asset to represent fungibility.",
                                  "example": 9
                                },
                                "type": {
                                  "example": "secp256k1",
                                  "type": "string",
                                  "description": "Type of asset like SECP256K1 or NFT.",
                                  "enum": [
                                    "secp256k1",
                                    "nft"
                                  ]
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "Amount of the asset.",
                                  "example": "5001000"
                                }
                              },
                              "required": [
                                "assetId",
                                "name",
                                "symbol",
                                "denomination",
                                "type",
                                "amount"
                              ]
                            }
                          },
                          "startTimestamp": {
                            "type": "number",
                            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                          },
                          "endTimestamp": {
                            "type": "number",
                            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                          },
                          "delegationFeePercent": {
                            "type": "string",
                            "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx"
                          },
                          "nodeId": {
                            "type": "string",
                            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx, CreateChainTx, CreateSubnetTx"
                          },
                          "estimatedReward": {
                            "type": "string",
                            "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                          },
                          "rewardTxHash": {
                            "type": "string"
                          },
                          "rewardAddresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "memo": {
                            "type": "string"
                          },
                          "stakingTxHash": {
                            "type": "string",
                            "description": "Present for RewardValidatorTx"
                          },
                          "subnetOwnershipInfo": {
                            "description": "Subnet owner details for the CreateSubnetTx or TransferSubnetOwnershipTx",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "locktime": {
                                    "type": "number",
                                    "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                                    "example": 0
                                  },
                                  "threshold": {
                                    "type": "number",
                                    "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                                    "example": 1
                                  },
                                  "addresses": {
                                    "description": "Addresses that are eligible to sign the Subnet update transactions.",
                                    "example": [
                                      "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "locktime",
                                  "threshold",
                                  "addresses"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "txHash",
                          "txType",
                          "blockTimestamp",
                          "blockNumber",
                          "blockHash",
                          "consumedUtxos",
                          "emittedUtxos",
                          "value",
                          "amountBurned",
                          "amountStaked"
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "transactions",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Transactions"
        ]
      }
    },
    "/v1/networks/{network}/rewards:listPending": {
      "get": {
        "operationId": "listPendingPrimaryNetworkRewards",
        "summary": "List pending rewards",
        "description": "Lists pending rewards on the Primary Network for the supplied addresses.",
        "parameters": [
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\". One of addresses or nodeIds is required.",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "nodeIds",
            "required": false,
            "in": "query",
            "description": "A comma separated list of node ids to filter by. One of addresses or nodeIds is required.",
            "example": "NodeID-111111111111111111116DBWJs,NodeID-222222222222222222227DBWJs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "pendingRewards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "An array of P-Chain wallet addresses.",
                            "example": [
                              "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "txHash": {
                            "type": "string"
                          },
                          "amountStaked": {
                            "type": "string"
                          },
                          "nodeId": {
                            "type": "string"
                          },
                          "startTimestamp": {
                            "type": "number"
                          },
                          "endTimestamp": {
                            "type": "number"
                          },
                          "rewardType": {
                            "type": "string",
                            "enum": [
                              "VALIDATOR",
                              "DELEGATOR",
                              "VALIDATOR_FEE"
                            ]
                          },
                          "progress": {
                            "type": "number"
                          },
                          "estimatedReward": {
                            "description": "An object containing P-chain Asset basic info and the amount of that Asset ID.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "addresses",
                          "txHash",
                          "amountStaked",
                          "nodeId",
                          "startTimestamp",
                          "endTimestamp",
                          "rewardType",
                          "progress",
                          "estimatedReward"
                        ]
                      }
                    }
                  },
                  "required": [
                    "pendingRewards"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Rewards"
        ]
      }
    },
    "/v1/networks/{network}/rewards": {
      "get": {
        "operationId": "listHistoricalPrimaryNetworkRewards",
        "summary": "List historical rewards",
        "description": "Lists historical rewards on the Primary Network for the supplied addresses.",
        "parameters": [
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\". Optional, but at least one of addresses or nodeIds is required.",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "nodeIds",
            "required": false,
            "in": "query",
            "description": "A comma separated list of node ids to filter by. Optional, but at least one of addresses or nodeIds is required.",
            "example": "NodeID-111111111111111111116DBWJs,NodeID-222222222222222222227DBWJs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "The currency that return values should use. Defaults to USD.",
            "example": "usd",
            "schema": {
              "type": "string",
              "description": "ISO 4217 currency code.",
              "enum": [
                "usd",
                "eur",
                "aud",
                "cad",
                "chf",
                "clp",
                "cny",
                "czk",
                "dkk",
                "gbp",
                "hkd",
                "huf",
                "jpy",
                "nzd"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "historicalRewards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "An array of P-Chain wallet addresses.",
                            "example": [
                              "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "txHash": {
                            "type": "string"
                          },
                          "amountStaked": {
                            "type": "string"
                          },
                          "nodeId": {
                            "type": "string"
                          },
                          "startTimestamp": {
                            "type": "number"
                          },
                          "endTimestamp": {
                            "type": "number"
                          },
                          "rewardType": {
                            "type": "string",
                            "enum": [
                              "VALIDATOR",
                              "DELEGATOR",
                              "VALIDATOR_FEE"
                            ]
                          },
                          "utxoId": {
                            "type": "string"
                          },
                          "outputIndex": {
                            "type": "number"
                          },
                          "reward": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              },
                              "historicalPrice": {
                                "description": "The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "currencyCode": {
                                        "type": "string",
                                        "description": "ISO 4217 currency code.",
                                        "enum": [
                                          "usd",
                                          "eur",
                                          "aud",
                                          "cad",
                                          "chf",
                                          "clp",
                                          "cny",
                                          "czk",
                                          "dkk",
                                          "gbp",
                                          "hkd",
                                          "huf",
                                          "jpy",
                                          "nzd"
                                        ],
                                        "example": "usd"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "Monetary value in base 10 decimals.",
                                        "example": "42.42"
                                      }
                                    },
                                    "required": [
                                      "currencyCode",
                                      "value"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "rewardTxHash": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "addresses",
                          "txHash",
                          "amountStaked",
                          "nodeId",
                          "startTimestamp",
                          "endTimestamp",
                          "rewardType",
                          "utxoId",
                          "outputIndex",
                          "reward",
                          "rewardTxHash"
                        ]
                      }
                    }
                  },
                  "required": [
                    "historicalRewards"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Rewards"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/utxos": {
      "get": {
        "operationId": "getUtxosByAddresses",
        "summary": "List UTXOs",
        "description": "Lists UTXOs on one of the Primary Network chains for the supplied addresses.",
        "parameters": [
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\".",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "assetId",
            "required": false,
            "in": "query",
            "description": "Asset ID for any asset (only applicable X-Chain)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeSpent",
            "required": false,
            "in": "query",
            "description": "Boolean filter to include spent UTXOs.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "nextPageToken": {
                          "type": "string",
                          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                        },
                        "utxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "amount": {
                                "type": "string",
                                "deprecated": true
                              },
                              "assetId": {
                                "type": "string",
                                "deprecated": true
                              },
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockTimestamp": {
                                "type": "number"
                              },
                              "consumingBlockNumber": {
                                "type": "string"
                              },
                              "consumingBlockTimestamp": {
                                "type": "number"
                              },
                              "platformLocktime": {
                                "type": "number"
                              },
                              "outputIndex": {
                                "type": "number"
                              },
                              "rewardType": {
                                "type": "string",
                                "enum": [
                                  "VALIDATOR",
                                  "DELEGATOR",
                                  "VALIDATOR_FEE"
                                ]
                              },
                              "stakeableLocktime": {
                                "type": "number"
                              },
                              "staked": {
                                "type": "boolean"
                              },
                              "threshold": {
                                "type": "number"
                              },
                              "txHash": {
                                "type": "string"
                              },
                              "utxoEndTimestamp": {
                                "type": "number"
                              },
                              "utxoStartTimestamp": {
                                "type": "number"
                              },
                              "utxoType": {
                                "type": "string",
                                "enum": [
                                  "STAKE",
                                  "TRANSFER"
                                ]
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "amount",
                              "assetId",
                              "blockNumber",
                              "blockTimestamp",
                              "outputIndex",
                              "txHash",
                              "utxoType"
                            ]
                          }
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "utxos",
                        "chainInfo"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "nextPageToken": {
                          "type": "string",
                          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                        },
                        "utxos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "addresses": {
                                "description": "Addresses that are eligible to sign the consumption of this output.",
                                "example": [
                                  "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              },
                              "consumedOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is consumed on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "consumingTxHash": {
                                "type": "string",
                                "description": "Transaction ID that consumed this output.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "createdOnChainId": {
                                "type": "string",
                                "description": "Blockchain ID on which this output is created on.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "utxoId": {
                                "type": "string",
                                "description": "UTXO ID for this output.",
                                "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                              },
                              "consumingTxTimestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this output was consumed.",
                                "example": 1599696000
                              },
                              "creationTxHash": {
                                "type": "string",
                                "description": "Transaction ID that created this output.",
                                "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                              },
                              "credentials": {
                                "description": "Credentials that signed the transaction to consume this utxo",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "description": "Signature provided to consume the output.",
                                      "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                    },
                                    "publicKey": {
                                      "type": "string",
                                      "description": "Public key associated with the signature.",
                                      "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                    }
                                  }
                                }
                              },
                              "groupId": {
                                "type": "number",
                                "description": "Index representing the minting set for the NFT mint output."
                              },
                              "locktime": {
                                "type": "number",
                                "description": "Locktime in seconds after which this output can be consumed.",
                                "example": 0
                              },
                              "outputIndex": {
                                "type": "string",
                                "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                "example": "38"
                              },
                              "payload": {
                                "type": "string",
                                "description": "Hex encoded data for NFT assets."
                              },
                              "threshold": {
                                "type": "number",
                                "description": "Minimum number of signatures required to consume this output.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Unix timestamp in seconds at which this outptut was created.",
                                "example": 1599696000
                              },
                              "utxoType": {
                                "type": "string",
                                "description": "Type of output.",
                                "example": "mint"
                              }
                            },
                            "required": [
                              "addresses",
                              "asset",
                              "consumedOnChainId",
                              "createdOnChainId",
                              "utxoId",
                              "creationTxHash",
                              "locktime",
                              "outputIndex",
                              "threshold",
                              "timestamp",
                              "utxoType"
                            ]
                          }
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "utxos",
                        "chainInfo"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network UTXOs"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/balances": {
      "get": {
        "operationId": "getBalancesByAddresses",
        "summary": "Get balances",
        "description": "Gets primary network balances for one of the Primary Network chains for the supplied addresses.\n\nC-Chain balances returned are only the shared atomic memory balance. For EVM balance, use the `/v1/chains/:chainId/addresses/:addressId/balances:getNative` endpoint.",
        "parameters": [
          {
            "name": "blockTimestamp",
            "required": false,
            "in": "query",
            "description": "An epoch timestamp in seconds. Balance will be calculated at this timestamp.",
            "example": "1599696000",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "addresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\".",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balances": {
                          "type": "object",
                          "properties": {
                            "unlockedUnstaked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is consumable by any transaction.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "unlockedStaked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that is consumable by any transaction when the staking period ends.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "lockedPlatform": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and not consumable by any transaction at the current time.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "lockedStakeable": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and only consumeable for staking transactions.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "lockedStaked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that will be locked when the staking period ends.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "pendingStaked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax whose staking period has not yet started.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "atomicMemoryUnlocked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of unlocked Avax in the atomic memory between P-Chain and other chain.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId",
                                  "status"
                                ]
                              }
                            },
                            "atomicMemoryLocked": {
                              "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of locked Avax in the atomic memory between P-Chain and other chain.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string",
                                    "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId",
                                  "status"
                                ]
                              }
                            }
                          },
                          "required": [
                            "unlockedUnstaked",
                            "unlockedStaked",
                            "lockedPlatform",
                            "lockedStakeable",
                            "lockedStaked",
                            "pendingStaked",
                            "atomicMemoryUnlocked",
                            "atomicMemoryLocked"
                          ]
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "balances",
                        "chainInfo"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "balances": {
                          "type": "object",
                          "properties": {
                            "locked": {
                              "description": "A list of objects containing X-chain Asset balance information.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "unlocked": {
                              "description": "A list of objects containing X-chain Asset balance information.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount"
                                ]
                              }
                            },
                            "atomicMemoryUnlocked": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId"
                                ]
                              }
                            },
                            "atomicMemoryLocked": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "locked",
                            "unlocked",
                            "atomicMemoryUnlocked",
                            "atomicMemoryLocked"
                          ]
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "balances",
                        "chainInfo"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "balances": {
                          "type": "object",
                          "properties": {
                            "atomicMemoryUnlocked": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId"
                                ]
                              }
                            },
                            "atomicMemoryLocked": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  },
                                  "utxoCount": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "sharedWithChainId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount",
                                  "utxoCount",
                                  "sharedWithChainId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "atomicMemoryUnlocked",
                            "atomicMemoryLocked"
                          ]
                        },
                        "chainInfo": {
                          "type": "object",
                          "properties": {
                            "chainName": {
                              "type": "string",
                              "enum": [
                                "p-chain",
                                "x-chain",
                                "c-chain"
                              ]
                            },
                            "network": {
                              "type": "string",
                              "enum": [
                                "mainnet",
                                "fuji"
                              ]
                            }
                          },
                          "required": [
                            "chainName",
                            "network"
                          ]
                        }
                      },
                      "required": [
                        "balances",
                        "chainInfo"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Balances"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/blocks/{blockId}": {
      "get": {
        "operationId": "getBlockById",
        "summary": "Get block",
        "description": "Gets a block by block height or block hash on one of the Primary Network chains.",
        "parameters": [
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "blockId",
            "required": true,
            "in": "path",
            "description": "A block identifier which is either a block number or the block hash.",
            "example": "5615di9ytxujackzaXNrVuWQy5y8Yrt8chPCscMr5Ku9YxJ1S",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "string"
                    },
                    "blockHash": {
                      "type": "string"
                    },
                    "parentHash": {
                      "type": "string"
                    },
                    "blockTimestamp": {
                      "type": "number"
                    },
                    "blockType": {
                      "type": "string"
                    },
                    "txCount": {
                      "type": "number"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "blockSizeBytes": {
                      "type": "number"
                    },
                    "currentSupply": {
                      "type": "string"
                    },
                    "proposerDetails": {
                      "type": "object",
                      "properties": {
                        "proposerId": {
                          "type": "string"
                        },
                        "proposerParentId": {
                          "type": "string"
                        },
                        "proposerNodeId": {
                          "type": "string"
                        },
                        "proposerPChainHeight": {
                          "type": "number"
                        },
                        "proposerTimestamp": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockHash",
                    "parentHash",
                    "blockTimestamp",
                    "blockType",
                    "txCount",
                    "transactions",
                    "blockSizeBytes"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Blocks"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/nodes/{nodeId}/blocks": {
      "get": {
        "operationId": "listPrimaryNetworkBlocksByNodeId",
        "summary": "List blocks proposed by node",
        "description": "Lists the latest blocks proposed by a given NodeID on one of the Primary Network chains.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "nodeId",
            "required": true,
            "in": "path",
            "description": "A primary network (P or X chain) nodeId.",
            "example": "NodeID-111111111111111111116DBWJs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "blocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string"
                          },
                          "blockHash": {
                            "type": "string"
                          },
                          "parentHash": {
                            "type": "string"
                          },
                          "blockTimestamp": {
                            "type": "number"
                          },
                          "blockType": {
                            "type": "string"
                          },
                          "txCount": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "blockSizeBytes": {
                            "type": "number"
                          },
                          "currentSupply": {
                            "type": "string"
                          },
                          "proposerDetails": {
                            "type": "object",
                            "properties": {
                              "proposerId": {
                                "type": "string"
                              },
                              "proposerParentId": {
                                "type": "string"
                              },
                              "proposerNodeId": {
                                "type": "string"
                              },
                              "proposerPChainHeight": {
                                "type": "number"
                              },
                              "proposerTimestamp": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockHash",
                          "parentHash",
                          "blockTimestamp",
                          "blockType",
                          "txCount",
                          "transactions",
                          "blockSizeBytes"
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "blocks",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Blocks"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/blocks": {
      "get": {
        "operationId": "listLatestPrimaryNetworkBlocks",
        "summary": "List latest blocks",
        "description": "Lists latest blocks on one of the Primary Network chains.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "p-chain",
            "schema": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "blocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string"
                          },
                          "blockHash": {
                            "type": "string"
                          },
                          "parentHash": {
                            "type": "string"
                          },
                          "blockTimestamp": {
                            "type": "number"
                          },
                          "blockType": {
                            "type": "string"
                          },
                          "txCount": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "blockSizeBytes": {
                            "type": "number"
                          },
                          "currentSupply": {
                            "type": "string"
                          },
                          "proposerDetails": {
                            "type": "object",
                            "properties": {
                              "proposerId": {
                                "type": "string"
                              },
                              "proposerParentId": {
                                "type": "string"
                              },
                              "proposerNodeId": {
                                "type": "string"
                              },
                              "proposerPChainHeight": {
                                "type": "number"
                              },
                              "proposerTimestamp": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockHash",
                          "parentHash",
                          "blockTimestamp",
                          "blockType",
                          "txCount",
                          "transactions",
                          "blockSizeBytes"
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "blocks",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Blocks"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/vertices": {
      "get": {
        "operationId": "listLatestXChainVertices",
        "summary": "List vertices",
        "description": "Lists latest vertices on the X-Chain.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "x-chain",
            "schema": {
              "type": "string",
              "enum": [
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "x-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "vertices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "vertexHash": {
                            "type": "string"
                          },
                          "parentHashes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "vertexHeight": {
                            "type": "number"
                          },
                          "vertexIndex": {
                            "type": "number"
                          },
                          "vertexTimestamp": {
                            "type": "number"
                          },
                          "txCount": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "vertexSizeBytes": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "vertexHash",
                          "parentHashes",
                          "vertexHeight",
                          "vertexIndex",
                          "vertexTimestamp",
                          "txCount",
                          "transactions",
                          "vertexSizeBytes"
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "vertices",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Vertices"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/vertices/{vertexHash}": {
      "get": {
        "operationId": "getVertexByHash",
        "summary": "Get vertex",
        "description": "Gets a single vertex on the X-Chain.",
        "parameters": [
          {
            "name": "vertexHash",
            "required": true,
            "in": "path",
            "description": "A vertex hash string.",
            "example": "haP1CW56cspZY7aEuqHNrtpvhqCaMTxQaYe6j5u2Mbn4L2Gqr",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "x-chain",
            "schema": {
              "type": "string",
              "enum": [
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "x-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vertexHash": {
                      "type": "string"
                    },
                    "parentHashes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vertexHeight": {
                      "type": "number"
                    },
                    "vertexIndex": {
                      "type": "number"
                    },
                    "vertexTimestamp": {
                      "type": "number"
                    },
                    "txCount": {
                      "type": "number"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vertexSizeBytes": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "vertexHash",
                    "parentHashes",
                    "vertexHeight",
                    "vertexIndex",
                    "vertexTimestamp",
                    "txCount",
                    "transactions",
                    "vertexSizeBytes"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Vertices"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/vertices:listByHeight": {
      "get": {
        "operationId": "getVertexByHeight",
        "summary": "List vertices by height",
        "description": "Lists vertices at the given vertex height on the X-Chain.",
        "parameters": [
          {
            "name": "vertexHeight",
            "required": true,
            "in": "query",
            "description": "The height of a vertex.",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 123
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "x-chain",
            "schema": {
              "type": "string",
              "enum": [
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "x-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "vertices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "vertexHash": {
                            "type": "string"
                          },
                          "parentHashes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "vertexHeight": {
                            "type": "number"
                          },
                          "vertexIndex": {
                            "type": "number"
                          },
                          "vertexTimestamp": {
                            "type": "number"
                          },
                          "txCount": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "vertexSizeBytes": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "vertexHash",
                          "parentHashes",
                          "vertexHeight",
                          "vertexIndex",
                          "vertexTimestamp",
                          "txCount",
                          "transactions",
                          "vertexSizeBytes"
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "vertices",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Vertices"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/assets/{assetId}": {
      "get": {
        "operationId": "getAssetDetails",
        "summary": "Get asset details",
        "description": "Gets asset details corresponding to the given asset id on the X-Chain.",
        "parameters": [
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "x-chain",
            "schema": {
              "type": "string",
              "enum": [
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "x-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "description": "Asset ID for any asset on X-Chain",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "createdAtTimestamp": {
                      "type": "number",
                      "description": "Timestamp in seconds this asset was created on.",
                      "example": 1675444720
                    },
                    "cap": {
                      "example": "fixed",
                      "type": "string",
                      "description": "Cap represents if an asset is a variable or fixed cap asset.",
                      "enum": [
                        "fixed",
                        "variable"
                      ]
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "createdAtTimestamp",
                    "cap"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/blockchains/{blockchainId}/assets/{assetId}/transactions": {
      "get": {
        "operationId": "listAssetTransactions",
        "summary": "List asset transactions",
        "description": "Lists asset transactions corresponding to the given asset id on the X-Chain.",
        "parameters": [
          {
            "name": "txTypes",
            "required": false,
            "in": "query",
            "example": "AddValidatorTx",
            "description": "Query param for filtering items based on transaction types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "enum": [
                  "AddValidatorTx",
                  "AddSubnetValidatorTx",
                  "AddDelegatorTx",
                  "CreateChainTx",
                  "CreateSubnetTx",
                  "ImportTx",
                  "ExportTx",
                  "AdvanceTimeTx",
                  "RewardValidatorTx",
                  "RemoveSubnetValidatorTx",
                  "TransformSubnetTx",
                  "AddPermissionlessValidatorTx",
                  "AddPermissionlessDelegatorTx",
                  "BaseTx",
                  "TransferSubnetOwnershipTx",
                  "UNKNOWN",
                  "CreateAssetTx",
                  "OperationTx"
                ]
              }
            }
          },
          {
            "name": "startTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items after a specific timestamp.",
            "example": 1689541049,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "endTimestamp",
            "required": false,
            "in": "query",
            "description": "Query param for retrieving items before a specific timestamp.",
            "example": 1689800249,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "blockchainId",
            "required": true,
            "in": "path",
            "description": "A primary network blockchain id or alias.",
            "example": "x-chain",
            "schema": {
              "type": "string",
              "enum": [
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "x-chain"
              ]
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "description": "Asset ID for any asset on X-Chain",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string",
                                "description": "Unique ID for this transaction.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "chainFormat": {
                                "type": "string",
                                "description": "Represents chain format this transaction is included in.",
                                "enum": [
                                  "non-linear",
                                  "linear"
                                ],
                                "example": "non-linear"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                                "example": 1600762738
                              },
                              "txType": {
                                "example": "BaseTx",
                                "type": "string",
                                "description": "Type of transaction.",
                                "enum": [
                                  "BaseTx",
                                  "CreateAssetTx",
                                  "OperationTx",
                                  "ImportTx",
                                  "ExportTx",
                                  "UNKNOWN"
                                ]
                              },
                              "memo": {
                                "type": "string",
                                "description": "Hex encoded memo bytes for this transaction.",
                                "example": "0x546865204176616c616e6368652050726f6a656374"
                              },
                              "consumedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "consumingTxTimestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this output was consumed.",
                                      "example": 1599696000
                                    },
                                    "creationTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that created this output.",
                                      "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                    },
                                    "credentials": {
                                      "description": "Credentials that signed the transaction to consume this utxo",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "signature": {
                                            "type": "string",
                                            "description": "Signature provided to consume the output.",
                                            "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                          },
                                          "publicKey": {
                                            "type": "string",
                                            "description": "Public key associated with the signature.",
                                            "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                          }
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "number",
                                      "description": "Index representing the minting set for the NFT mint output."
                                    },
                                    "locktime": {
                                      "type": "number",
                                      "description": "Locktime in seconds after which this output can be consumed.",
                                      "example": 0
                                    },
                                    "outputIndex": {
                                      "type": "string",
                                      "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                      "example": "38"
                                    },
                                    "payload": {
                                      "type": "string",
                                      "description": "Hex encoded data for NFT assets."
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "description": "Minimum number of signatures required to consume this output.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this outptut was created.",
                                      "example": 1599696000
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "description": "Type of output.",
                                      "example": "mint"
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "creationTxHash",
                                    "locktime",
                                    "outputIndex",
                                    "threshold",
                                    "timestamp",
                                    "utxoType"
                                  ]
                                }
                              },
                              "emittedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "consumingTxTimestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this output was consumed.",
                                      "example": 1599696000
                                    },
                                    "creationTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that created this output.",
                                      "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                    },
                                    "credentials": {
                                      "description": "Credentials that signed the transaction to consume this utxo",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "signature": {
                                            "type": "string",
                                            "description": "Signature provided to consume the output.",
                                            "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                          },
                                          "publicKey": {
                                            "type": "string",
                                            "description": "Public key associated with the signature.",
                                            "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                          }
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "number",
                                      "description": "Index representing the minting set for the NFT mint output."
                                    },
                                    "locktime": {
                                      "type": "number",
                                      "description": "Locktime in seconds after which this output can be consumed.",
                                      "example": 0
                                    },
                                    "outputIndex": {
                                      "type": "string",
                                      "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                      "example": "38"
                                    },
                                    "payload": {
                                      "type": "string",
                                      "description": "Hex encoded data for NFT assets."
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "description": "Minimum number of signatures required to consume this output.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this outptut was created.",
                                      "example": 1599696000
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "description": "Type of output.",
                                      "example": "mint"
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "creationTxHash",
                                    "locktime",
                                    "outputIndex",
                                    "threshold",
                                    "timestamp",
                                    "utxoType"
                                  ]
                                }
                              },
                              "amountUnlocked": {
                                "description": "Assets unlocked by inputs of this transaction.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "amountCreated": {
                                "description": "Assets created by outputs of this transaction.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "sourceChain": {
                                "type": "string",
                                "description": "Source chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "destinationChain": {
                                "type": "string",
                                "description": "Destination chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "assetCreated": {
                                "description": "AssetAmount details of the asset created in CreateAssetTx",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "assetId": {
                                        "type": "string",
                                        "description": "Unique ID for an asset.",
                                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of this asset.",
                                        "example": "Avalanche"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "Symbol for this asset (max 4 characters).",
                                        "example": "AVAX"
                                      },
                                      "denomination": {
                                        "type": "number",
                                        "description": "Denomination of this asset to represent fungibility.",
                                        "example": 9
                                      },
                                      "type": {
                                        "example": "secp256k1",
                                        "type": "string",
                                        "description": "Type of asset like SECP256K1 or NFT.",
                                        "enum": [
                                          "secp256k1",
                                          "nft"
                                        ]
                                      },
                                      "createdAtTimestamp": {
                                        "type": "number",
                                        "description": "Timestamp in seconds this asset was created on.",
                                        "example": 1675444720
                                      },
                                      "cap": {
                                        "example": "fixed",
                                        "type": "string",
                                        "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                        "enum": [
                                          "fixed",
                                          "variable"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "assetId",
                                      "name",
                                      "symbol",
                                      "denomination",
                                      "type",
                                      "createdAtTimestamp",
                                      "cap"
                                    ]
                                  }
                                ]
                              },
                              "vertices": {
                                "description": "A transaction on X-Chain can be accepted over multiple vertices.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hash": {
                                      "type": "string",
                                      "description": "Vertex ID of the vertex this transaction belongs to.",
                                      "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                                    },
                                    "height": {
                                      "type": "number",
                                      "description": "Vertex height of the vertex this transaction belongs to.",
                                      "example": 1961
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "description": "Timestamp in seconds this vertex was accepted.",
                                      "example": 1600762738
                                    }
                                  },
                                  "required": [
                                    "hash",
                                    "height",
                                    "timestamp"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "txHash",
                              "chainFormat",
                              "timestamp",
                              "txType",
                              "memo",
                              "consumedUtxos",
                              "emittedUtxos",
                              "amountUnlocked",
                              "amountCreated",
                              "vertices"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string",
                                "description": "Unique ID for this transaction.",
                                "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                              },
                              "chainFormat": {
                                "type": "string",
                                "description": "Represents chain format this transaction is included in.",
                                "enum": [
                                  "non-linear",
                                  "linear"
                                ],
                                "example": "non-linear"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                                "example": 1600762738
                              },
                              "txType": {
                                "example": "BaseTx",
                                "type": "string",
                                "description": "Type of transaction.",
                                "enum": [
                                  "BaseTx",
                                  "CreateAssetTx",
                                  "OperationTx",
                                  "ImportTx",
                                  "ExportTx",
                                  "UNKNOWN"
                                ]
                              },
                              "memo": {
                                "type": "string",
                                "description": "Hex encoded memo bytes for this transaction.",
                                "example": "0x546865204176616c616e6368652050726f6a656374"
                              },
                              "consumedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "consumingTxTimestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this output was consumed.",
                                      "example": 1599696000
                                    },
                                    "creationTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that created this output.",
                                      "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                    },
                                    "credentials": {
                                      "description": "Credentials that signed the transaction to consume this utxo",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "signature": {
                                            "type": "string",
                                            "description": "Signature provided to consume the output.",
                                            "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                          },
                                          "publicKey": {
                                            "type": "string",
                                            "description": "Public key associated with the signature.",
                                            "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                          }
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "number",
                                      "description": "Index representing the minting set for the NFT mint output."
                                    },
                                    "locktime": {
                                      "type": "number",
                                      "description": "Locktime in seconds after which this output can be consumed.",
                                      "example": 0
                                    },
                                    "outputIndex": {
                                      "type": "string",
                                      "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                      "example": "38"
                                    },
                                    "payload": {
                                      "type": "string",
                                      "description": "Hex encoded data for NFT assets."
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "description": "Minimum number of signatures required to consume this output.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this outptut was created.",
                                      "example": 1599696000
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "description": "Type of output.",
                                      "example": "mint"
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "creationTxHash",
                                    "locktime",
                                    "outputIndex",
                                    "threshold",
                                    "timestamp",
                                    "utxoType"
                                  ]
                                }
                              },
                              "emittedUtxos": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "Addresses that are eligible to sign the consumption of this output.",
                                      "example": [
                                        "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "assetId": {
                                          "type": "string",
                                          "description": "Unique ID for an asset.",
                                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of this asset.",
                                          "example": "Avalanche"
                                        },
                                        "symbol": {
                                          "type": "string",
                                          "description": "Symbol for this asset (max 4 characters).",
                                          "example": "AVAX"
                                        },
                                        "denomination": {
                                          "type": "number",
                                          "description": "Denomination of this asset to represent fungibility.",
                                          "example": 9
                                        },
                                        "type": {
                                          "example": "secp256k1",
                                          "type": "string",
                                          "description": "Type of asset like SECP256K1 or NFT.",
                                          "enum": [
                                            "secp256k1",
                                            "nft"
                                          ]
                                        },
                                        "amount": {
                                          "type": "string",
                                          "description": "Amount of the asset.",
                                          "example": "5001000"
                                        }
                                      },
                                      "required": [
                                        "assetId",
                                        "name",
                                        "symbol",
                                        "denomination",
                                        "type",
                                        "amount"
                                      ]
                                    },
                                    "consumedOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is consumed on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "consumingTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that consumed this output.",
                                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                                    },
                                    "createdOnChainId": {
                                      "type": "string",
                                      "description": "Blockchain ID on which this output is created on.",
                                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                                    },
                                    "utxoId": {
                                      "type": "string",
                                      "description": "UTXO ID for this output.",
                                      "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                                    },
                                    "consumingTxTimestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this output was consumed.",
                                      "example": 1599696000
                                    },
                                    "creationTxHash": {
                                      "type": "string",
                                      "description": "Transaction ID that created this output.",
                                      "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                                    },
                                    "credentials": {
                                      "description": "Credentials that signed the transaction to consume this utxo",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "signature": {
                                            "type": "string",
                                            "description": "Signature provided to consume the output.",
                                            "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                          },
                                          "publicKey": {
                                            "type": "string",
                                            "description": "Public key associated with the signature.",
                                            "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                          }
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "number",
                                      "description": "Index representing the minting set for the NFT mint output."
                                    },
                                    "locktime": {
                                      "type": "number",
                                      "description": "Locktime in seconds after which this output can be consumed.",
                                      "example": 0
                                    },
                                    "outputIndex": {
                                      "type": "string",
                                      "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                                      "example": "38"
                                    },
                                    "payload": {
                                      "type": "string",
                                      "description": "Hex encoded data for NFT assets."
                                    },
                                    "threshold": {
                                      "type": "number",
                                      "description": "Minimum number of signatures required to consume this output.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "description": "Unix timestamp in seconds at which this outptut was created.",
                                      "example": 1599696000
                                    },
                                    "utxoType": {
                                      "type": "string",
                                      "description": "Type of output.",
                                      "example": "mint"
                                    }
                                  },
                                  "required": [
                                    "addresses",
                                    "asset",
                                    "consumedOnChainId",
                                    "createdOnChainId",
                                    "utxoId",
                                    "creationTxHash",
                                    "locktime",
                                    "outputIndex",
                                    "threshold",
                                    "timestamp",
                                    "utxoType"
                                  ]
                                }
                              },
                              "amountUnlocked": {
                                "description": "Assets unlocked by inputs of this transaction.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "amountCreated": {
                                "description": "Assets created by outputs of this transaction.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "assetId": {
                                      "type": "string",
                                      "description": "Unique ID for an asset.",
                                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of this asset.",
                                      "example": "Avalanche"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Symbol for this asset (max 4 characters).",
                                      "example": "AVAX"
                                    },
                                    "denomination": {
                                      "type": "number",
                                      "description": "Denomination of this asset to represent fungibility.",
                                      "example": 9
                                    },
                                    "type": {
                                      "example": "secp256k1",
                                      "type": "string",
                                      "description": "Type of asset like SECP256K1 or NFT.",
                                      "enum": [
                                        "secp256k1",
                                        "nft"
                                      ]
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount of the asset.",
                                      "example": "5001000"
                                    }
                                  },
                                  "required": [
                                    "assetId",
                                    "name",
                                    "symbol",
                                    "denomination",
                                    "type",
                                    "amount"
                                  ]
                                }
                              },
                              "sourceChain": {
                                "type": "string",
                                "description": "Source chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "destinationChain": {
                                "type": "string",
                                "description": "Destination chain for an atomic transaction.",
                                "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                              },
                              "assetCreated": {
                                "description": "AssetAmount details of the asset created in CreateAssetTx",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "assetId": {
                                        "type": "string",
                                        "description": "Unique ID for an asset.",
                                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of this asset.",
                                        "example": "Avalanche"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "Symbol for this asset (max 4 characters).",
                                        "example": "AVAX"
                                      },
                                      "denomination": {
                                        "type": "number",
                                        "description": "Denomination of this asset to represent fungibility.",
                                        "example": 9
                                      },
                                      "type": {
                                        "example": "secp256k1",
                                        "type": "string",
                                        "description": "Type of asset like SECP256K1 or NFT.",
                                        "enum": [
                                          "secp256k1",
                                          "nft"
                                        ]
                                      },
                                      "createdAtTimestamp": {
                                        "type": "number",
                                        "description": "Timestamp in seconds this asset was created on.",
                                        "example": 1675444720
                                      },
                                      "cap": {
                                        "example": "fixed",
                                        "type": "string",
                                        "description": "Cap represents if an asset is a variable or fixed cap asset.",
                                        "enum": [
                                          "fixed",
                                          "variable"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "assetId",
                                      "name",
                                      "symbol",
                                      "denomination",
                                      "type",
                                      "createdAtTimestamp",
                                      "cap"
                                    ]
                                  }
                                ]
                              },
                              "blockHeight": {
                                "type": "number",
                                "description": "Height of the block this transaction belongs to.",
                                "example": 1005
                              },
                              "blockHash": {
                                "type": "string",
                                "description": "Hash of the block this transaction belongs to.",
                                "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                              }
                            },
                            "required": [
                              "txHash",
                              "chainFormat",
                              "timestamp",
                              "txType",
                              "memo",
                              "consumedUtxos",
                              "emittedUtxos",
                              "amountUnlocked",
                              "amountCreated",
                              "blockHeight",
                              "blockHash"
                            ]
                          }
                        ]
                      }
                    },
                    "chainInfo": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string",
                          "enum": [
                            "p-chain",
                            "x-chain",
                            "c-chain"
                          ]
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "mainnet",
                            "fuji"
                          ]
                        }
                      },
                      "required": [
                        "chainName",
                        "network"
                      ]
                    }
                  },
                  "required": [
                    "transactions",
                    "chainInfo"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network Transactions"
        ]
      }
    },
    "/v1/networks/{network}/addresses:listChainIds": {
      "get": {
        "operationId": "getChainIdsForAddresses",
        "summary": "Get chain interactions for addresses",
        "description": "Returns Primary Network chains that each address has touched in the form of an address mapped array. If an address has had any on-chain interaction for a chain, that chain's chain id will be returned.",
        "parameters": [
          {
            "name": "addresses",
            "required": true,
            "in": "query",
            "description": "A comma separated list of X-Chain or P-Chain wallet addresses, starting with \"avax\"/\"fuji\", \"P-avax\"/\"P-fuji\" or \"X-avax\"/\"X-fuji\".",
            "example": "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "blockchainIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "11111111111111111111111111111111LpoYY",
                                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp"
                              ]
                            }
                          }
                        },
                        "required": [
                          "address",
                          "blockchainIds"
                        ]
                      }
                    }
                  },
                  "required": [
                    "addresses"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}": {
      "get": {
        "operationId": "getNetworkDetails",
        "summary": "Get network details",
        "description": "Gets network details such as validator and delegator stats.",
        "parameters": [
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "validatorDetails": {
                      "type": "object",
                      "properties": {
                        "validatorCount": {
                          "type": "number"
                        },
                        "totalAmountStaked": {
                          "type": "string"
                        },
                        "estimatedAnnualStakingReward": {
                          "type": "string"
                        },
                        "stakingDistributionByVersion": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "validatorCount": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "version",
                              "amountStaked",
                              "validatorCount"
                            ]
                          }
                        },
                        "stakingRatio": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "validatorCount",
                        "totalAmountStaked",
                        "estimatedAnnualStakingReward",
                        "stakingDistributionByVersion",
                        "stakingRatio"
                      ]
                    },
                    "delegatorDetails": {
                      "type": "object",
                      "properties": {
                        "delegatorCount": {
                          "type": "number"
                        },
                        "totalAmountStaked": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "delegatorCount",
                        "totalAmountStaked"
                      ]
                    }
                  },
                  "required": [
                    "validatorDetails",
                    "delegatorDetails"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/blockchains": {
      "get": {
        "operationId": "listBlockchains",
        "summary": "List blockchains",
        "description": "Lists all blockchains registered on the network.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "blockchains": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createBlockTimestamp": {
                            "type": "number"
                          },
                          "createBlockNumber": {
                            "type": "string"
                          },
                          "blockchainId": {
                            "type": "string"
                          },
                          "vmId": {
                            "type": "string"
                          },
                          "subnetId": {
                            "type": "string"
                          },
                          "blockchainName": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "createBlockTimestamp",
                          "createBlockNumber",
                          "blockchainId",
                          "vmId",
                          "subnetId",
                          "blockchainName"
                        ]
                      }
                    }
                  },
                  "required": [
                    "blockchains"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/subnets": {
      "get": {
        "operationId": "listSubnets",
        "summary": "List subnets",
        "description": "Lists all subnets registered on the network.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "subnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createBlockTimestamp": {
                            "type": "number"
                          },
                          "createBlockIndex": {
                            "type": "string"
                          },
                          "subnetId": {
                            "type": "string"
                          },
                          "ownerAddresses": {
                            "deprecated": true,
                            "description": "This field is deprecated. Use subnetOwnershipInfo instead.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "threshold": {
                            "type": "number",
                            "deprecated": true,
                            "description": "This field is deprecated. Use subnetOwnershipInfo instead."
                          },
                          "locktime": {
                            "type": "number",
                            "deprecated": true,
                            "description": "This field is deprecated. Use subnetOwnershipInfo instead."
                          },
                          "subnetOwnershipInfo": {
                            "description": "Latest subnet owner details for this Subnet.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "locktime": {
                                    "type": "number",
                                    "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                                    "example": 0
                                  },
                                  "threshold": {
                                    "type": "number",
                                    "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                                    "example": 1
                                  },
                                  "addresses": {
                                    "description": "Addresses that are eligible to sign the Subnet update transactions.",
                                    "example": [
                                      "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "locktime",
                                  "threshold",
                                  "addresses"
                                ]
                              }
                            ]
                          },
                          "blockchains": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "blockchainId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "blockchainId"
                              ]
                            }
                          }
                        },
                        "required": [
                          "createBlockTimestamp",
                          "createBlockIndex",
                          "subnetId",
                          "ownerAddresses",
                          "threshold",
                          "locktime",
                          "subnetOwnershipInfo",
                          "blockchains"
                        ]
                      }
                    }
                  },
                  "required": [
                    "subnets"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/validators": {
      "get": {
        "operationId": "listValidators",
        "summary": "List validators",
        "description": "Lists details for validators. By default, returns details for all validators. Filterable by validator node ids and minimum delegation capacity.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "nodeIds",
            "required": false,
            "in": "query",
            "description": "A comma separated list of node ids to filter by.",
            "example": "NodeID-111111111111111111116DBWJs,NodeID-222222222222222222227DBWJs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Which property to sort by, in conjunction with sortOrder.\n\nNote: Delegation fee is only available for mainnet validators. Set `subnetId` to `11111111111111111111111111111111LpoYY`  to use this option.",
            "schema": {
              "type": "string",
              "enum": [
                "blockIndex",
                "delegationCapacity",
                "timeRemaining",
                "delegationFee",
                "uptimePerformance"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "validationStatus",
            "required": false,
            "in": "query",
            "description": "Validation status of the node.",
            "example": "completed",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "active",
                "pending",
                "removed"
              ]
            }
          },
          {
            "name": "minDelegationCapacity",
            "required": false,
            "in": "query",
            "description": "The minimum delegation capacity, in nAVAX, used to filter the set of nodes being returned. Accepts values between 0 and 720,000,000,000,000,000",
            "example": "0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxDelegationCapacity",
            "required": false,
            "in": "query",
            "description": "The maximum delegation capacity, in nAVAX, used to filter the set of nodes being returned. Accepts values between 0 and 720,000,000,000,000,000.",
            "example": "720000000000000000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minTimeRemaining",
            "required": false,
            "in": "query",
            "description": "The minimum validation time remaining, in seconds, used to filter the set of nodes being returned.",
            "example": 0,
            "schema": {
              "type": "number",
              "maximum": 2147483647,
              "minimum": 0
            }
          },
          {
            "name": "maxTimeRemaining",
            "required": false,
            "in": "query",
            "description": "The maximum validation time remaining, in seconds, used to filter the set of nodes being returned.",
            "example": 2147483647,
            "schema": {
              "type": "number",
              "maximum": 2147483647,
              "minimum": 0
            }
          },
          {
            "name": "minFeePercentage",
            "required": false,
            "in": "query",
            "description": "The minimum fee percentage, used to filter the set of nodes being returned. If this field is populated no subnet validations will be returned, as their fee percentage is null, since subnet delegations are not supported. Default is 2.0, as per the Avalanche spec.",
            "example": 2,
            "schema": {
              "type": "number",
              "maximum": 100,
              "minimum": 2
            }
          },
          {
            "name": "maxFeePercentage",
            "required": false,
            "in": "query",
            "description": "The maximum fee percentage, used to filter the set of nodes being returned. If this field is populated no subnet validations will be returned, as their fee percentage is null, since subnet delegations are not supported. Default is 100.0.",
            "example": 100,
            "schema": {
              "type": "number",
              "maximum": 100,
              "minimum": 2
            }
          },
          {
            "name": "minUptimePerformance",
            "required": false,
            "in": "query",
            "description": "The minimum node uptime performance percentage, which represents node health, used to filter the set of nodes being returned Default is 90.",
            "example": 90,
            "schema": {
              "type": "number",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "name": "maxUptimePerformance",
            "required": false,
            "in": "query",
            "description": "The maximum node uptime performance percentage, which represents node health, used to filter the set of nodes being returned. Default is 100.",
            "example": 100,
            "schema": {
              "type": "number",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "name": "subnetId",
            "required": false,
            "in": "query",
            "description": "The subnet ID to filter by. If not provided, then all subnets will be returned.",
            "example": "11111111111111111111111111111111LpoYY",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "validators": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "delegatorCount": {
                                "type": "number"
                              },
                              "rewards": {
                                "type": "object",
                                "properties": {
                                  "validationRewardAmount": {
                                    "type": "string"
                                  },
                                  "delegationRewardAmount": {
                                    "type": "string"
                                  },
                                  "rewardAddresses": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "rewardTxHash": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "validationRewardAmount",
                                  "delegationRewardAmount"
                                ]
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "delegatorCount",
                              "rewards",
                              "validationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "stakePercentage": {
                                "type": "number"
                              },
                              "delegatorCount": {
                                "type": "number"
                              },
                              "amountDelegated": {
                                "type": "string"
                              },
                              "uptimePerformance": {
                                "type": "number"
                              },
                              "avalancheGoVersion": {
                                "type": "string"
                              },
                              "delegationCapacity": {
                                "type": "string"
                              },
                              "potentialRewards": {
                                "type": "object",
                                "properties": {
                                  "validationRewardAmount": {
                                    "type": "string"
                                  },
                                  "delegationRewardAmount": {
                                    "type": "string"
                                  },
                                  "rewardAddresses": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "rewardTxHash": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "validationRewardAmount",
                                  "delegationRewardAmount"
                                ]
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "active"
                                ]
                              },
                              "validatorHealth": {
                                "type": "object",
                                "properties": {
                                  "reachabilityPercent": {
                                    "type": "number",
                                    "description": "Percent of requests responded to in last polling."
                                  },
                                  "benchedPChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percent of requests benched on the P-Chain in last polling."
                                  },
                                  "benchedXChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percentage of requests benched on the X-Chain in last polling."
                                  },
                                  "benchedCChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percentage of requests benched on the C-Chain in last polling."
                                  }
                                },
                                "required": [
                                  "reachabilityPercent",
                                  "benchedPChainRequestsPercent",
                                  "benchedXChainRequestsPercent",
                                  "benchedCChainRequestsPercent"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "stakePercentage",
                              "delegatorCount",
                              "uptimePerformance",
                              "potentialRewards",
                              "validationStatus",
                              "validatorHealth"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "validationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "removeTxHash": {
                                "type": "string"
                              },
                              "removeTimestamp": {
                                "type": "number"
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "removed"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "removeTxHash",
                              "removeTimestamp",
                              "validationStatus"
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "validationStatus",
                          "mapping": {
                            "active": "#/components/schemas/ActiveValidatorDetails",
                            "pending": "#/components/schemas/PendingValidatorDetails",
                            "completed": "#/components/schemas/CompletedValidatorDetails",
                            "removed": "#/components/schemas/RemovedValidatorDetails"
                          }
                        }
                      },
                      "description": "The list of validator Details."
                    }
                  },
                  "required": [
                    "validators"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/validators/{nodeId}": {
      "get": {
        "operationId": "getSingleValidatorDetails",
        "summary": "Get single validator details",
        "description": "List validator details for a single validator.  Filterable by validation status.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "nodeId",
            "required": true,
            "in": "path",
            "description": "A primary network (P or X chain) nodeId.",
            "example": "NodeID-111111111111111111116DBWJs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validationStatus",
            "required": false,
            "in": "query",
            "description": "Validation status of the node.",
            "example": "completed",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "active",
                "pending",
                "removed"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "validators": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "delegatorCount": {
                                "type": "number"
                              },
                              "rewards": {
                                "type": "object",
                                "properties": {
                                  "validationRewardAmount": {
                                    "type": "string"
                                  },
                                  "delegationRewardAmount": {
                                    "type": "string"
                                  },
                                  "rewardAddresses": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "rewardTxHash": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "validationRewardAmount",
                                  "delegationRewardAmount"
                                ]
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "delegatorCount",
                              "rewards",
                              "validationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "stakePercentage": {
                                "type": "number"
                              },
                              "delegatorCount": {
                                "type": "number"
                              },
                              "amountDelegated": {
                                "type": "string"
                              },
                              "uptimePerformance": {
                                "type": "number"
                              },
                              "avalancheGoVersion": {
                                "type": "string"
                              },
                              "delegationCapacity": {
                                "type": "string"
                              },
                              "potentialRewards": {
                                "type": "object",
                                "properties": {
                                  "validationRewardAmount": {
                                    "type": "string"
                                  },
                                  "delegationRewardAmount": {
                                    "type": "string"
                                  },
                                  "rewardAddresses": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "rewardTxHash": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "validationRewardAmount",
                                  "delegationRewardAmount"
                                ]
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "active"
                                ]
                              },
                              "validatorHealth": {
                                "type": "object",
                                "properties": {
                                  "reachabilityPercent": {
                                    "type": "number",
                                    "description": "Percent of requests responded to in last polling."
                                  },
                                  "benchedPChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percent of requests benched on the P-Chain in last polling."
                                  },
                                  "benchedXChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percentage of requests benched on the X-Chain in last polling."
                                  },
                                  "benchedCChainRequestsPercent": {
                                    "type": "number",
                                    "description": "Percentage of requests benched on the C-Chain in last polling."
                                  }
                                },
                                "required": [
                                  "reachabilityPercent",
                                  "benchedPChainRequestsPercent",
                                  "benchedXChainRequestsPercent",
                                  "benchedCChainRequestsPercent"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "stakePercentage",
                              "delegatorCount",
                              "uptimePerformance",
                              "potentialRewards",
                              "validationStatus",
                              "validatorHealth"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "validationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "subnetId": {
                                "type": "string"
                              },
                              "amountStaked": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "removeTxHash": {
                                "type": "string"
                              },
                              "removeTimestamp": {
                                "type": "number"
                              },
                              "validationStatus": {
                                "type": "string",
                                "enum": [
                                  "removed"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "subnetId",
                              "amountStaked",
                              "startTimestamp",
                              "endTimestamp",
                              "removeTxHash",
                              "removeTimestamp",
                              "validationStatus"
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "validationStatus",
                          "mapping": {
                            "active": "#/components/schemas/ActiveValidatorDetails",
                            "pending": "#/components/schemas/PendingValidatorDetails",
                            "completed": "#/components/schemas/CompletedValidatorDetails",
                            "removed": "#/components/schemas/RemovedValidatorDetails"
                          }
                        }
                      },
                      "description": "The list of validator Details."
                    }
                  },
                  "required": [
                    "validators"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/networks/{network}/delegators": {
      "get": {
        "operationId": "listDelegators",
        "summary": "List delegators",
        "description": "Lists details for delegators.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "rewardAddresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of reward addresses to filter by.",
            "example": "P-avax1679zrp3z9mf7z4an42ddq47qzj36zv6ga20vwl,P-avax1s7kd0kfndlz6mh3l0etrrcmkg5y366k8e0s6cc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "description": "Either mainnet or a testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "fuji"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "delegationStatus",
            "required": false,
            "in": "query",
            "description": "Delegation status of the node.",
            "example": "completed",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "active",
                "pending"
              ]
            }
          },
          {
            "name": "nodeIds",
            "required": false,
            "in": "query",
            "description": "A comma separated list of node ids to filter by.",
            "example": "NodeID-111111111111111111116DBWJs,NodeID-222222222222222222227DBWJs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "delegators": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "rewardAddresses": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "amountDelegated": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "grossReward": {
                                "type": "string"
                              },
                              "netReward": {
                                "type": "string"
                              },
                              "delegationStatus": {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "rewardAddresses",
                              "amountDelegated",
                              "delegationFee",
                              "startTimestamp",
                              "endTimestamp",
                              "grossReward",
                              "netReward",
                              "delegationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "rewardAddresses": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "amountDelegated": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "estimatedGrossReward": {
                                "type": "string"
                              },
                              "estimatedNetReward": {
                                "type": "string"
                              },
                              "delegationStatus": {
                                "type": "string",
                                "enum": [
                                  "active"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "rewardAddresses",
                              "amountDelegated",
                              "delegationFee",
                              "startTimestamp",
                              "endTimestamp",
                              "estimatedGrossReward",
                              "estimatedNetReward",
                              "delegationStatus"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "txHash": {
                                "type": "string"
                              },
                              "nodeId": {
                                "type": "string"
                              },
                              "rewardAddresses": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "amountDelegated": {
                                "type": "string"
                              },
                              "delegationFee": {
                                "type": "string"
                              },
                              "startTimestamp": {
                                "type": "number"
                              },
                              "endTimestamp": {
                                "type": "number"
                              },
                              "estimatedGrossReward": {
                                "type": "string"
                              },
                              "estimatedNetReward": {
                                "type": "string"
                              },
                              "delegationStatus": {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              }
                            },
                            "required": [
                              "txHash",
                              "nodeId",
                              "rewardAddresses",
                              "amountDelegated",
                              "delegationFee",
                              "startTimestamp",
                              "endTimestamp",
                              "estimatedGrossReward",
                              "estimatedNetReward",
                              "delegationStatus"
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "delegationStatus",
                          "mapping": {
                            "active": "#/components/schemas/ActiveDelegatorDetails",
                            "pending": "#/components/schemas/PendingDelegatorDetails",
                            "completed": "#/components/schemas/CompletedDelegatorDetails"
                          }
                        }
                      },
                      "description": "The list of Delegator Details."
                    }
                  },
                  "required": [
                    "delegators"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Primary Network"
        ]
      }
    },
    "/v1/webhooks": {
      "post": {
        "operationId": "registerWebhook",
        "summary": "Create a webhook",
        "description": "Create a new webhook.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "chainId": {
                    "type": "string"
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "address_activity"
                    ]
                  },
                  "metadata": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Ethereum address(es) for the address_activity event type",
                            "example": [
                              "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                            ],
                            "items": {
                              "type": "array"
                            },
                            "type": "array"
                          },
                          "eventSignatures": {
                            "description": "Array of hexadecimal strings of the event signatures.",
                            "example": [
                              "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "addresses"
                        ]
                      }
                    ]
                  },
                  "includeInternalTxs": {
                    "type": "boolean",
                    "description": "Whether to include traces in the webhook payload."
                  },
                  "includeLogs": {
                    "type": "boolean",
                    "description": "Whether to include logs in the webhook payload."
                  }
                },
                "required": [
                  "url",
                  "chainId",
                  "eventType",
                  "metadata"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "get": {
        "operationId": "listWebhooks",
        "summary": "List webhooks",
        "description": "Lists webhooks for the user.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": "active",
            "description": "Status of the webhook. Use \"active\" to return only active webhooks, \"inactive\" to return only inactive webhooks. Else if no status is provided, all configured webhooks will be returned.",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string",
                            "enum": [
                              "address_activity"
                            ]
                          },
                          "metadata": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "addresses": {
                                    "description": "Ethereum address(es) for the address_activity event type",
                                    "example": [
                                      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                                    ],
                                    "items": {
                                      "type": "array"
                                    },
                                    "type": "array"
                                  },
                                  "eventSignatures": {
                                    "description": "Array of hexadecimal strings of the event signatures.",
                                    "example": [
                                      "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "addresses"
                                ]
                              }
                            ]
                          },
                          "includeInternalTxs": {
                            "type": "boolean",
                            "description": "Whether to include traces in the webhook payload."
                          },
                          "includeLogs": {
                            "type": "boolean",
                            "description": "Whether to include logs in the webhook payload."
                          },
                          "url": {
                            "type": "string"
                          },
                          "chainId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "createdAt": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "eventType",
                          "metadata",
                          "url",
                          "chainId",
                          "status",
                          "createdAt",
                          "name",
                          "description"
                        ]
                      }
                    }
                  },
                  "required": [
                    "webhooks"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/v1/webhooks/{id}": {
      "get": {
        "operationId": "getWebhook",
        "summary": "Get a webhook by ID",
        "description": "Retrieves a webhook by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "delete": {
        "operationId": "deactivateWebhook",
        "summary": "Deactivate a webhook",
        "description": "Deactivates a webhook by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "patch": {
        "operationId": "updateWebhook",
        "summary": "Update a webhook",
        "description": "Updates an existing webhook.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ]
                  },
                  "includeInternalTxs": {
                    "type": "boolean"
                  },
                  "includeLogs": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/v1/webhooks:generateOrRotateSharedSecret": {
      "post": {
        "operationId": "generateSharedSecret",
        "summary": "Generate a shared secret",
        "description": "Generates a new shared secret.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "secret": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "secret"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/v1/webhooks:getSharedSecret": {
      "get": {
        "operationId": "getSharedSecret",
        "summary": "Get a shared secret",
        "description": "Get a previously generated shared secret.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "secret": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "secret"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/v1/webhooks/{id}/addresses": {
      "patch": {
        "operationId": "addAddressesToWebhook",
        "summary": "Add address(es) to a webhook",
        "description": "Adding address(es) to a given webhook.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "Ethereum address(es) for the address_activity event type",
                    "example": [
                      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                    ],
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "addresses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "delete": {
        "operationId": "removeAddressesFromWebhook",
        "summary": "Remove address(es) from a webhook",
        "description": "Removing address(es) from a given webhook.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "Ethereum address(es) for the address_activity event type",
                    "example": [
                      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                    ],
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "addresses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "address_activity"
                      ]
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "addresses": {
                              "description": "Ethereum address(es) for the address_activity event type",
                              "example": [
                                "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "eventSignatures": {
                              "description": "Array of hexadecimal strings of the event signatures.",
                              "example": [
                                "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "addresses"
                          ]
                        }
                      ]
                    },
                    "includeInternalTxs": {
                      "type": "boolean",
                      "description": "Whether to include traces in the webhook payload."
                    },
                    "includeLogs": {
                      "type": "boolean",
                      "description": "Whether to include logs in the webhook payload."
                    },
                    "url": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "eventType",
                    "metadata",
                    "url",
                    "chainId",
                    "status",
                    "createdAt",
                    "name",
                    "description"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "get": {
        "operationId": "getAddressesFromWebhook",
        "summary": "Get address(es) from a given webhook",
        "description": "Retrieving address(es) from a given webhook.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The webhook identifier.",
            "example": "f33de69c-d13b-4691-908f-870d6e2e6b04",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "totalAddresses": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "addresses",
                    "totalAddresses"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/v1/teleporter/messages/{messageId}": {
      "get": {
        "operationId": "getTeleporterMessage",
        "summary": "Get a teleporter message",
        "description": "Gets a teleporter message by message ID.",
        "parameters": [
          {
            "name": "messageId",
            "required": true,
            "in": "path",
            "description": "The message ID of the teleporter message.",
            "example": "acf1c8b06f9aec48e9fcbefbbe576ae8a7ca3b327fcae111396e7cc99956674d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "messageId": {
                          "type": "string"
                        },
                        "teleporterContractAddress": {
                          "type": "string"
                        },
                        "sourceBlockchainId": {
                          "type": "string"
                        },
                        "destinationBlockchainId": {
                          "type": "string"
                        },
                        "sourceEvmChainId": {
                          "type": "string"
                        },
                        "destinationEvmChainId": {
                          "type": "string"
                        },
                        "messageNonce": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "data": {
                          "type": "string"
                        },
                        "messageExecuted": {
                          "type": "boolean"
                        },
                        "receipts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "receivedMessageNonce": {
                                "type": "string"
                              },
                              "relayerRewardAddress": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "receivedMessageNonce",
                              "relayerRewardAddress"
                            ]
                          }
                        },
                        "receiptDelivered": {
                          "type": "boolean"
                        },
                        "rewardDetails": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            },
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "ercType": {
                              "type": "string",
                              "enum": [
                                "ERC-20"
                              ]
                            },
                            "price": {
                              "description": "The token price, if available.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currencyCode": {
                                      "type": "string",
                                      "description": "ISO 4217 currency code.",
                                      "enum": [
                                        "usd",
                                        "eur",
                                        "aud",
                                        "cad",
                                        "chf",
                                        "clp",
                                        "cny",
                                        "czk",
                                        "dkk",
                                        "gbp",
                                        "hkd",
                                        "huf",
                                        "jpy",
                                        "nzd"
                                      ],
                                      "example": "usd"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Monetary value in base 10 decimals.",
                                      "example": "42.42"
                                    }
                                  },
                                  "required": [
                                    "currencyCode",
                                    "value"
                                  ]
                                }
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "address",
                            "name",
                            "symbol",
                            "decimals",
                            "ercType",
                            "value"
                          ]
                        },
                        "sourceTransaction": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "number"
                            },
                            "gasSpent": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "txHash",
                            "timestamp",
                            "gasSpent"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending"
                          ]
                        }
                      },
                      "required": [
                        "messageId",
                        "teleporterContractAddress",
                        "sourceBlockchainId",
                        "destinationBlockchainId",
                        "sourceEvmChainId",
                        "destinationEvmChainId",
                        "messageNonce",
                        "from",
                        "to",
                        "messageExecuted",
                        "receipts",
                        "receiptDelivered",
                        "rewardDetails",
                        "sourceTransaction",
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "messageId": {
                          "type": "string"
                        },
                        "teleporterContractAddress": {
                          "type": "string"
                        },
                        "sourceBlockchainId": {
                          "type": "string"
                        },
                        "destinationBlockchainId": {
                          "type": "string"
                        },
                        "sourceEvmChainId": {
                          "type": "string"
                        },
                        "destinationEvmChainId": {
                          "type": "string"
                        },
                        "messageNonce": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "data": {
                          "type": "string"
                        },
                        "messageExecuted": {
                          "type": "boolean"
                        },
                        "receipts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "receivedMessageNonce": {
                                "type": "string"
                              },
                              "relayerRewardAddress": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "receivedMessageNonce",
                              "relayerRewardAddress"
                            ]
                          }
                        },
                        "receiptDelivered": {
                          "type": "boolean"
                        },
                        "rewardDetails": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            },
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "ercType": {
                              "type": "string",
                              "enum": [
                                "ERC-20"
                              ]
                            },
                            "price": {
                              "description": "The token price, if available.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currencyCode": {
                                      "type": "string",
                                      "description": "ISO 4217 currency code.",
                                      "enum": [
                                        "usd",
                                        "eur",
                                        "aud",
                                        "cad",
                                        "chf",
                                        "clp",
                                        "cny",
                                        "czk",
                                        "dkk",
                                        "gbp",
                                        "hkd",
                                        "huf",
                                        "jpy",
                                        "nzd"
                                      ],
                                      "example": "usd"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Monetary value in base 10 decimals.",
                                      "example": "42.42"
                                    }
                                  },
                                  "required": [
                                    "currencyCode",
                                    "value"
                                  ]
                                }
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "address",
                            "name",
                            "symbol",
                            "decimals",
                            "ercType",
                            "value"
                          ]
                        },
                        "sourceTransaction": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "number"
                            },
                            "gasSpent": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "txHash",
                            "timestamp",
                            "gasSpent"
                          ]
                        },
                        "destinationTransaction": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "number"
                            },
                            "gasSpent": {
                              "type": "string"
                            },
                            "rewardRedeemer": {
                              "type": "string"
                            },
                            "delivererAddress": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "txHash",
                            "timestamp",
                            "gasSpent",
                            "rewardRedeemer",
                            "delivererAddress"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "delivered"
                          ]
                        }
                      },
                      "required": [
                        "messageId",
                        "teleporterContractAddress",
                        "sourceBlockchainId",
                        "destinationBlockchainId",
                        "sourceEvmChainId",
                        "destinationEvmChainId",
                        "messageNonce",
                        "from",
                        "to",
                        "messageExecuted",
                        "receipts",
                        "receiptDelivered",
                        "rewardDetails",
                        "sourceTransaction",
                        "destinationTransaction",
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "messageId": {
                          "type": "string"
                        },
                        "teleporterContractAddress": {
                          "type": "string"
                        },
                        "sourceBlockchainId": {
                          "type": "string"
                        },
                        "destinationBlockchainId": {
                          "type": "string"
                        },
                        "sourceEvmChainId": {
                          "type": "string"
                        },
                        "destinationEvmChainId": {
                          "type": "string"
                        },
                        "messageNonce": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "data": {
                          "type": "string"
                        },
                        "messageExecuted": {
                          "type": "boolean"
                        },
                        "receipts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "receivedMessageNonce": {
                                "type": "string"
                              },
                              "relayerRewardAddress": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "receivedMessageNonce",
                              "relayerRewardAddress"
                            ]
                          }
                        },
                        "receiptDelivered": {
                          "type": "boolean"
                        },
                        "rewardDetails": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            },
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "ercType": {
                              "type": "string",
                              "enum": [
                                "ERC-20"
                              ]
                            },
                            "price": {
                              "description": "The token price, if available.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currencyCode": {
                                      "type": "string",
                                      "description": "ISO 4217 currency code.",
                                      "enum": [
                                        "usd",
                                        "eur",
                                        "aud",
                                        "cad",
                                        "chf",
                                        "clp",
                                        "cny",
                                        "czk",
                                        "dkk",
                                        "gbp",
                                        "hkd",
                                        "huf",
                                        "jpy",
                                        "nzd"
                                      ],
                                      "example": "usd"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Monetary value in base 10 decimals.",
                                      "example": "42.42"
                                    }
                                  },
                                  "required": [
                                    "currencyCode",
                                    "value"
                                  ]
                                }
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "address",
                            "name",
                            "symbol",
                            "decimals",
                            "ercType",
                            "value"
                          ]
                        },
                        "destinationTransaction": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "number"
                            },
                            "gasSpent": {
                              "type": "string"
                            },
                            "rewardRedeemer": {
                              "type": "string"
                            },
                            "delivererAddress": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "txHash",
                            "timestamp",
                            "gasSpent",
                            "rewardRedeemer",
                            "delivererAddress"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "delivered_source_not_indexed"
                          ]
                        }
                      },
                      "required": [
                        "messageId",
                        "teleporterContractAddress",
                        "sourceBlockchainId",
                        "destinationBlockchainId",
                        "sourceEvmChainId",
                        "destinationEvmChainId",
                        "messageNonce",
                        "from",
                        "to",
                        "messageExecuted",
                        "receipts",
                        "receiptDelivered",
                        "rewardDetails",
                        "destinationTransaction",
                        "status"
                      ]
                    }
                  ],
                  "discriminator": {
                    "propertyName": "status",
                    "mapping": {
                      "pending": "#/components/schemas/PendingTeleporterMessage",
                      "delivered": "#/components/schemas/DeliveredTeleporterMessage",
                      "delivered_source_not_indexed": "#/components/schemas/DeliveredSourceNotIndexedTeleporterMessage"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Teleporter"
        ]
      }
    },
    "/v1/teleporter/messages": {
      "get": {
        "operationId": "listTeleporterMessages",
        "summary": "List teleporter messages",
        "description": "Lists teleporter messages. Ordered by timestamp in descending order.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "sourceBlockchainId",
            "required": false,
            "in": "query",
            "description": "The base58 encoded blockchain ID or evm chain ID of the source chain that the teleporter message was sent from.",
            "example": "2D8RG4UpSXbPbvPCAWppNJyqTG2i2CAXSkTgmTBBvs7GKNZjsY",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationBlockchainId",
            "required": false,
            "in": "query",
            "description": "The base58 encoded blockchain ID or evm chain ID of the destination chain that the teleporter message was sent to.",
            "example": "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "The address of the recipient of the teleporter message.",
            "example": "0x664A4Be5Af2cFc824F9C0914CbAc4703396Da2DC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "The address of the sender of the teleporter message.",
            "example": "0x321eDA69247566D662178feE695C7026c604Cd94",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "required": false,
            "in": "query",
            "description": "mainnet or testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "testnet"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "messageId": {
                                "type": "string"
                              },
                              "teleporterContractAddress": {
                                "type": "string"
                              },
                              "sourceBlockchainId": {
                                "type": "string"
                              },
                              "destinationBlockchainId": {
                                "type": "string"
                              },
                              "sourceEvmChainId": {
                                "type": "string"
                              },
                              "destinationEvmChainId": {
                                "type": "string"
                              },
                              "messageNonce": {
                                "type": "string"
                              },
                              "from": {
                                "type": "string"
                              },
                              "to": {
                                "type": "string"
                              },
                              "data": {
                                "type": "string"
                              },
                              "messageExecuted": {
                                "type": "boolean"
                              },
                              "receipts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "receivedMessageNonce": {
                                      "type": "string"
                                    },
                                    "relayerRewardAddress": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "receivedMessageNonce",
                                    "relayerRewardAddress"
                                  ]
                                }
                              },
                              "receiptDelivered": {
                                "type": "boolean"
                              },
                              "rewardDetails": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "ercType": {
                                    "type": "string",
                                    "enum": [
                                      "ERC-20"
                                    ]
                                  },
                                  "price": {
                                    "description": "The token price, if available.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "currencyCode": {
                                            "type": "string",
                                            "description": "ISO 4217 currency code.",
                                            "enum": [
                                              "usd",
                                              "eur",
                                              "aud",
                                              "cad",
                                              "chf",
                                              "clp",
                                              "cny",
                                              "czk",
                                              "dkk",
                                              "gbp",
                                              "hkd",
                                              "huf",
                                              "jpy",
                                              "nzd"
                                            ],
                                            "example": "usd"
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "Monetary value in base 10 decimals.",
                                            "example": "42.42"
                                          }
                                        },
                                        "required": [
                                          "currencyCode",
                                          "value"
                                        ]
                                      }
                                    ]
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "address",
                                  "name",
                                  "symbol",
                                  "decimals",
                                  "ercType",
                                  "value"
                                ]
                              },
                              "sourceTransaction": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "number"
                                  },
                                  "gasSpent": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "timestamp",
                                  "gasSpent"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              }
                            },
                            "required": [
                              "messageId",
                              "teleporterContractAddress",
                              "sourceBlockchainId",
                              "destinationBlockchainId",
                              "sourceEvmChainId",
                              "destinationEvmChainId",
                              "messageNonce",
                              "from",
                              "to",
                              "messageExecuted",
                              "receipts",
                              "receiptDelivered",
                              "rewardDetails",
                              "sourceTransaction",
                              "status"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "messageId": {
                                "type": "string"
                              },
                              "teleporterContractAddress": {
                                "type": "string"
                              },
                              "sourceBlockchainId": {
                                "type": "string"
                              },
                              "destinationBlockchainId": {
                                "type": "string"
                              },
                              "sourceEvmChainId": {
                                "type": "string"
                              },
                              "destinationEvmChainId": {
                                "type": "string"
                              },
                              "messageNonce": {
                                "type": "string"
                              },
                              "from": {
                                "type": "string"
                              },
                              "to": {
                                "type": "string"
                              },
                              "data": {
                                "type": "string"
                              },
                              "messageExecuted": {
                                "type": "boolean"
                              },
                              "receipts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "receivedMessageNonce": {
                                      "type": "string"
                                    },
                                    "relayerRewardAddress": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "receivedMessageNonce",
                                    "relayerRewardAddress"
                                  ]
                                }
                              },
                              "receiptDelivered": {
                                "type": "boolean"
                              },
                              "rewardDetails": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "ercType": {
                                    "type": "string",
                                    "enum": [
                                      "ERC-20"
                                    ]
                                  },
                                  "price": {
                                    "description": "The token price, if available.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "currencyCode": {
                                            "type": "string",
                                            "description": "ISO 4217 currency code.",
                                            "enum": [
                                              "usd",
                                              "eur",
                                              "aud",
                                              "cad",
                                              "chf",
                                              "clp",
                                              "cny",
                                              "czk",
                                              "dkk",
                                              "gbp",
                                              "hkd",
                                              "huf",
                                              "jpy",
                                              "nzd"
                                            ],
                                            "example": "usd"
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "Monetary value in base 10 decimals.",
                                            "example": "42.42"
                                          }
                                        },
                                        "required": [
                                          "currencyCode",
                                          "value"
                                        ]
                                      }
                                    ]
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "address",
                                  "name",
                                  "symbol",
                                  "decimals",
                                  "ercType",
                                  "value"
                                ]
                              },
                              "sourceTransaction": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "number"
                                  },
                                  "gasSpent": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "timestamp",
                                  "gasSpent"
                                ]
                              },
                              "destinationTransaction": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "number"
                                  },
                                  "gasSpent": {
                                    "type": "string"
                                  },
                                  "rewardRedeemer": {
                                    "type": "string"
                                  },
                                  "delivererAddress": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "timestamp",
                                  "gasSpent",
                                  "rewardRedeemer",
                                  "delivererAddress"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "delivered"
                                ]
                              }
                            },
                            "required": [
                              "messageId",
                              "teleporterContractAddress",
                              "sourceBlockchainId",
                              "destinationBlockchainId",
                              "sourceEvmChainId",
                              "destinationEvmChainId",
                              "messageNonce",
                              "from",
                              "to",
                              "messageExecuted",
                              "receipts",
                              "receiptDelivered",
                              "rewardDetails",
                              "sourceTransaction",
                              "destinationTransaction",
                              "status"
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "status",
                          "mapping": {
                            "pending": "#/components/schemas/PendingTeleporterMessage",
                            "delivered": "#/components/schemas/DeliveredTeleporterMessage"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "messages"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Teleporter"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/balances:getNative": {
      "get": {
        "operationId": "getNativeBalance",
        "summary": "Get native token balance",
        "description": "Gets native token balance of a wallet address.\n\nBalance at a given block can be retrieved with the `blockNumber` parameter.",
        "parameters": [
          {
            "name": "blockNumber",
            "required": false,
            "in": "query",
            "description": "The block number, if not defined the block number will be the latest block.",
            "example": "6479329",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "The currency that return values should use. Defaults to USD.",
            "example": "usd",
            "schema": {
              "type": "string",
              "description": "ISO 4217 currency code.",
              "enum": [
                "usd",
                "eur",
                "aud",
                "cad",
                "chf",
                "clp",
                "cny",
                "czk",
                "dkk",
                "gbp",
                "hkd",
                "huf",
                "jpy",
                "nzd"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nativeTokenBalance": {
                      "description": "The native token balance for the address.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "chainId": {
                              "type": "string",
                              "description": "The evm chain id.",
                              "example": "43114"
                            },
                            "price": {
                              "description": "The token price, if available.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currencyCode": {
                                      "type": "string",
                                      "description": "ISO 4217 currency code.",
                                      "enum": [
                                        "usd",
                                        "eur",
                                        "aud",
                                        "cad",
                                        "chf",
                                        "clp",
                                        "cny",
                                        "czk",
                                        "dkk",
                                        "gbp",
                                        "hkd",
                                        "huf",
                                        "jpy",
                                        "nzd"
                                      ],
                                      "example": "usd"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Monetary value in base 10 decimals.",
                                      "example": "42.42"
                                    }
                                  },
                                  "required": [
                                    "currencyCode",
                                    "value"
                                  ]
                                }
                              ]
                            },
                            "balance": {
                              "type": "string",
                              "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                              "example": "2000000000000000000"
                            },
                            "balanceValue": {
                              "description": "The monetary value of the balance, if a price is available for the token.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currencyCode": {
                                      "type": "string",
                                      "description": "ISO 4217 currency code.",
                                      "enum": [
                                        "usd",
                                        "eur",
                                        "aud",
                                        "cad",
                                        "chf",
                                        "clp",
                                        "cny",
                                        "czk",
                                        "dkk",
                                        "gbp",
                                        "hkd",
                                        "huf",
                                        "jpy",
                                        "nzd"
                                      ],
                                      "example": "usd"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Monetary value in base 10 decimals.",
                                      "example": "42.42"
                                    }
                                  },
                                  "required": [
                                    "currencyCode",
                                    "value"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "symbol",
                            "decimals",
                            "chainId",
                            "balance"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "nativeTokenBalance"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Balances"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/balances:listErc20": {
      "get": {
        "operationId": "listErc20Balances",
        "summary": "List ERC-20 balances",
        "description": "Lists ERC-20 token balances of a wallet address.\n\nBalance at a given block can be retrieved with the `blockNumber` parameter.\n\nBalance for specific contracts can be retrieved with the `contractAddresses` parameter.",
        "parameters": [
          {
            "name": "blockNumber",
            "required": false,
            "in": "query",
            "description": "The block number, if not defined the block number will be the latest block.",
            "example": "6479329",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "filterSpamTokens",
            "required": false,
            "in": "query",
            "description": "whether to filter out spam tokens from the response. Default is true.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractAddresses",
            "required": false,
            "in": "query",
            "description": "A comma separated list of contract addresses to filter by.",
            "example": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7, 0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "The currency that return values should use. Defaults to USD.",
            "example": "usd",
            "schema": {
              "type": "string",
              "description": "ISO 4217 currency code.",
              "enum": [
                "usd",
                "eur",
                "aud",
                "cad",
                "chf",
                "clp",
                "cny",
                "czk",
                "dkk",
                "gbp",
                "hkd",
                "huf",
                "jpy",
                "nzd"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "erc20TokenBalances": {
                      "description": "The list of ERC-20 token balances for the address.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-20"
                            ]
                          },
                          "price": {
                            "description": "The token price, if available.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "type": "string",
                                    "description": "ISO 4217 currency code.",
                                    "enum": [
                                      "usd",
                                      "eur",
                                      "aud",
                                      "cad",
                                      "chf",
                                      "clp",
                                      "cny",
                                      "czk",
                                      "dkk",
                                      "gbp",
                                      "hkd",
                                      "huf",
                                      "jpy",
                                      "nzd"
                                    ],
                                    "example": "usd"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Monetary value in base 10 decimals.",
                                    "example": "42.42"
                                  }
                                },
                                "required": [
                                  "currencyCode",
                                  "value"
                                ]
                              }
                            ]
                          },
                          "chainId": {
                            "type": "string",
                            "description": "The evm chain id.",
                            "example": "43114"
                          },
                          "balance": {
                            "type": "string",
                            "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                            "example": "2000000000000000000"
                          },
                          "balanceValue": {
                            "description": "The monetary value of the balance, if a price is available for the token.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "type": "string",
                                    "description": "ISO 4217 currency code.",
                                    "enum": [
                                      "usd",
                                      "eur",
                                      "aud",
                                      "cad",
                                      "chf",
                                      "clp",
                                      "cny",
                                      "czk",
                                      "dkk",
                                      "gbp",
                                      "hkd",
                                      "huf",
                                      "jpy",
                                      "nzd"
                                    ],
                                    "example": "usd"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Monetary value in base 10 decimals.",
                                    "example": "42.42"
                                  }
                                },
                                "required": [
                                  "currencyCode",
                                  "value"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "name",
                          "symbol",
                          "decimals",
                          "ercType",
                          "chainId",
                          "balance"
                        ]
                      }
                    }
                  },
                  "required": [
                    "erc20TokenBalances"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Balances"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/balances:listErc721": {
      "get": {
        "operationId": "listErc721Balances",
        "summary": "List ERC-721 balances",
        "description": "Lists ERC-721 token balances of a wallet address.\n\nBalance for a specific contract can be retrieved with the `contractAddress` parameter.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractAddress",
            "required": false,
            "in": "query",
            "description": "A contract addresses to filter by.",
            "example": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "erc721TokenBalances": {
                      "description": "The list of ERC-721 token balances for the address.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-721"
                            ]
                          },
                          "tokenId": {
                            "type": "string"
                          },
                          "tokenUri": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "indexStatus": {
                                "example": "indexed",
                                "type": "string",
                                "description": "The metadata indexing status of the nft.",
                                "enum": [
                                  "UNKNOWN",
                                  "MISSING_TOKEN",
                                  "INVALID_TOKEN_URI",
                                  "INVALID_TOKEN_URI_SCHEME",
                                  "UNREACHABLE_TOKEN_URI",
                                  "THROTTLED_TOKEN_URI",
                                  "METADATA_CONTENT_TOO_LARGE",
                                  "INVALID_METADATA",
                                  "INVALID_METADATA_JSON",
                                  "INDEXED",
                                  "UNINDEXED"
                                ]
                              },
                              "metadataLastUpdatedTimestamp": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "imageUri": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "animationUri": {
                                "type": "string"
                              },
                              "externalUrl": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "indexStatus"
                            ]
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "chainId": {
                            "type": "string",
                            "description": "The evm chain id.",
                            "example": "43114"
                          }
                        },
                        "required": [
                          "address",
                          "name",
                          "symbol",
                          "ercType",
                          "tokenId",
                          "tokenUri",
                          "metadata",
                          "chainId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "erc721TokenBalances"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Balances"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/balances:listErc1155": {
      "get": {
        "operationId": "listErc1155Balances",
        "summary": "List ERC-1155 balances",
        "description": "Lists ERC-1155 token balances of a wallet address.\n\nBalance at a given block can be retrieved with the `blockNumber` parameter.\n\nBalance for a specific contract can be retrieved with the `contractAddress` parameter.",
        "parameters": [
          {
            "name": "blockNumber",
            "required": false,
            "in": "query",
            "description": "The block number, if not defined the block number will be the latest block.",
            "example": "6479329",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractAddress",
            "required": false,
            "in": "query",
            "description": "A contract addresses to filter by.",
            "example": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "erc1155TokenBalances": {
                      "description": "The list of ERC-1155 token balances for the address.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-1155"
                            ]
                          },
                          "tokenId": {
                            "type": "string"
                          },
                          "tokenUri": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "indexStatus": {
                                "example": "indexed",
                                "type": "string",
                                "description": "The metadata indexing status of the nft.",
                                "enum": [
                                  "UNKNOWN",
                                  "MISSING_TOKEN",
                                  "INVALID_TOKEN_URI",
                                  "INVALID_TOKEN_URI_SCHEME",
                                  "UNREACHABLE_TOKEN_URI",
                                  "THROTTLED_TOKEN_URI",
                                  "METADATA_CONTENT_TOO_LARGE",
                                  "INVALID_METADATA",
                                  "INVALID_METADATA_JSON",
                                  "INDEXED",
                                  "UNINDEXED"
                                ]
                              },
                              "metadataLastUpdatedTimestamp": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "imageUri": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "animationUri": {
                                "type": "string"
                              },
                              "externalUrl": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              },
                              "properties": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "indexStatus"
                            ]
                          },
                          "chainId": {
                            "type": "string",
                            "description": "The evm chain id.",
                            "example": "43114"
                          },
                          "balance": {
                            "type": "string",
                            "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                            "example": "2000000000000000000"
                          }
                        },
                        "required": [
                          "address",
                          "ercType",
                          "tokenId",
                          "tokenUri",
                          "metadata",
                          "chainId",
                          "balance"
                        ]
                      }
                    }
                  },
                  "required": [
                    "erc1155TokenBalances"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Balances"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/balances:listCollectibles": {
      "get": {
        "operationId": "listCollectibleBalances",
        "summary": "List collectible (ERC-721/ERC-1155) balances",
        "description": "Lists ERC-721 and ERC-1155 token balances of a wallet address.\n\nBalance for a specific contract can be retrieved with the `contractAddress` parameter.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractAddress",
            "required": false,
            "in": "query",
            "description": "A contract addresses to filter by.",
            "example": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "collectibleBalances": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "chainId": {
                                "type": "string",
                                "description": "The evm chain id.",
                                "example": "43114"
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata",
                              "chainId"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "chainId": {
                                "type": "string",
                                "description": "The evm chain id.",
                                "example": "43114"
                              },
                              "balance": {
                                "type": "string",
                                "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                                "example": "2000000000000000000"
                              }
                            },
                            "required": [
                              "address",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata",
                              "chainId",
                              "balance"
                            ]
                          }
                        ]
                      },
                      "description": "The list of ERC-721 and ERC-1155 token balances for the address."
                    }
                  },
                  "required": [
                    "collectibleBalances"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Balances"
        ]
      }
    },
    "/v1/chains/{chainId}/blocks": {
      "get": {
        "operationId": "getLatestBlocks",
        "summary": "List latest blocks",
        "description": "Lists the latest indexed blocks on the EVM-compatible chain sorted in descending order by block timestamp.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "blocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "txCount": {
                            "type": "number",
                            "description": "The number of evm transactions in the block."
                          },
                          "baseFee": {
                            "type": "string",
                            "description": "The base gas fee for a transaction to be included in the block."
                          },
                          "gasUsed": {
                            "type": "string",
                            "description": "The gas used for transactions in the block."
                          },
                          "gasLimit": {
                            "type": "string",
                            "description": "The total gas limit set for transactions in the block."
                          },
                          "gasCost": {
                            "type": "string"
                          },
                          "parentHash": {
                            "type": "string",
                            "description": "The hash of the parent block."
                          },
                          "feesSpent": {
                            "type": "string",
                            "description": "The amount of fees spent/burned for transactions in the block."
                          },
                          "cumulativeTransactions": {
                            "type": "string",
                            "description": "The cumulative number of transactions for the chain including this block."
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "txCount",
                          "baseFee",
                          "gasUsed",
                          "gasLimit",
                          "gasCost",
                          "parentHash",
                          "feesSpent",
                          "cumulativeTransactions"
                        ]
                      }
                    }
                  },
                  "required": [
                    "blocks"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Blocks"
        ]
      }
    },
    "/v1/chains/{chainId}/blocks/{blockId}": {
      "get": {
        "operationId": "getBlock",
        "summary": "Get block",
        "description": "Gets the details of an individual block on the EVM-compatible chain.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockId",
            "required": true,
            "in": "path",
            "description": "A block identifier which is either a block number or the block hash.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "string",
                      "description": "The block number on the chain.",
                      "example": "339"
                    },
                    "blockTimestamp": {
                      "type": "number",
                      "description": "The block finality timestamp.",
                      "example": 1648672486
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "The block hash identifier.",
                      "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                    },
                    "txCount": {
                      "type": "number",
                      "description": "The number of evm transactions in the block."
                    },
                    "baseFee": {
                      "type": "string",
                      "description": "The base gas fee for a transaction to be included in the block."
                    },
                    "gasUsed": {
                      "type": "string",
                      "description": "The gas used for transactions in the block."
                    },
                    "gasLimit": {
                      "type": "string",
                      "description": "The total gas limit set for transactions in the block."
                    },
                    "gasCost": {
                      "type": "string"
                    },
                    "parentHash": {
                      "type": "string",
                      "description": "The hash of the parent block."
                    },
                    "feesSpent": {
                      "type": "string",
                      "description": "The amount of fees spent/burned for transactions in the block."
                    },
                    "cumulativeTransactions": {
                      "type": "string",
                      "description": "The cumulative number of transactions for the chain including this block."
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockTimestamp",
                    "blockHash",
                    "txCount",
                    "baseFee",
                    "gasUsed",
                    "gasLimit",
                    "gasCost",
                    "parentHash",
                    "feesSpent",
                    "cumulativeTransactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Blocks"
        ]
      }
    },
    "/v1/chains/{chainId}/contracts/{address}/transactions:getDeployment": {
      "get": {
        "operationId": "getDeploymentTransaction",
        "summary": "Get deployment transaction",
        "description": "If the address is a smart contract, returns the transaction in which it was deployed.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Contract address on the relevant chain.",
            "example": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "The currency that return values should use. Defaults to USD.",
            "example": "usd",
            "schema": {
              "type": "string",
              "description": "ISO 4217 currency code.",
              "enum": [
                "usd",
                "eur",
                "aud",
                "cad",
                "chf",
                "clp",
                "cny",
                "czk",
                "dkk",
                "gbp",
                "hkd",
                "huf",
                "jpy",
                "nzd"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erc20Transfers": {
                      "description": "The list of ERC-20 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc20Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-20"
                                ]
                              },
                              "price": {
                                "description": "The token price, if available.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "currencyCode": {
                                        "type": "string",
                                        "description": "ISO 4217 currency code.",
                                        "enum": [
                                          "usd",
                                          "eur",
                                          "aud",
                                          "cad",
                                          "chf",
                                          "clp",
                                          "cny",
                                          "czk",
                                          "dkk",
                                          "gbp",
                                          "hkd",
                                          "huf",
                                          "jpy",
                                          "nzd"
                                        ],
                                        "example": "usd"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "Monetary value in base 10 decimals.",
                                        "example": "42.42"
                                      }
                                    },
                                    "required": [
                                      "currencyCode",
                                      "value"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "decimals",
                              "ercType"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc20Token"
                        ]
                      }
                    },
                    "erc721Transfers": {
                      "description": "The list of ERC-721 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "erc721Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "erc721Token"
                        ]
                      }
                    },
                    "erc1155Transfers": {
                      "description": "The list of ERC-1155 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc1155Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc1155Token"
                        ]
                      }
                    },
                    "internalTransactions": {
                      "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "internalTxType": {
                            "type": "string",
                            "enum": [
                              "UNKNOWN",
                              "CALL",
                              "CREATE",
                              "CREATE2",
                              "CALLCODE",
                              "DELEGATECALL",
                              "STATICCALL"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "isReverted": {
                            "type": "boolean",
                            "description": "True if the internal transaction was reverted."
                          },
                          "gasUsed": {
                            "type": "string"
                          },
                          "gasLimit": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "internalTxType",
                          "value",
                          "isReverted",
                          "gasUsed",
                          "gasLimit"
                        ]
                      }
                    },
                    "networkTokenDetails": {
                      "type": "object",
                      "properties": {
                        "networkToken": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "symbol",
                            "decimals"
                          ]
                        },
                        "currentPrice": {
                          "description": "The current token price, if available.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        },
                        "historicalPrice": {
                          "description": "The historical token price at the time the transaction occured, if available. Note, this is only provided if the transaction occured more than 24 hours ago.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "networkToken"
                      ]
                    },
                    "nativeTransaction": {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string",
                          "description": "The block number on the chain.",
                          "example": "339"
                        },
                        "blockTimestamp": {
                          "type": "number",
                          "description": "The block finality timestamp.",
                          "example": 1648672486
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "The block hash identifier.",
                          "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                        },
                        "blockIndex": {
                          "type": "number",
                          "description": "The index at which the transaction occured in the block (0-indexed).",
                          "example": 0
                        },
                        "txHash": {
                          "type": "string",
                          "description": "The transaction hash identifier.",
                          "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                        },
                        "txStatus": {
                          "type": "string",
                          "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                          "example": "1"
                        },
                        "txType": {
                          "type": "number",
                          "description": "The transaction type.",
                          "example": 1
                        },
                        "gasLimit": {
                          "type": "string",
                          "description": "The gas limit set for the transaction.",
                          "example": "51373"
                        },
                        "gasUsed": {
                          "type": "string",
                          "description": "The amount of gas used.",
                          "example": "51373"
                        },
                        "gasPrice": {
                          "type": "string",
                          "description": "The gas price denominated by the number of decimals of the native token.",
                          "example": "470000000000"
                        },
                        "nonce": {
                          "type": "string",
                          "description": "The nonce used by the sender of the transaction.",
                          "example": "1"
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "method": {
                          "type": "object",
                          "properties": {
                            "callType": {
                              "example": "CONTRACT_CALL",
                              "type": "string",
                              "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                              "enum": [
                                "NATIVE_TRANSFER",
                                "CONTRACT_CALL",
                                "CONTRACT_CREATION"
                              ]
                            },
                            "methodHash": {
                              "type": "string",
                              "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                              "example": "0xa9059cbb"
                            },
                            "methodName": {
                              "type": "string",
                              "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                              "example": "transfer(address,uint256)"
                            }
                          },
                          "required": [
                            "callType",
                            "methodHash"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "example": "10000000000000000000"
                        },
                        "input": {
                          "type": "string",
                          "description": "The data sent for the transaction."
                        },
                        "baseFeePerGas": {
                          "type": "string"
                        },
                        "maxFeePerGas": {
                          "type": "string"
                        },
                        "maxPriorityFeePerGas": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockNumber",
                        "blockTimestamp",
                        "blockHash",
                        "blockIndex",
                        "txHash",
                        "txStatus",
                        "txType",
                        "gasLimit",
                        "gasUsed",
                        "gasPrice",
                        "nonce",
                        "from",
                        "to",
                        "value",
                        "input",
                        "baseFeePerGas"
                      ]
                    }
                  },
                  "required": [
                    "networkTokenDetails",
                    "nativeTransaction"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/contracts/{address}/deployments": {
      "get": {
        "operationId": "listContractDeployments",
        "summary": "List deployed contracts",
        "description": "Lists all contracts deployed by the given address.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "contracts": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "description": {
                                "type": "string"
                              },
                              "officialSite": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "logoAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "bannerAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "color": {
                                "type": "string"
                              },
                              "resourceLinks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Blog",
                                        "CoinGecko",
                                        "CoinMarketCap",
                                        "Discord",
                                        "Documentation",
                                        "Facebook",
                                        "Github",
                                        "Instagram",
                                        "LinkedIn",
                                        "Medium",
                                        "Reddit",
                                        "Support",
                                        "Telegram",
                                        "TikTok",
                                        "Twitter",
                                        "Website",
                                        "Whitepaper",
                                        "Youtube"
                                      ]
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url"
                                  ]
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "deploymentDetails": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "deployerAddress": {
                                    "type": "string",
                                    "description": "The address that initiated the transaction which deployed this contract."
                                  },
                                  "deployerContractAddress": {
                                    "type": "string",
                                    "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "deployerAddress"
                                ]
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              }
                            },
                            "required": [
                              "address",
                              "deploymentDetails",
                              "ercType"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "description": {
                                "type": "string"
                              },
                              "officialSite": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "logoAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "bannerAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "color": {
                                "type": "string"
                              },
                              "resourceLinks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Blog",
                                        "CoinGecko",
                                        "CoinMarketCap",
                                        "Discord",
                                        "Documentation",
                                        "Facebook",
                                        "Github",
                                        "Instagram",
                                        "LinkedIn",
                                        "Medium",
                                        "Reddit",
                                        "Support",
                                        "Telegram",
                                        "TikTok",
                                        "Twitter",
                                        "Website",
                                        "Whitepaper",
                                        "Youtube"
                                      ]
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url"
                                  ]
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "deploymentDetails": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "deployerAddress": {
                                    "type": "string",
                                    "description": "The address that initiated the transaction which deployed this contract."
                                  },
                                  "deployerContractAddress": {
                                    "type": "string",
                                    "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "deployerAddress"
                                ]
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "pricingProviders": {
                                "type": "object",
                                "properties": {
                                  "coingeckoCoinId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "address",
                              "deploymentDetails",
                              "ercType"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "description": {
                                "type": "string"
                              },
                              "officialSite": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "logoAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "bannerAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "color": {
                                "type": "string"
                              },
                              "resourceLinks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Blog",
                                        "CoinGecko",
                                        "CoinMarketCap",
                                        "Discord",
                                        "Documentation",
                                        "Facebook",
                                        "Github",
                                        "Instagram",
                                        "LinkedIn",
                                        "Medium",
                                        "Reddit",
                                        "Support",
                                        "Telegram",
                                        "TikTok",
                                        "Twitter",
                                        "Website",
                                        "Whitepaper",
                                        "Youtube"
                                      ]
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url"
                                  ]
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "deploymentDetails": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "deployerAddress": {
                                    "type": "string",
                                    "description": "The address that initiated the transaction which deployed this contract."
                                  },
                                  "deployerContractAddress": {
                                    "type": "string",
                                    "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "deployerAddress"
                                ]
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-20"
                                ]
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "pricingProviders": {
                                "type": "object",
                                "properties": {
                                  "coingeckoCoinId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "address",
                              "deploymentDetails",
                              "ercType",
                              "decimals"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "description": {
                                "type": "string"
                              },
                              "officialSite": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "logoAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "bannerAsset": {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string",
                                    "description": "OUTPUT ONLY"
                                  }
                                }
                              },
                              "color": {
                                "type": "string"
                              },
                              "resourceLinks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Blog",
                                        "CoinGecko",
                                        "CoinMarketCap",
                                        "Discord",
                                        "Documentation",
                                        "Facebook",
                                        "Github",
                                        "Instagram",
                                        "LinkedIn",
                                        "Medium",
                                        "Reddit",
                                        "Support",
                                        "Telegram",
                                        "TikTok",
                                        "Twitter",
                                        "Website",
                                        "Whitepaper",
                                        "Youtube"
                                      ]
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url"
                                  ]
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "deploymentDetails": {
                                "type": "object",
                                "properties": {
                                  "txHash": {
                                    "type": "string"
                                  },
                                  "deployerAddress": {
                                    "type": "string",
                                    "description": "The address that initiated the transaction which deployed this contract."
                                  },
                                  "deployerContractAddress": {
                                    "type": "string",
                                    "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                                  }
                                },
                                "required": [
                                  "txHash",
                                  "deployerAddress"
                                ]
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "UNKNOWN"
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "deploymentDetails",
                              "ercType"
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "ercType",
                          "mapping": {
                            "ERC-721": "#/components/schemas/Erc721Contract",
                            "ERC-1155": "#/components/schemas/Erc1155Contract",
                            "ERC-20": "#/components/schemas/Erc20Contract",
                            "UNKNOWN": "#/components/schemas/UnknownContract"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "contracts"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}": {
      "get": {
        "operationId": "getContractMetadata",
        "summary": "Get contract metadata",
        "description": "Gets metadata about the contract at the given address.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Contract address on the relevant chain.",
            "example": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "description": {
                          "type": "string"
                        },
                        "officialSite": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "logoAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "bannerAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "color": {
                          "type": "string"
                        },
                        "resourceLinks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Blog",
                                  "CoinGecko",
                                  "CoinMarketCap",
                                  "Discord",
                                  "Documentation",
                                  "Facebook",
                                  "Github",
                                  "Instagram",
                                  "LinkedIn",
                                  "Medium",
                                  "Reddit",
                                  "Support",
                                  "Telegram",
                                  "TikTok",
                                  "Twitter",
                                  "Website",
                                  "Whitepaper",
                                  "Youtube"
                                ]
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "url"
                            ]
                          }
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "deploymentDetails": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "deployerAddress": {
                              "type": "string",
                              "description": "The address that initiated the transaction which deployed this contract."
                            },
                            "deployerContractAddress": {
                              "type": "string",
                              "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                            }
                          },
                          "required": [
                            "txHash",
                            "deployerAddress"
                          ]
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-721"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        }
                      },
                      "required": [
                        "address",
                        "deploymentDetails",
                        "ercType"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "description": {
                          "type": "string"
                        },
                        "officialSite": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "logoAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "bannerAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "color": {
                          "type": "string"
                        },
                        "resourceLinks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Blog",
                                  "CoinGecko",
                                  "CoinMarketCap",
                                  "Discord",
                                  "Documentation",
                                  "Facebook",
                                  "Github",
                                  "Instagram",
                                  "LinkedIn",
                                  "Medium",
                                  "Reddit",
                                  "Support",
                                  "Telegram",
                                  "TikTok",
                                  "Twitter",
                                  "Website",
                                  "Whitepaper",
                                  "Youtube"
                                ]
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "url"
                            ]
                          }
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "deploymentDetails": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "deployerAddress": {
                              "type": "string",
                              "description": "The address that initiated the transaction which deployed this contract."
                            },
                            "deployerContractAddress": {
                              "type": "string",
                              "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                            }
                          },
                          "required": [
                            "txHash",
                            "deployerAddress"
                          ]
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-1155"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "pricingProviders": {
                          "type": "object",
                          "properties": {
                            "coingeckoCoinId": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "address",
                        "deploymentDetails",
                        "ercType"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "description": {
                          "type": "string"
                        },
                        "officialSite": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "logoAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "bannerAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "color": {
                          "type": "string"
                        },
                        "resourceLinks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Blog",
                                  "CoinGecko",
                                  "CoinMarketCap",
                                  "Discord",
                                  "Documentation",
                                  "Facebook",
                                  "Github",
                                  "Instagram",
                                  "LinkedIn",
                                  "Medium",
                                  "Reddit",
                                  "Support",
                                  "Telegram",
                                  "TikTok",
                                  "Twitter",
                                  "Website",
                                  "Whitepaper",
                                  "Youtube"
                                ]
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "url"
                            ]
                          }
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "deploymentDetails": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "deployerAddress": {
                              "type": "string",
                              "description": "The address that initiated the transaction which deployed this contract."
                            },
                            "deployerContractAddress": {
                              "type": "string",
                              "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                            }
                          },
                          "required": [
                            "txHash",
                            "deployerAddress"
                          ]
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-20"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "pricingProviders": {
                          "type": "object",
                          "properties": {
                            "coingeckoCoinId": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "address",
                        "deploymentDetails",
                        "ercType",
                        "decimals"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "description": {
                          "type": "string"
                        },
                        "officialSite": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "logoAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "bannerAsset": {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string",
                              "description": "OUTPUT ONLY"
                            }
                          }
                        },
                        "color": {
                          "type": "string"
                        },
                        "resourceLinks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Blog",
                                  "CoinGecko",
                                  "CoinMarketCap",
                                  "Discord",
                                  "Documentation",
                                  "Facebook",
                                  "Github",
                                  "Instagram",
                                  "LinkedIn",
                                  "Medium",
                                  "Reddit",
                                  "Support",
                                  "Telegram",
                                  "TikTok",
                                  "Twitter",
                                  "Website",
                                  "Whitepaper",
                                  "Youtube"
                                ]
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "url"
                            ]
                          }
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "deploymentDetails": {
                          "type": "object",
                          "properties": {
                            "txHash": {
                              "type": "string"
                            },
                            "deployerAddress": {
                              "type": "string",
                              "description": "The address that initiated the transaction which deployed this contract."
                            },
                            "deployerContractAddress": {
                              "type": "string",
                              "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                            }
                          },
                          "required": [
                            "txHash",
                            "deployerAddress"
                          ]
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "UNKNOWN"
                          ]
                        }
                      },
                      "required": [
                        "address",
                        "deploymentDetails",
                        "ercType"
                      ]
                    }
                  ],
                  "discriminator": {
                    "propertyName": "ercType",
                    "mapping": {
                      "ERC-721": "#/components/schemas/Erc721Contract",
                      "ERC-1155": "#/components/schemas/Erc1155Contract",
                      "ERC-20": "#/components/schemas/Erc20Contract",
                      "UNKNOWN": "#/components/schemas/UnknownContract"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "EVM Contracts"
        ]
      }
    },
    "/v1/chains": {
      "get": {
        "operationId": "supportedChains",
        "summary": "List chains",
        "description": "Lists the supported EVM-compatible chains. Filterable by network.",
        "parameters": [
          {
            "name": "network",
            "required": false,
            "in": "query",
            "description": "mainnet or testnet.",
            "example": "mainnet",
            "schema": {
              "type": "string",
              "enum": [
                "mainnet",
                "testnet"
              ]
            }
          },
          {
            "name": "feature",
            "required": false,
            "in": "query",
            "description": "Filter by feature.",
            "example": "nftIndexing",
            "schema": {
              "type": "string",
              "enum": [
                "nftIndexing",
                "webhooks"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chains": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
                            "enum": [
                              "OK",
                              "UNAVAILABLE"
                            ]
                          },
                          "chainName": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "platformChainId": {
                            "type": "string"
                          },
                          "subnetId": {
                            "type": "string"
                          },
                          "vmId": {
                            "type": "string"
                          },
                          "vmName": {
                            "type": "string",
                            "enum": [
                              "EVM",
                              "BITCOIN",
                              "ETHEREUM"
                            ]
                          },
                          "explorerUrl": {
                            "type": "string"
                          },
                          "rpcUrl": {
                            "type": "string"
                          },
                          "wsUrl": {
                            "type": "string"
                          },
                          "isTestnet": {
                            "type": "boolean"
                          },
                          "utilityAddresses": {
                            "type": "object",
                            "properties": {
                              "multicall": {
                                "type": "string"
                              }
                            }
                          },
                          "networkToken": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "description": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "chainLogoUri": {
                            "type": "string"
                          },
                          "private": {
                            "type": "boolean"
                          },
                          "enabledFeatures": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "nftIndexing",
                                "webhooks"
                              ]
                            }
                          }
                        },
                        "required": [
                          "chainId",
                          "status",
                          "chainName",
                          "description",
                          "vmName",
                          "rpcUrl",
                          "isTestnet",
                          "networkToken"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chains"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Chains"
        ]
      }
    },
    "/v1/chains/{chainId}": {
      "get": {
        "operationId": "getChainInfo",
        "summary": "Get chain information",
        "description": "Gets chain information for the EVM-compatible chain if supported by the api.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
                      "enum": [
                        "OK",
                        "UNAVAILABLE"
                      ]
                    },
                    "chainName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "platformChainId": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "vmId": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string",
                      "enum": [
                        "EVM",
                        "BITCOIN",
                        "ETHEREUM"
                      ]
                    },
                    "explorerUrl": {
                      "type": "string"
                    },
                    "rpcUrl": {
                      "type": "string"
                    },
                    "wsUrl": {
                      "type": "string"
                    },
                    "isTestnet": {
                      "type": "boolean"
                    },
                    "utilityAddresses": {
                      "type": "object",
                      "properties": {
                        "multicall": {
                          "type": "string"
                        }
                      }
                    },
                    "networkToken": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "symbol",
                        "decimals"
                      ]
                    },
                    "chainLogoUri": {
                      "type": "string"
                    },
                    "private": {
                      "type": "boolean"
                    },
                    "enabledFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "nftIndexing",
                          "webhooks"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chainId",
                    "status",
                    "chainName",
                    "description",
                    "vmName",
                    "rpcUrl",
                    "isTestnet",
                    "networkToken"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Chains"
        ]
      }
    },
    "/v1/chains/{chainId}/tokens/{address}/transfers": {
      "get": {
        "operationId": "listTransfers",
        "summary": "List ERC transfers",
        "description": "Lists ERC transfers for an ERC-20, ERC-721, or ERC-1155 contract address.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transfers": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number on the chain.",
                                "example": "339"
                              },
                              "blockTimestamp": {
                                "type": "number",
                                "description": "The block finality timestamp.",
                                "example": 1648672486
                              },
                              "blockHash": {
                                "type": "string",
                                "description": "The block hash identifier.",
                                "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                              },
                              "txHash": {
                                "type": "string",
                                "description": "The transaction hash identifier.",
                                "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "logIndex": {
                                "type": "number"
                              },
                              "value": {
                                "type": "string",
                                "example": "10000000000000000000"
                              },
                              "erc20Token": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "ercType": {
                                    "type": "string",
                                    "enum": [
                                      "ERC-20"
                                    ]
                                  },
                                  "price": {
                                    "description": "The token price, if available.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "currencyCode": {
                                            "type": "string",
                                            "description": "ISO 4217 currency code.",
                                            "enum": [
                                              "usd",
                                              "eur",
                                              "aud",
                                              "cad",
                                              "chf",
                                              "clp",
                                              "cny",
                                              "czk",
                                              "dkk",
                                              "gbp",
                                              "hkd",
                                              "huf",
                                              "jpy",
                                              "nzd"
                                            ],
                                            "example": "usd"
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "Monetary value in base 10 decimals.",
                                            "example": "42.42"
                                          }
                                        },
                                        "required": [
                                          "currencyCode",
                                          "value"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "address",
                                  "name",
                                  "symbol",
                                  "decimals",
                                  "ercType"
                                ]
                              }
                            },
                            "required": [
                              "blockNumber",
                              "blockTimestamp",
                              "blockHash",
                              "txHash",
                              "from",
                              "to",
                              "logIndex",
                              "value",
                              "erc20Token"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number on the chain.",
                                "example": "339"
                              },
                              "blockTimestamp": {
                                "type": "number",
                                "description": "The block finality timestamp.",
                                "example": 1648672486
                              },
                              "blockHash": {
                                "type": "string",
                                "description": "The block hash identifier.",
                                "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                              },
                              "txHash": {
                                "type": "string",
                                "description": "The transaction hash identifier.",
                                "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "logIndex": {
                                "type": "number"
                              },
                              "erc721Token": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "ercType": {
                                    "type": "string",
                                    "enum": [
                                      "ERC-721"
                                    ]
                                  },
                                  "tokenId": {
                                    "type": "string"
                                  },
                                  "tokenUri": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "indexStatus": {
                                        "example": "indexed",
                                        "type": "string",
                                        "description": "The metadata indexing status of the nft.",
                                        "enum": [
                                          "UNKNOWN",
                                          "MISSING_TOKEN",
                                          "INVALID_TOKEN_URI",
                                          "INVALID_TOKEN_URI_SCHEME",
                                          "UNREACHABLE_TOKEN_URI",
                                          "THROTTLED_TOKEN_URI",
                                          "METADATA_CONTENT_TOO_LARGE",
                                          "INVALID_METADATA",
                                          "INVALID_METADATA_JSON",
                                          "INDEXED",
                                          "UNINDEXED"
                                        ]
                                      },
                                      "metadataLastUpdatedTimestamp": {
                                        "type": "number"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      },
                                      "imageUri": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "animationUri": {
                                        "type": "string"
                                      },
                                      "externalUrl": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "attributes": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "indexStatus"
                                    ]
                                  },
                                  "ownerAddress": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address",
                                  "name",
                                  "symbol",
                                  "ercType",
                                  "tokenId",
                                  "tokenUri",
                                  "metadata"
                                ]
                              }
                            },
                            "required": [
                              "blockNumber",
                              "blockTimestamp",
                              "blockHash",
                              "txHash",
                              "from",
                              "to",
                              "logIndex",
                              "erc721Token"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number on the chain.",
                                "example": "339"
                              },
                              "blockTimestamp": {
                                "type": "number",
                                "description": "The block finality timestamp.",
                                "example": 1648672486
                              },
                              "blockHash": {
                                "type": "string",
                                "description": "The block hash identifier.",
                                "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                              },
                              "txHash": {
                                "type": "string",
                                "description": "The transaction hash identifier.",
                                "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The contract name.",
                                    "example": "Wrapped AVAX"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The contract symbol.",
                                    "example": "WAVAX"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                    "example": 18
                                  },
                                  "logoUri": {
                                    "type": "string",
                                    "description": "The logo uri for the address.",
                                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  }
                                },
                                "required": [
                                  "address"
                                ]
                              },
                              "logIndex": {
                                "type": "number"
                              },
                              "value": {
                                "type": "string",
                                "example": "10000000000000000000"
                              },
                              "erc1155Token": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                  },
                                  "ercType": {
                                    "type": "string",
                                    "enum": [
                                      "ERC-1155"
                                    ]
                                  },
                                  "tokenId": {
                                    "type": "string"
                                  },
                                  "tokenUri": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "indexStatus": {
                                        "example": "indexed",
                                        "type": "string",
                                        "description": "The metadata indexing status of the nft.",
                                        "enum": [
                                          "UNKNOWN",
                                          "MISSING_TOKEN",
                                          "INVALID_TOKEN_URI",
                                          "INVALID_TOKEN_URI_SCHEME",
                                          "UNREACHABLE_TOKEN_URI",
                                          "THROTTLED_TOKEN_URI",
                                          "METADATA_CONTENT_TOO_LARGE",
                                          "INVALID_METADATA",
                                          "INVALID_METADATA_JSON",
                                          "INDEXED",
                                          "UNINDEXED"
                                        ]
                                      },
                                      "metadataLastUpdatedTimestamp": {
                                        "type": "number"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      },
                                      "imageUri": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "animationUri": {
                                        "type": "string"
                                      },
                                      "externalUrl": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "decimals": {
                                        "type": "number"
                                      },
                                      "properties": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "indexStatus"
                                    ]
                                  }
                                },
                                "required": [
                                  "address",
                                  "ercType",
                                  "tokenId",
                                  "tokenUri",
                                  "metadata"
                                ]
                              }
                            },
                            "required": [
                              "blockNumber",
                              "blockTimestamp",
                              "blockHash",
                              "txHash",
                              "from",
                              "to",
                              "logIndex",
                              "value",
                              "erc1155Token"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "transfers"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions": {
      "get": {
        "operationId": "listTransactions",
        "summary": "List transactions",
        "description": "Returns a list of transactions where the given wallet address had an on-chain interaction for the given chain. The ERC-20 transfers, ERC-721 transfers, ERC-1155, and internal transactions returned are only those where the input address had an interaction. Specifically, those lists only inlcude entries where the input address was the sender (`from` field) or the receiver (`to` field) for the sub-transaction. Therefore the transactions returned from this list may not be complete representations of the on-chain data. For a complete view of a transaction use the `/chains/:chainId/transactions/:txHash` endpoint.\n\nFilterable by block ranges.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "example": "asc",
            "description": "The order by which to sort results. Use \"asc\" for ascending order, \"desc\" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nativeTransaction": {
                            "description": "The native (top-level) transaction details.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "blockNumber": {
                                    "type": "string",
                                    "description": "The block number on the chain.",
                                    "example": "339"
                                  },
                                  "blockTimestamp": {
                                    "type": "number",
                                    "description": "The block finality timestamp.",
                                    "example": 1648672486
                                  },
                                  "blockHash": {
                                    "type": "string",
                                    "description": "The block hash identifier.",
                                    "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                                  },
                                  "blockIndex": {
                                    "type": "number",
                                    "description": "The index at which the transaction occured in the block (0-indexed).",
                                    "example": 0
                                  },
                                  "txHash": {
                                    "type": "string",
                                    "description": "The transaction hash identifier.",
                                    "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                                  },
                                  "txStatus": {
                                    "type": "string",
                                    "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                                    "example": "1"
                                  },
                                  "txType": {
                                    "type": "number",
                                    "description": "The transaction type.",
                                    "example": 1
                                  },
                                  "gasLimit": {
                                    "type": "string",
                                    "description": "The gas limit set for the transaction.",
                                    "example": "51373"
                                  },
                                  "gasUsed": {
                                    "type": "string",
                                    "description": "The amount of gas used.",
                                    "example": "51373"
                                  },
                                  "gasPrice": {
                                    "type": "string",
                                    "description": "The gas price denominated by the number of decimals of the native token.",
                                    "example": "470000000000"
                                  },
                                  "nonce": {
                                    "type": "string",
                                    "description": "The nonce used by the sender of the transaction.",
                                    "example": "1"
                                  },
                                  "from": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The contract name.",
                                        "example": "Wrapped AVAX"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "The contract symbol.",
                                        "example": "WAVAX"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                        "example": 18
                                      },
                                      "logoUri": {
                                        "type": "string",
                                        "description": "The logo uri for the address.",
                                        "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "A wallet or contract address in mixed-case checksum encoding.",
                                        "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                      }
                                    },
                                    "required": [
                                      "address"
                                    ]
                                  },
                                  "to": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The contract name.",
                                        "example": "Wrapped AVAX"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "The contract symbol.",
                                        "example": "WAVAX"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                        "example": 18
                                      },
                                      "logoUri": {
                                        "type": "string",
                                        "description": "The logo uri for the address.",
                                        "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "A wallet or contract address in mixed-case checksum encoding.",
                                        "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                      }
                                    },
                                    "required": [
                                      "address"
                                    ]
                                  },
                                  "method": {
                                    "type": "object",
                                    "properties": {
                                      "callType": {
                                        "example": "CONTRACT_CALL",
                                        "type": "string",
                                        "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                                        "enum": [
                                          "NATIVE_TRANSFER",
                                          "CONTRACT_CALL",
                                          "CONTRACT_CREATION"
                                        ]
                                      },
                                      "methodHash": {
                                        "type": "string",
                                        "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                                        "example": "0xa9059cbb"
                                      },
                                      "methodName": {
                                        "type": "string",
                                        "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                                        "example": "transfer(address,uint256)"
                                      }
                                    },
                                    "required": [
                                      "callType",
                                      "methodHash"
                                    ]
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "10000000000000000000"
                                  }
                                },
                                "required": [
                                  "blockNumber",
                                  "blockTimestamp",
                                  "blockHash",
                                  "blockIndex",
                                  "txHash",
                                  "txStatus",
                                  "txType",
                                  "gasLimit",
                                  "gasUsed",
                                  "gasPrice",
                                  "nonce",
                                  "from",
                                  "to",
                                  "value"
                                ]
                              }
                            ]
                          },
                          "erc20Transfers": {
                            "description": "The list of ERC-20 transfers.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "logIndex": {
                                  "type": "number"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "10000000000000000000"
                                },
                                "erc20Token": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "ercType": {
                                      "type": "string",
                                      "enum": [
                                        "ERC-20"
                                      ]
                                    },
                                    "price": {
                                      "description": "The token price, if available.",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "currencyCode": {
                                              "type": "string",
                                              "description": "ISO 4217 currency code.",
                                              "enum": [
                                                "usd",
                                                "eur",
                                                "aud",
                                                "cad",
                                                "chf",
                                                "clp",
                                                "cny",
                                                "czk",
                                                "dkk",
                                                "gbp",
                                                "hkd",
                                                "huf",
                                                "jpy",
                                                "nzd"
                                              ],
                                              "example": "usd"
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "Monetary value in base 10 decimals.",
                                              "example": "42.42"
                                            }
                                          },
                                          "required": [
                                            "currencyCode",
                                            "value"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "name",
                                    "symbol",
                                    "decimals",
                                    "ercType"
                                  ]
                                }
                              },
                              "required": [
                                "from",
                                "to",
                                "logIndex",
                                "value",
                                "erc20Token"
                              ]
                            }
                          },
                          "erc721Transfers": {
                            "description": "The list of ERC-721 transfers.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "logIndex": {
                                  "type": "number"
                                },
                                "erc721Token": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "ercType": {
                                      "type": "string",
                                      "enum": [
                                        "ERC-721"
                                      ]
                                    },
                                    "tokenId": {
                                      "type": "string"
                                    },
                                    "tokenUri": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "indexStatus": {
                                          "example": "indexed",
                                          "type": "string",
                                          "description": "The metadata indexing status of the nft.",
                                          "enum": [
                                            "UNKNOWN",
                                            "MISSING_TOKEN",
                                            "INVALID_TOKEN_URI",
                                            "INVALID_TOKEN_URI_SCHEME",
                                            "UNREACHABLE_TOKEN_URI",
                                            "THROTTLED_TOKEN_URI",
                                            "METADATA_CONTENT_TOO_LARGE",
                                            "INVALID_METADATA",
                                            "INVALID_METADATA_JSON",
                                            "INDEXED",
                                            "UNINDEXED"
                                          ]
                                        },
                                        "metadataLastUpdatedTimestamp": {
                                          "type": "number"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "symbol": {
                                          "type": "string"
                                        },
                                        "imageUri": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "animationUri": {
                                          "type": "string"
                                        },
                                        "externalUrl": {
                                          "type": "string"
                                        },
                                        "background": {
                                          "type": "string"
                                        },
                                        "attributes": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "indexStatus"
                                      ]
                                    },
                                    "ownerAddress": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "name",
                                    "symbol",
                                    "ercType",
                                    "tokenId",
                                    "tokenUri",
                                    "metadata"
                                  ]
                                }
                              },
                              "required": [
                                "from",
                                "to",
                                "logIndex",
                                "erc721Token"
                              ]
                            }
                          },
                          "erc1155Transfers": {
                            "description": "The list of ERC-1155 transfers.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "logIndex": {
                                  "type": "number"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "10000000000000000000"
                                },
                                "erc1155Token": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    },
                                    "ercType": {
                                      "type": "string",
                                      "enum": [
                                        "ERC-1155"
                                      ]
                                    },
                                    "tokenId": {
                                      "type": "string"
                                    },
                                    "tokenUri": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "indexStatus": {
                                          "example": "indexed",
                                          "type": "string",
                                          "description": "The metadata indexing status of the nft.",
                                          "enum": [
                                            "UNKNOWN",
                                            "MISSING_TOKEN",
                                            "INVALID_TOKEN_URI",
                                            "INVALID_TOKEN_URI_SCHEME",
                                            "UNREACHABLE_TOKEN_URI",
                                            "THROTTLED_TOKEN_URI",
                                            "METADATA_CONTENT_TOO_LARGE",
                                            "INVALID_METADATA",
                                            "INVALID_METADATA_JSON",
                                            "INDEXED",
                                            "UNINDEXED"
                                          ]
                                        },
                                        "metadataLastUpdatedTimestamp": {
                                          "type": "number"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "symbol": {
                                          "type": "string"
                                        },
                                        "imageUri": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "animationUri": {
                                          "type": "string"
                                        },
                                        "externalUrl": {
                                          "type": "string"
                                        },
                                        "background": {
                                          "type": "string"
                                        },
                                        "decimals": {
                                          "type": "number"
                                        },
                                        "properties": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "indexStatus"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "ercType",
                                    "tokenId",
                                    "tokenUri",
                                    "metadata"
                                  ]
                                }
                              },
                              "required": [
                                "from",
                                "to",
                                "logIndex",
                                "value",
                                "erc1155Token"
                              ]
                            }
                          },
                          "internalTransactions": {
                            "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "to": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The contract name.",
                                      "example": "Wrapped AVAX"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "The contract symbol.",
                                      "example": "WAVAX"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                      "example": 18
                                    },
                                    "logoUri": {
                                      "type": "string",
                                      "description": "The logo uri for the address.",
                                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                                    }
                                  },
                                  "required": [
                                    "address"
                                  ]
                                },
                                "internalTxType": {
                                  "type": "string",
                                  "enum": [
                                    "UNKNOWN",
                                    "CALL",
                                    "CREATE",
                                    "CREATE2",
                                    "CALLCODE",
                                    "DELEGATECALL",
                                    "STATICCALL"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "example": "10000000000000000000"
                                },
                                "isReverted": {
                                  "type": "boolean",
                                  "description": "True if the internal transaction was reverted."
                                },
                                "gasUsed": {
                                  "type": "string"
                                },
                                "gasLimit": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "from",
                                "to",
                                "internalTxType",
                                "value",
                                "isReverted",
                                "gasUsed",
                                "gasLimit"
                              ]
                            }
                          }
                        },
                        "required": [
                          "nativeTransaction"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions:listNative": {
      "get": {
        "operationId": "listNativeTransactions",
        "summary": "List native transactions",
        "description": "Lists native transactions for an address. Filterable by block range.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "blockIndex": {
                            "type": "number",
                            "description": "The index at which the transaction occured in the block (0-indexed).",
                            "example": 0
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "txStatus": {
                            "type": "string",
                            "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                            "example": "1"
                          },
                          "txType": {
                            "type": "number",
                            "description": "The transaction type.",
                            "example": 1
                          },
                          "gasLimit": {
                            "type": "string",
                            "description": "The gas limit set for the transaction.",
                            "example": "51373"
                          },
                          "gasUsed": {
                            "type": "string",
                            "description": "The amount of gas used.",
                            "example": "51373"
                          },
                          "gasPrice": {
                            "type": "string",
                            "description": "The gas price denominated by the number of decimals of the native token.",
                            "example": "470000000000"
                          },
                          "nonce": {
                            "type": "string",
                            "description": "The nonce used by the sender of the transaction.",
                            "example": "1"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "method": {
                            "type": "object",
                            "properties": {
                              "callType": {
                                "example": "CONTRACT_CALL",
                                "type": "string",
                                "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                                "enum": [
                                  "NATIVE_TRANSFER",
                                  "CONTRACT_CALL",
                                  "CONTRACT_CREATION"
                                ]
                              },
                              "methodHash": {
                                "type": "string",
                                "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                                "example": "0xa9059cbb"
                              },
                              "methodName": {
                                "type": "string",
                                "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                                "example": "transfer(address,uint256)"
                              }
                            },
                            "required": [
                              "callType",
                              "methodHash"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "blockIndex",
                          "txHash",
                          "txStatus",
                          "txType",
                          "gasLimit",
                          "gasUsed",
                          "gasPrice",
                          "nonce",
                          "from",
                          "to",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions:listErc20": {
      "get": {
        "operationId": "listErc20Transactions",
        "summary": "List ERC-20 transfers",
        "description": "Lists ERC-20 transfers for an address. Filterable by block range.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc20Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-20"
                                ]
                              },
                              "price": {
                                "description": "The token price, if available.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "currencyCode": {
                                        "type": "string",
                                        "description": "ISO 4217 currency code.",
                                        "enum": [
                                          "usd",
                                          "eur",
                                          "aud",
                                          "cad",
                                          "chf",
                                          "clp",
                                          "cny",
                                          "czk",
                                          "dkk",
                                          "gbp",
                                          "hkd",
                                          "huf",
                                          "jpy",
                                          "nzd"
                                        ],
                                        "example": "usd"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "Monetary value in base 10 decimals.",
                                        "example": "42.42"
                                      }
                                    },
                                    "required": [
                                      "currencyCode",
                                      "value"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "decimals",
                              "ercType"
                            ]
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "txHash",
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc20Token"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions:listErc721": {
      "get": {
        "operationId": "listErc721Transactions",
        "summary": "List ERC-721 transfers",
        "description": "Lists ERC-721 transfers for an address. Filterable by block range.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "erc721Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "txHash",
                          "from",
                          "to",
                          "logIndex",
                          "erc721Token"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions:listErc1155": {
      "get": {
        "operationId": "listErc1155Transactions",
        "summary": "List ERC-1155 transfers",
        "description": "Lists ERC-1155 transfers for an address. Filterable by block range.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc1155Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "txHash",
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc1155Token"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/addresses/{address}/transactions:listInternals": {
      "get": {
        "operationId": "listInternalTransactions",
        "summary": "List internal transactions",
        "description": "Returns a list of internal transactions for an address and chain. Filterable by block range.\n\nNote that the internal transactions list only contains `CALL` or `CALLCODE` transactions with a non-zero value and `CREATE`/`CREATE2` transactions. To get a complete list of internal transactions use the `debug_` prefixed RPC methods on an archive node.",
        "parameters": [
          {
            "name": "startBlock",
            "required": false,
            "in": "query",
            "description": "The block range start number, inclusive. If endBlock is not defined when startBlock is defined, the end of the range will be the most recent block.",
            "example": "6479329",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endBlock",
            "required": false,
            "in": "query",
            "description": "The block range end number, exclusive. If startBlock is not defined when endBlock is defined, the start of the range will be the genesis block.",
            "example": "6479330",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "A wallet address.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "internalTxType": {
                            "type": "string",
                            "enum": [
                              "UNKNOWN",
                              "CALL",
                              "CREATE",
                              "CREATE2",
                              "CALLCODE",
                              "DELEGATECALL",
                              "STATICCALL"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "isReverted": {
                            "type": "boolean",
                            "description": "True if the internal transaction was reverted."
                          },
                          "gasUsed": {
                            "type": "string"
                          },
                          "gasLimit": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "txHash",
                          "from",
                          "to",
                          "internalTxType",
                          "value",
                          "isReverted",
                          "gasUsed",
                          "gasLimit"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/transactions/{txHash}": {
      "get": {
        "operationId": "getTransaction",
        "summary": "Get transaction",
        "description": "Gets the details of a single transaction.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txHash",
            "required": true,
            "in": "path",
            "description": "A transaction hash.",
            "example": "0x8bf584d7b14b92a32a339872a66b134a70ba3ba7c305823f348db6f860253f45",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erc20Transfers": {
                      "description": "The list of ERC-20 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc20Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-20"
                                ]
                              },
                              "price": {
                                "description": "The token price, if available.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "currencyCode": {
                                        "type": "string",
                                        "description": "ISO 4217 currency code.",
                                        "enum": [
                                          "usd",
                                          "eur",
                                          "aud",
                                          "cad",
                                          "chf",
                                          "clp",
                                          "cny",
                                          "czk",
                                          "dkk",
                                          "gbp",
                                          "hkd",
                                          "huf",
                                          "jpy",
                                          "nzd"
                                        ],
                                        "example": "usd"
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "Monetary value in base 10 decimals.",
                                        "example": "42.42"
                                      }
                                    },
                                    "required": [
                                      "currencyCode",
                                      "value"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "decimals",
                              "ercType"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc20Token"
                        ]
                      }
                    },
                    "erc721Transfers": {
                      "description": "The list of ERC-721 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "erc721Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-721"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              },
                              "ownerAddress": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address",
                              "name",
                              "symbol",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "erc721Token"
                        ]
                      }
                    },
                    "erc1155Transfers": {
                      "description": "The list of ERC-1155 transfers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "erc1155Token": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              },
                              "ercType": {
                                "type": "string",
                                "enum": [
                                  "ERC-1155"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "tokenUri": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "indexStatus": {
                                    "example": "indexed",
                                    "type": "string",
                                    "description": "The metadata indexing status of the nft.",
                                    "enum": [
                                      "UNKNOWN",
                                      "MISSING_TOKEN",
                                      "INVALID_TOKEN_URI",
                                      "INVALID_TOKEN_URI_SCHEME",
                                      "UNREACHABLE_TOKEN_URI",
                                      "THROTTLED_TOKEN_URI",
                                      "METADATA_CONTENT_TOO_LARGE",
                                      "INVALID_METADATA",
                                      "INVALID_METADATA_JSON",
                                      "INDEXED",
                                      "UNINDEXED"
                                    ]
                                  },
                                  "metadataLastUpdatedTimestamp": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "imageUri": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "animationUri": {
                                    "type": "string"
                                  },
                                  "externalUrl": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "indexStatus"
                                ]
                              }
                            },
                            "required": [
                              "address",
                              "ercType",
                              "tokenId",
                              "tokenUri",
                              "metadata"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "logIndex",
                          "value",
                          "erc1155Token"
                        ]
                      }
                    },
                    "internalTransactions": {
                      "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "internalTxType": {
                            "type": "string",
                            "enum": [
                              "UNKNOWN",
                              "CALL",
                              "CREATE",
                              "CREATE2",
                              "CALLCODE",
                              "DELEGATECALL",
                              "STATICCALL"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          },
                          "isReverted": {
                            "type": "boolean",
                            "description": "True if the internal transaction was reverted."
                          },
                          "gasUsed": {
                            "type": "string"
                          },
                          "gasLimit": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "internalTxType",
                          "value",
                          "isReverted",
                          "gasUsed",
                          "gasLimit"
                        ]
                      }
                    },
                    "networkTokenDetails": {
                      "type": "object",
                      "properties": {
                        "networkToken": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "symbol",
                            "decimals"
                          ]
                        },
                        "currentPrice": {
                          "description": "The current token price, if available.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        },
                        "historicalPrice": {
                          "description": "The historical token price at the time the transaction occured, if available. Note, this is only provided if the transaction occured more than 24 hours ago.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "networkToken"
                      ]
                    },
                    "nativeTransaction": {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string",
                          "description": "The block number on the chain.",
                          "example": "339"
                        },
                        "blockTimestamp": {
                          "type": "number",
                          "description": "The block finality timestamp.",
                          "example": 1648672486
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "The block hash identifier.",
                          "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                        },
                        "blockIndex": {
                          "type": "number",
                          "description": "The index at which the transaction occured in the block (0-indexed).",
                          "example": 0
                        },
                        "txHash": {
                          "type": "string",
                          "description": "The transaction hash identifier.",
                          "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                        },
                        "txStatus": {
                          "type": "string",
                          "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                          "example": "1"
                        },
                        "txType": {
                          "type": "number",
                          "description": "The transaction type.",
                          "example": 1
                        },
                        "gasLimit": {
                          "type": "string",
                          "description": "The gas limit set for the transaction.",
                          "example": "51373"
                        },
                        "gasUsed": {
                          "type": "string",
                          "description": "The amount of gas used.",
                          "example": "51373"
                        },
                        "gasPrice": {
                          "type": "string",
                          "description": "The gas price denominated by the number of decimals of the native token.",
                          "example": "470000000000"
                        },
                        "nonce": {
                          "type": "string",
                          "description": "The nonce used by the sender of the transaction.",
                          "example": "1"
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "method": {
                          "type": "object",
                          "properties": {
                            "callType": {
                              "example": "CONTRACT_CALL",
                              "type": "string",
                              "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                              "enum": [
                                "NATIVE_TRANSFER",
                                "CONTRACT_CALL",
                                "CONTRACT_CREATION"
                              ]
                            },
                            "methodHash": {
                              "type": "string",
                              "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                              "example": "0xa9059cbb"
                            },
                            "methodName": {
                              "type": "string",
                              "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                              "example": "transfer(address,uint256)"
                            }
                          },
                          "required": [
                            "callType",
                            "methodHash"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "example": "10000000000000000000"
                        },
                        "input": {
                          "type": "string",
                          "description": "The data sent for the transaction."
                        },
                        "baseFeePerGas": {
                          "type": "string"
                        },
                        "maxFeePerGas": {
                          "type": "string"
                        },
                        "maxPriorityFeePerGas": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockNumber",
                        "blockTimestamp",
                        "blockHash",
                        "blockIndex",
                        "txHash",
                        "txStatus",
                        "txType",
                        "gasLimit",
                        "gasUsed",
                        "gasPrice",
                        "nonce",
                        "from",
                        "to",
                        "value",
                        "input",
                        "baseFeePerGas"
                      ]
                    }
                  },
                  "required": [
                    "networkTokenDetails",
                    "nativeTransaction"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/blocks/{blockId}/transactions": {
      "get": {
        "operationId": "getTransactionsForBlock",
        "summary": "List transactions for a block",
        "description": "Lists the transactions that occured in a given block.",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockId",
            "required": true,
            "in": "path",
            "description": "A block identifier which is either a block number or the block hash.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "blockIndex": {
                            "type": "number",
                            "description": "The index at which the transaction occured in the block (0-indexed).",
                            "example": 0
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "txStatus": {
                            "type": "string",
                            "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                            "example": "1"
                          },
                          "txType": {
                            "type": "number",
                            "description": "The transaction type.",
                            "example": 1
                          },
                          "gasLimit": {
                            "type": "string",
                            "description": "The gas limit set for the transaction.",
                            "example": "51373"
                          },
                          "gasUsed": {
                            "type": "string",
                            "description": "The amount of gas used.",
                            "example": "51373"
                          },
                          "gasPrice": {
                            "type": "string",
                            "description": "The gas price denominated by the number of decimals of the native token.",
                            "example": "470000000000"
                          },
                          "nonce": {
                            "type": "string",
                            "description": "The nonce used by the sender of the transaction.",
                            "example": "1"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "method": {
                            "type": "object",
                            "properties": {
                              "callType": {
                                "example": "CONTRACT_CALL",
                                "type": "string",
                                "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                                "enum": [
                                  "NATIVE_TRANSFER",
                                  "CONTRACT_CALL",
                                  "CONTRACT_CREATION"
                                ]
                              },
                              "methodHash": {
                                "type": "string",
                                "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                                "example": "0xa9059cbb"
                              },
                              "methodName": {
                                "type": "string",
                                "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                                "example": "transfer(address,uint256)"
                              }
                            },
                            "required": [
                              "callType",
                              "methodHash"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "blockIndex",
                          "txHash",
                          "txStatus",
                          "txType",
                          "gasLimit",
                          "gasUsed",
                          "gasPrice",
                          "nonce",
                          "from",
                          "to",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    },
    "/v1/chains/{chainId}/transactions": {
      "get": {
        "operationId": "listLatestTransactions",
        "summary": "List latest transactions",
        "description": "Lists the latest transactions. Filterable by status.",
        "parameters": [
          {
            "name": "pageToken",
            "required": false,
            "in": "query",
            "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "example": "10"
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "description": "A supported evm chain id, chain alias or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.",
            "example": "43114",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "A status filter for listed transactions.",
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "success"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPageToken": {
                      "type": "string",
                      "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number on the chain.",
                            "example": "339"
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "The block finality timestamp.",
                            "example": 1648672486
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "The block hash identifier.",
                            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                          },
                          "blockIndex": {
                            "type": "number",
                            "description": "The index at which the transaction occured in the block (0-indexed).",
                            "example": 0
                          },
                          "txHash": {
                            "type": "string",
                            "description": "The transaction hash identifier.",
                            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                          },
                          "txStatus": {
                            "type": "string",
                            "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                            "example": "1"
                          },
                          "txType": {
                            "type": "number",
                            "description": "The transaction type.",
                            "example": 1
                          },
                          "gasLimit": {
                            "type": "string",
                            "description": "The gas limit set for the transaction.",
                            "example": "51373"
                          },
                          "gasUsed": {
                            "type": "string",
                            "description": "The amount of gas used.",
                            "example": "51373"
                          },
                          "gasPrice": {
                            "type": "string",
                            "description": "The gas price denominated by the number of decimals of the native token.",
                            "example": "470000000000"
                          },
                          "nonce": {
                            "type": "string",
                            "description": "The nonce used by the sender of the transaction.",
                            "example": "1"
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "to": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The contract name.",
                                "example": "Wrapped AVAX"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The contract symbol.",
                                "example": "WAVAX"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                                "example": 18
                              },
                              "logoUri": {
                                "type": "string",
                                "description": "The logo uri for the address.",
                                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                              },
                              "address": {
                                "type": "string",
                                "description": "A wallet or contract address in mixed-case checksum encoding.",
                                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                              }
                            },
                            "required": [
                              "address"
                            ]
                          },
                          "method": {
                            "type": "object",
                            "properties": {
                              "callType": {
                                "example": "CONTRACT_CALL",
                                "type": "string",
                                "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                                "enum": [
                                  "NATIVE_TRANSFER",
                                  "CONTRACT_CALL",
                                  "CONTRACT_CREATION"
                                ]
                              },
                              "methodHash": {
                                "type": "string",
                                "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                                "example": "0xa9059cbb"
                              },
                              "methodName": {
                                "type": "string",
                                "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                                "example": "transfer(address,uint256)"
                              }
                            },
                            "required": [
                              "callType",
                              "methodHash"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "example": "10000000000000000000"
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockTimestamp",
                          "blockHash",
                          "blockIndex",
                          "txHash",
                          "txStatus",
                          "txType",
                          "gasLimit",
                          "gasUsed",
                          "gasPrice",
                          "nonce",
                          "from",
                          "to",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "EVM Transactions"
        ]
      }
    }
  },
  "info": {
    "title": "Glacier API",
    "description": "The Glacier API provides web3 application developers with multi-chain data related to Avalanche's primary network, Avalanche subnets, and Ethereum. With Glacier, you can easily build products that leverage real-time and historical transaction and transfer history, native and token balances, and various types of token metadata. The API is in Beta and may be subject to change.</br></br>If you have feedback or feature requests for the API, please submit them <a href=\"https://portal.productboard.com/dndv9ahlkdfye4opdm8ksafi/tabs/4-glacier-api\">here</a>. Bug reports can be submitted <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeJQrcp7QoNiqozMDKrVJGX5wpU827d3cVTgF8qa7t_J1Pb-g/viewform\">here</a>, and any potential security issues can be reported <a href=\"https://immunefi.com/bounty/avalabs\">here</a>.",
    "version": "Beta",
    "contact": {}
  },
  "tags": [
    {
      "name": "EVM Chains",
      "description": "Find information about indexed EVM-compatible chains, such as the Avalanche C-Chain."
    },
    {
      "name": "EVM Blocks",
      "description": "Find information about blocks on EVM-compatible chains, such as the Avalanche C-Chain."
    },
    {
      "name": "EVM Transactions",
      "description": "Find information about transactions on EVM-compatible chains, such as the Avalanche C-Chain."
    },
    {
      "name": "EVM Balances",
      "description": "Find information about balances on EVM-compatible chains, such as the Avalanche C-Chain."
    },
    {
      "name": "EVM Contracts",
      "description": "Find information about contracts on EVM-compatible chains, such as the Avalanche C-Chain."
    },
    {
      "name": "Primary Network",
      "description": ""
    },
    {
      "name": "Primary Network Blocks",
      "description": "Find information about blocks on Avalanche's Primary Network Chains - the P-Chain, the X-Chain, and the C-Chain."
    },
    {
      "name": "Primary Network Vertices",
      "description": "Find information about vertices on Avalanche's X-Chain."
    },
    {
      "name": "Primary Network Transactions",
      "description": "Find information about transactions on Avalanche's Primary Network Chains - the P-Chain, the X-Chain, and the C-Chain."
    },
    {
      "name": "Primary Network Balances",
      "description": "Find information about balances on Avalanche's Primary Network Chains - the P-Chain, the X-Chain, and the C-Chain."
    },
    {
      "name": "Primary Network UTXOs",
      "description": "Find information about utxos on Avalanche's Primary Network Chains - the P-Chain, the X-Chain, and the C-Chain."
    },
    {
      "name": "Primary Network Rewards",
      "description": "Find information about rewards on Avalanche's Primary Network."
    },
    {
      "name": "NFTs",
      "description": ""
    },
    {
      "name": "Operations",
      "description": ""
    },
    {
      "name": "Health Check",
      "description": ""
    },
    {
      "name": "Teleporter",
      "description": "Find information about Teleporter transactions."
    },
    {
      "name": "Webhooks",
      "description": "Manage webhooks and get notified for various onchain activities."
    },
    {
      "name": "RPC",
      "description": "Interact with chain nodes using JSON-RPC."
    }
  ],
  "servers": [
    {
      "url": "https://glacier-api.avax.network"
    }
  ],
  "components": {
    "securitySchemes": {
      "x-glacier-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-glacier-api-key",
        "description": "Api keys provide higher access to rate limits. To obtain an api key, sign up for an account at https://avacloud.io/."
      }
    },
    "schemas": {
      "NftTokenMetadataStatus": {
        "type": "string",
        "description": "The metadata indexing status of the nft.",
        "enum": [
          "UNKNOWN",
          "MISSING_TOKEN",
          "INVALID_TOKEN_URI",
          "INVALID_TOKEN_URI_SCHEME",
          "UNREACHABLE_TOKEN_URI",
          "THROTTLED_TOKEN_URI",
          "METADATA_CONTENT_TOO_LARGE",
          "INVALID_METADATA",
          "INVALID_METADATA_JSON",
          "INDEXED",
          "UNINDEXED"
        ]
      },
      "Erc721TokenMetadata": {
        "type": "object",
        "properties": {
          "indexStatus": {
            "example": "indexed",
            "type": "string",
            "description": "The metadata indexing status of the nft.",
            "enum": [
              "UNKNOWN",
              "MISSING_TOKEN",
              "INVALID_TOKEN_URI",
              "INVALID_TOKEN_URI_SCHEME",
              "UNREACHABLE_TOKEN_URI",
              "THROTTLED_TOKEN_URI",
              "METADATA_CONTENT_TOO_LARGE",
              "INVALID_METADATA",
              "INVALID_METADATA_JSON",
              "INDEXED",
              "UNINDEXED"
            ]
          },
          "metadataLastUpdatedTimestamp": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "imageUri": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "animationUri": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "background": {
            "type": "string"
          },
          "attributes": {
            "type": "string"
          }
        },
        "required": [
          "indexStatus"
        ]
      },
      "Erc721Token": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-721"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "indexStatus": {
                "example": "indexed",
                "type": "string",
                "description": "The metadata indexing status of the nft.",
                "enum": [
                  "UNKNOWN",
                  "MISSING_TOKEN",
                  "INVALID_TOKEN_URI",
                  "INVALID_TOKEN_URI_SCHEME",
                  "UNREACHABLE_TOKEN_URI",
                  "THROTTLED_TOKEN_URI",
                  "METADATA_CONTENT_TOO_LARGE",
                  "INVALID_METADATA",
                  "INVALID_METADATA_JSON",
                  "INDEXED",
                  "UNINDEXED"
                ]
              },
              "metadataLastUpdatedTimestamp": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "imageUri": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "animationUri": {
                "type": "string"
              },
              "externalUrl": {
                "type": "string"
              },
              "background": {
                "type": "string"
              },
              "attributes": {
                "type": "string"
              }
            },
            "required": [
              "indexStatus"
            ]
          },
          "ownerAddress": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          }
        },
        "required": [
          "address",
          "name",
          "symbol",
          "ercType",
          "tokenId",
          "tokenUri",
          "metadata"
        ]
      },
      "Erc1155TokenMetadata": {
        "type": "object",
        "properties": {
          "indexStatus": {
            "example": "indexed",
            "type": "string",
            "description": "The metadata indexing status of the nft.",
            "enum": [
              "UNKNOWN",
              "MISSING_TOKEN",
              "INVALID_TOKEN_URI",
              "INVALID_TOKEN_URI_SCHEME",
              "UNREACHABLE_TOKEN_URI",
              "THROTTLED_TOKEN_URI",
              "METADATA_CONTENT_TOO_LARGE",
              "INVALID_METADATA",
              "INVALID_METADATA_JSON",
              "INDEXED",
              "UNINDEXED"
            ]
          },
          "metadataLastUpdatedTimestamp": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "imageUri": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "animationUri": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "background": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "properties": {
            "type": "string"
          }
        },
        "required": [
          "indexStatus"
        ]
      },
      "Erc1155Token": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-1155"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "indexStatus": {
                "example": "indexed",
                "type": "string",
                "description": "The metadata indexing status of the nft.",
                "enum": [
                  "UNKNOWN",
                  "MISSING_TOKEN",
                  "INVALID_TOKEN_URI",
                  "INVALID_TOKEN_URI_SCHEME",
                  "UNREACHABLE_TOKEN_URI",
                  "THROTTLED_TOKEN_URI",
                  "METADATA_CONTENT_TOO_LARGE",
                  "INVALID_METADATA",
                  "INVALID_METADATA_JSON",
                  "INDEXED",
                  "UNINDEXED"
                ]
              },
              "metadataLastUpdatedTimestamp": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "imageUri": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "animationUri": {
                "type": "string"
              },
              "externalUrl": {
                "type": "string"
              },
              "background": {
                "type": "string"
              },
              "decimals": {
                "type": "number"
              },
              "properties": {
                "type": "string"
              }
            },
            "required": [
              "indexStatus"
            ]
          }
        },
        "required": [
          "address",
          "ercType",
          "tokenId",
          "tokenUri",
          "metadata"
        ]
      },
      "ListNftTokens": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "tokens": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "properties": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "tokens"
        ]
      },
      "OperationStatusCode": {
        "type": "string",
        "enum": [
          "ErrInvalidRequest",
          "ErrInternal",
          "WarnTruncatedExport"
        ]
      },
      "TransactionExportMetadata": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "ErrInvalidRequest",
              "ErrInternal",
              "WarnTruncatedExport"
            ]
          },
          "downloadUrl": {
            "type": "string",
            "description": "File download URL. Provided only for COMPLETED and COMPLETED_WITH_WARNING operations."
          },
          "nextDate": {
            "type": "string",
            "description": "The next date (YYYY-MM-DD) to use as the firstDate in follow up requests if a request results in a transaction history exceeding the max size and has been reported as `COMPLETED_WITH_WARNING` with the warning 'WarnTruncatedExport'."
          }
        }
      },
      "OperationType": {
        "type": "string",
        "enum": [
          "TRANSACTION_EXPORT_PRIMARY_NETWORK",
          "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
          "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE",
          "TRANSACTION_EXPORT_EVM"
        ]
      },
      "OperationStatus": {
        "type": "string",
        "enum": [
          "RUNNING",
          "COMPLETED",
          "COMPLETED_WITH_WARNING",
          "FAILED"
        ]
      },
      "OperationStatusResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "operationType": {
            "type": "string",
            "enum": [
              "TRANSACTION_EXPORT_PRIMARY_NETWORK",
              "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
              "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE",
              "TRANSACTION_EXPORT_EVM"
            ]
          },
          "operationStatus": {
            "type": "string",
            "enum": [
              "RUNNING",
              "COMPLETED",
              "COMPLETED_WITH_WARNING",
              "FAILED"
            ]
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": [
                      "ErrInvalidRequest",
                      "ErrInternal",
                      "WarnTruncatedExport"
                    ]
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL. Provided only for COMPLETED and COMPLETED_WITH_WARNING operations."
                  },
                  "nextDate": {
                    "type": "string",
                    "description": "The next date (YYYY-MM-DD) to use as the firstDate in follow up requests if a request results in a transaction history exceeding the max size and has been reported as `COMPLETED_WITH_WARNING` with the warning 'WarnTruncatedExport'."
                  }
                }
              }
            ]
          },
          "createdAtTimestamp": {
            "type": "number"
          },
          "updatedAtTimestamp": {
            "type": "number"
          }
        },
        "required": [
          "operationId",
          "operationType",
          "operationStatus",
          "metadata",
          "createdAtTimestamp",
          "updatedAtTimestamp"
        ]
      },
      "EVMOperationType": {
        "type": "string",
        "enum": [
          "TRANSACTION_EXPORT_EVM"
        ]
      },
      "EvmNetworkOptions": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeChains": {
            "example": [
              "43114"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "addresses",
          "includeChains"
        ]
      },
      "CreateEvmTransactionExportRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TRANSACTION_EXPORT_EVM"
            ]
          },
          "firstDate": {
            "type": "string",
            "example": "2023-05-01"
          },
          "lastDate": {
            "type": "string",
            "example": "2023-05-02"
          },
          "startDate": {
            "type": "string",
            "example": "2023-05-01",
            "deprecated": true
          },
          "endDate": {
            "type": "string",
            "example": "2023-05-02",
            "deprecated": true
          },
          "options": {
            "type": "object",
            "properties": {
              "addresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "includeChains": {
                "example": [
                  "43114"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "addresses",
              "includeChains"
            ]
          }
        },
        "required": [
          "type",
          "firstDate",
          "lastDate",
          "startDate",
          "endDate",
          "options"
        ]
      },
      "PrimaryNetworkOperationType": {
        "type": "string",
        "enum": [
          "TRANSACTION_EXPORT_PRIMARY_NETWORK",
          "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
          "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE"
        ]
      },
      "PrimaryNetworkOptions": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cChainEvmAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeChains": {
            "type": "array",
            "example": [
              "p-chain"
            ],
            "items": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                "p-chain",
                "x-chain",
                "c-chain"
              ]
            }
          }
        },
        "required": [
          "includeChains"
        ]
      },
      "CreatePrimaryNetworkTransactionExportRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TRANSACTION_EXPORT_PRIMARY_NETWORK",
              "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING",
              "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE"
            ]
          },
          "firstDate": {
            "type": "string",
            "example": "2023-05-01"
          },
          "lastDate": {
            "type": "string",
            "example": "2023-05-02"
          },
          "startDate": {
            "type": "string",
            "example": "2023-05-01",
            "deprecated": true
          },
          "endDate": {
            "type": "string",
            "example": "2023-05-02",
            "deprecated": true
          },
          "options": {
            "type": "object",
            "properties": {
              "addresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cChainEvmAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "includeChains": {
                "type": "array",
                "example": [
                  "p-chain"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "11111111111111111111111111111111LpoYY",
                    "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                    "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                    "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                    "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
                    "p-chain",
                    "x-chain",
                    "c-chain"
                  ]
                }
              }
            },
            "required": [
              "includeChains"
            ]
          }
        },
        "required": [
          "type",
          "firstDate",
          "lastDate",
          "startDate",
          "endDate",
          "options"
        ]
      },
      "PChainTransactionType": {
        "type": "string",
        "enum": [
          "AddValidatorTx",
          "AddSubnetValidatorTx",
          "AddDelegatorTx",
          "CreateChainTx",
          "CreateSubnetTx",
          "ImportTx",
          "ExportTx",
          "AdvanceTimeTx",
          "RewardValidatorTx",
          "RemoveSubnetValidatorTx",
          "TransformSubnetTx",
          "AddPermissionlessValidatorTx",
          "AddPermissionlessDelegatorTx",
          "BaseTx",
          "TransferSubnetOwnershipTx",
          "UNKNOWN"
        ]
      },
      "PrimaryNetworkAssetType": {
        "type": "string",
        "description": "Type of asset like SECP256K1 or NFT.",
        "enum": [
          "secp256k1",
          "nft"
        ]
      },
      "AssetAmount": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount"
        ]
      },
      "RewardType": {
        "type": "string",
        "enum": [
          "VALIDATOR",
          "DELEGATOR",
          "VALIDATOR_FEE"
        ]
      },
      "UtxoType": {
        "type": "string",
        "enum": [
          "STAKE",
          "TRANSFER"
        ]
      },
      "PChainUtxo": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "Addresses that are eligible to sign the consumption of this output.",
            "example": [
              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "asset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string",
                "description": "Unique ID for an asset.",
                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
              },
              "name": {
                "type": "string",
                "description": "Name of this asset.",
                "example": "Avalanche"
              },
              "symbol": {
                "type": "string",
                "description": "Symbol for this asset (max 4 characters).",
                "example": "AVAX"
              },
              "denomination": {
                "type": "number",
                "description": "Denomination of this asset to represent fungibility.",
                "example": 9
              },
              "type": {
                "example": "secp256k1",
                "type": "string",
                "description": "Type of asset like SECP256K1 or NFT.",
                "enum": [
                  "secp256k1",
                  "nft"
                ]
              },
              "amount": {
                "type": "string",
                "description": "Amount of the asset.",
                "example": "5001000"
              }
            },
            "required": [
              "assetId",
              "name",
              "symbol",
              "denomination",
              "type",
              "amount"
            ]
          },
          "consumedOnChainId": {
            "type": "string",
            "description": "Blockchain ID on which this output is consumed on.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "consumingTxHash": {
            "type": "string",
            "description": "Transaction ID that consumed this output.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "createdOnChainId": {
            "type": "string",
            "description": "Blockchain ID on which this output is created on.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "utxoId": {
            "type": "string",
            "description": "UTXO ID for this output.",
            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
          },
          "amount": {
            "type": "string",
            "deprecated": true
          },
          "assetId": {
            "type": "string",
            "deprecated": true
          },
          "blockNumber": {
            "type": "string"
          },
          "blockTimestamp": {
            "type": "number"
          },
          "consumingBlockNumber": {
            "type": "string"
          },
          "consumingBlockTimestamp": {
            "type": "number"
          },
          "platformLocktime": {
            "type": "number"
          },
          "outputIndex": {
            "type": "number"
          },
          "rewardType": {
            "type": "string",
            "enum": [
              "VALIDATOR",
              "DELEGATOR",
              "VALIDATOR_FEE"
            ]
          },
          "stakeableLocktime": {
            "type": "number"
          },
          "staked": {
            "type": "boolean"
          },
          "threshold": {
            "type": "number"
          },
          "txHash": {
            "type": "string"
          },
          "utxoEndTimestamp": {
            "type": "number"
          },
          "utxoStartTimestamp": {
            "type": "number"
          },
          "utxoType": {
            "type": "string",
            "enum": [
              "STAKE",
              "TRANSFER"
            ]
          }
        },
        "required": [
          "addresses",
          "asset",
          "consumedOnChainId",
          "createdOnChainId",
          "utxoId",
          "amount",
          "assetId",
          "blockNumber",
          "blockTimestamp",
          "outputIndex",
          "txHash",
          "utxoType"
        ]
      },
      "SubnetOwnershipInfo": {
        "type": "object",
        "properties": {
          "locktime": {
            "type": "number",
            "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
            "example": 0
          },
          "threshold": {
            "type": "number",
            "description": "Minimum number of signatures required to sign the Subnet update transactions.",
            "example": 1
          },
          "addresses": {
            "description": "Addresses that are eligible to sign the Subnet update transactions.",
            "example": [
              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "locktime",
          "threshold",
          "addresses"
        ]
      },
      "PChainTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "description": "A P-Chain transaction hash.",
            "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP"
          },
          "txType": {
            "example": "AddDelegatorTx",
            "type": "string",
            "enum": [
              "AddValidatorTx",
              "AddSubnetValidatorTx",
              "AddDelegatorTx",
              "CreateChainTx",
              "CreateSubnetTx",
              "ImportTx",
              "ExportTx",
              "AdvanceTimeTx",
              "RewardValidatorTx",
              "RemoveSubnetValidatorTx",
              "TransformSubnetTx",
              "AddPermissionlessValidatorTx",
              "AddPermissionlessDelegatorTx",
              "BaseTx",
              "TransferSubnetOwnershipTx",
              "UNKNOWN"
            ]
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockNumber": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "consumedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "amount": {
                  "type": "string",
                  "deprecated": true
                },
                "assetId": {
                  "type": "string",
                  "deprecated": true
                },
                "blockNumber": {
                  "type": "string"
                },
                "blockTimestamp": {
                  "type": "number"
                },
                "consumingBlockNumber": {
                  "type": "string"
                },
                "consumingBlockTimestamp": {
                  "type": "number"
                },
                "platformLocktime": {
                  "type": "number"
                },
                "outputIndex": {
                  "type": "number"
                },
                "rewardType": {
                  "type": "string",
                  "enum": [
                    "VALIDATOR",
                    "DELEGATOR",
                    "VALIDATOR_FEE"
                  ]
                },
                "stakeableLocktime": {
                  "type": "number"
                },
                "staked": {
                  "type": "boolean"
                },
                "threshold": {
                  "type": "number"
                },
                "txHash": {
                  "type": "string"
                },
                "utxoEndTimestamp": {
                  "type": "number"
                },
                "utxoStartTimestamp": {
                  "type": "number"
                },
                "utxoType": {
                  "type": "string",
                  "enum": [
                    "STAKE",
                    "TRANSFER"
                  ]
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "amount",
                "assetId",
                "blockNumber",
                "blockTimestamp",
                "outputIndex",
                "txHash",
                "utxoType"
              ]
            }
          },
          "emittedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "amount": {
                  "type": "string",
                  "deprecated": true
                },
                "assetId": {
                  "type": "string",
                  "deprecated": true
                },
                "blockNumber": {
                  "type": "string"
                },
                "blockTimestamp": {
                  "type": "number"
                },
                "consumingBlockNumber": {
                  "type": "string"
                },
                "consumingBlockTimestamp": {
                  "type": "number"
                },
                "platformLocktime": {
                  "type": "number"
                },
                "outputIndex": {
                  "type": "number"
                },
                "rewardType": {
                  "type": "string",
                  "enum": [
                    "VALIDATOR",
                    "DELEGATOR",
                    "VALIDATOR_FEE"
                  ]
                },
                "stakeableLocktime": {
                  "type": "number"
                },
                "staked": {
                  "type": "boolean"
                },
                "threshold": {
                  "type": "number"
                },
                "txHash": {
                  "type": "string"
                },
                "utxoEndTimestamp": {
                  "type": "number"
                },
                "utxoStartTimestamp": {
                  "type": "number"
                },
                "utxoType": {
                  "type": "string",
                  "enum": [
                    "STAKE",
                    "TRANSFER"
                  ]
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "amount",
                "assetId",
                "blockNumber",
                "blockTimestamp",
                "outputIndex",
                "txHash",
                "utxoType"
              ]
            }
          },
          "sourceChain": {
            "type": "string",
            "description": "Source chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "destinationChain": {
            "type": "string",
            "description": "Destination chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "value": {
            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountBurned": {
            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountStaked": {
            "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID. Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "startTimestamp": {
            "type": "number",
            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
          },
          "endTimestamp": {
            "type": "number",
            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
          },
          "delegationFeePercent": {
            "type": "string",
            "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx"
          },
          "nodeId": {
            "type": "string",
            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
          },
          "subnetId": {
            "type": "string",
            "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx, CreateChainTx, CreateSubnetTx"
          },
          "estimatedReward": {
            "type": "string",
            "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
          },
          "rewardTxHash": {
            "type": "string"
          },
          "rewardAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memo": {
            "type": "string"
          },
          "stakingTxHash": {
            "type": "string",
            "description": "Present for RewardValidatorTx"
          },
          "subnetOwnershipInfo": {
            "description": "Subnet owner details for the CreateSubnetTx or TransferSubnetOwnershipTx",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "locktime": {
                    "type": "number",
                    "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                    "example": 0
                  },
                  "threshold": {
                    "type": "number",
                    "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                    "example": 1
                  },
                  "addresses": {
                    "description": "Addresses that are eligible to sign the Subnet update transactions.",
                    "example": [
                      "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "locktime",
                  "threshold",
                  "addresses"
                ]
              }
            ]
          }
        },
        "required": [
          "txHash",
          "txType",
          "blockTimestamp",
          "blockNumber",
          "blockHash",
          "consumedUtxos",
          "emittedUtxos",
          "value",
          "amountBurned",
          "amountStaked"
        ]
      },
      "XChainTransactionType": {
        "type": "string",
        "description": "Type of transaction.",
        "enum": [
          "BaseTx",
          "CreateAssetTx",
          "OperationTx",
          "ImportTx",
          "ExportTx",
          "UNKNOWN"
        ]
      },
      "UtxoCredential": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string",
            "description": "Signature provided to consume the output.",
            "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
          },
          "publicKey": {
            "type": "string",
            "description": "Public key associated with the signature.",
            "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
          }
        }
      },
      "Utxo": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "Addresses that are eligible to sign the consumption of this output.",
            "example": [
              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "asset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string",
                "description": "Unique ID for an asset.",
                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
              },
              "name": {
                "type": "string",
                "description": "Name of this asset.",
                "example": "Avalanche"
              },
              "symbol": {
                "type": "string",
                "description": "Symbol for this asset (max 4 characters).",
                "example": "AVAX"
              },
              "denomination": {
                "type": "number",
                "description": "Denomination of this asset to represent fungibility.",
                "example": 9
              },
              "type": {
                "example": "secp256k1",
                "type": "string",
                "description": "Type of asset like SECP256K1 or NFT.",
                "enum": [
                  "secp256k1",
                  "nft"
                ]
              },
              "amount": {
                "type": "string",
                "description": "Amount of the asset.",
                "example": "5001000"
              }
            },
            "required": [
              "assetId",
              "name",
              "symbol",
              "denomination",
              "type",
              "amount"
            ]
          },
          "consumedOnChainId": {
            "type": "string",
            "description": "Blockchain ID on which this output is consumed on.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "consumingTxHash": {
            "type": "string",
            "description": "Transaction ID that consumed this output.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "createdOnChainId": {
            "type": "string",
            "description": "Blockchain ID on which this output is created on.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "utxoId": {
            "type": "string",
            "description": "UTXO ID for this output.",
            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
          },
          "consumingTxTimestamp": {
            "type": "number",
            "description": "Unix timestamp in seconds at which this output was consumed.",
            "example": 1599696000
          },
          "creationTxHash": {
            "type": "string",
            "description": "Transaction ID that created this output.",
            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
          },
          "credentials": {
            "description": "Credentials that signed the transaction to consume this utxo",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "description": "Signature provided to consume the output.",
                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                },
                "publicKey": {
                  "type": "string",
                  "description": "Public key associated with the signature.",
                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                }
              }
            }
          },
          "groupId": {
            "type": "number",
            "description": "Index representing the minting set for the NFT mint output."
          },
          "locktime": {
            "type": "number",
            "description": "Locktime in seconds after which this output can be consumed.",
            "example": 0
          },
          "outputIndex": {
            "type": "string",
            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
            "example": "38"
          },
          "payload": {
            "type": "string",
            "description": "Hex encoded data for NFT assets."
          },
          "threshold": {
            "type": "number",
            "description": "Minimum number of signatures required to consume this output.",
            "example": 1
          },
          "timestamp": {
            "type": "number",
            "description": "Unix timestamp in seconds at which this outptut was created.",
            "example": 1599696000
          },
          "utxoType": {
            "type": "string",
            "description": "Type of output.",
            "example": "mint"
          }
        },
        "required": [
          "addresses",
          "asset",
          "consumedOnChainId",
          "createdOnChainId",
          "utxoId",
          "creationTxHash",
          "locktime",
          "outputIndex",
          "threshold",
          "timestamp",
          "utxoType"
        ]
      },
      "PrimaryNetworkAssetCap": {
        "type": "string",
        "description": "Cap represents if an asset is a variable or fixed cap asset.",
        "enum": [
          "fixed",
          "variable"
        ]
      },
      "XChainAssetDetails": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "createdAtTimestamp": {
            "type": "number",
            "description": "Timestamp in seconds this asset was created on.",
            "example": 1675444720
          },
          "cap": {
            "example": "fixed",
            "type": "string",
            "description": "Cap represents if an asset is a variable or fixed cap asset.",
            "enum": [
              "fixed",
              "variable"
            ]
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "createdAtTimestamp",
          "cap"
        ]
      },
      "TransactionVertexDetail": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Vertex ID of the vertex this transaction belongs to.",
            "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
          },
          "height": {
            "type": "number",
            "description": "Vertex height of the vertex this transaction belongs to.",
            "example": 1961
          },
          "timestamp": {
            "type": "number",
            "description": "Timestamp in seconds this vertex was accepted.",
            "example": 1600762738
          }
        },
        "required": [
          "hash",
          "height",
          "timestamp"
        ]
      },
      "XChainNonLinearTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Unique ID for this transaction.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "chainFormat": {
            "type": "string",
            "description": "Represents chain format this transaction is included in.",
            "enum": [
              "non-linear",
              "linear"
            ],
            "example": "non-linear"
          },
          "timestamp": {
            "type": "number",
            "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
            "example": 1600762738
          },
          "txType": {
            "example": "BaseTx",
            "type": "string",
            "description": "Type of transaction.",
            "enum": [
              "BaseTx",
              "CreateAssetTx",
              "OperationTx",
              "ImportTx",
              "ExportTx",
              "UNKNOWN"
            ]
          },
          "memo": {
            "type": "string",
            "description": "Hex encoded memo bytes for this transaction.",
            "example": "0x546865204176616c616e6368652050726f6a656374"
          },
          "consumedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          },
          "emittedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          },
          "amountUnlocked": {
            "description": "Assets unlocked by inputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountCreated": {
            "description": "Assets created by outputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "sourceChain": {
            "type": "string",
            "description": "Source chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "destinationChain": {
            "type": "string",
            "description": "Destination chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "assetCreated": {
            "description": "AssetAmount details of the asset created in CreateAssetTx",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "assetId": {
                    "type": "string",
                    "description": "Unique ID for an asset.",
                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this asset.",
                    "example": "Avalanche"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Symbol for this asset (max 4 characters).",
                    "example": "AVAX"
                  },
                  "denomination": {
                    "type": "number",
                    "description": "Denomination of this asset to represent fungibility.",
                    "example": 9
                  },
                  "type": {
                    "example": "secp256k1",
                    "type": "string",
                    "description": "Type of asset like SECP256K1 or NFT.",
                    "enum": [
                      "secp256k1",
                      "nft"
                    ]
                  },
                  "createdAtTimestamp": {
                    "type": "number",
                    "description": "Timestamp in seconds this asset was created on.",
                    "example": 1675444720
                  },
                  "cap": {
                    "example": "fixed",
                    "type": "string",
                    "description": "Cap represents if an asset is a variable or fixed cap asset.",
                    "enum": [
                      "fixed",
                      "variable"
                    ]
                  }
                },
                "required": [
                  "assetId",
                  "name",
                  "symbol",
                  "denomination",
                  "type",
                  "createdAtTimestamp",
                  "cap"
                ]
              }
            ]
          },
          "vertices": {
            "description": "A transaction on X-Chain can be accepted over multiple vertices.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "description": "Vertex ID of the vertex this transaction belongs to.",
                  "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                },
                "height": {
                  "type": "number",
                  "description": "Vertex height of the vertex this transaction belongs to.",
                  "example": 1961
                },
                "timestamp": {
                  "type": "number",
                  "description": "Timestamp in seconds this vertex was accepted.",
                  "example": 1600762738
                }
              },
              "required": [
                "hash",
                "height",
                "timestamp"
              ]
            }
          }
        },
        "required": [
          "txHash",
          "chainFormat",
          "timestamp",
          "txType",
          "memo",
          "consumedUtxos",
          "emittedUtxos",
          "amountUnlocked",
          "amountCreated",
          "vertices"
        ]
      },
      "XChainLinearTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Unique ID for this transaction.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "chainFormat": {
            "type": "string",
            "description": "Represents chain format this transaction is included in.",
            "enum": [
              "non-linear",
              "linear"
            ],
            "example": "non-linear"
          },
          "timestamp": {
            "type": "number",
            "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
            "example": 1600762738
          },
          "txType": {
            "example": "BaseTx",
            "type": "string",
            "description": "Type of transaction.",
            "enum": [
              "BaseTx",
              "CreateAssetTx",
              "OperationTx",
              "ImportTx",
              "ExportTx",
              "UNKNOWN"
            ]
          },
          "memo": {
            "type": "string",
            "description": "Hex encoded memo bytes for this transaction.",
            "example": "0x546865204176616c616e6368652050726f6a656374"
          },
          "consumedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          },
          "emittedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          },
          "amountUnlocked": {
            "description": "Assets unlocked by inputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountCreated": {
            "description": "Assets created by outputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "sourceChain": {
            "type": "string",
            "description": "Source chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "destinationChain": {
            "type": "string",
            "description": "Destination chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "assetCreated": {
            "description": "AssetAmount details of the asset created in CreateAssetTx",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "assetId": {
                    "type": "string",
                    "description": "Unique ID for an asset.",
                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this asset.",
                    "example": "Avalanche"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Symbol for this asset (max 4 characters).",
                    "example": "AVAX"
                  },
                  "denomination": {
                    "type": "number",
                    "description": "Denomination of this asset to represent fungibility.",
                    "example": 9
                  },
                  "type": {
                    "example": "secp256k1",
                    "type": "string",
                    "description": "Type of asset like SECP256K1 or NFT.",
                    "enum": [
                      "secp256k1",
                      "nft"
                    ]
                  },
                  "createdAtTimestamp": {
                    "type": "number",
                    "description": "Timestamp in seconds this asset was created on.",
                    "example": 1675444720
                  },
                  "cap": {
                    "example": "fixed",
                    "type": "string",
                    "description": "Cap represents if an asset is a variable or fixed cap asset.",
                    "enum": [
                      "fixed",
                      "variable"
                    ]
                  }
                },
                "required": [
                  "assetId",
                  "name",
                  "symbol",
                  "denomination",
                  "type",
                  "createdAtTimestamp",
                  "cap"
                ]
              }
            ]
          },
          "blockHeight": {
            "type": "number",
            "description": "Height of the block this transaction belongs to.",
            "example": 1005
          },
          "blockHash": {
            "type": "string",
            "description": "Hash of the block this transaction belongs to.",
            "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
          }
        },
        "required": [
          "txHash",
          "chainFormat",
          "timestamp",
          "txType",
          "memo",
          "consumedUtxos",
          "emittedUtxos",
          "amountUnlocked",
          "amountCreated",
          "blockHeight",
          "blockHash"
        ]
      },
      "EVMInput": {
        "type": "object",
        "properties": {
          "fromAddress": {
            "type": "string",
            "description": "EVM address from which the asset is exported in ExportTx.",
            "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
          },
          "asset": {
            "description": "AssetAmount details for the asset being transferred.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "assetId": {
                    "type": "string",
                    "description": "Unique ID for an asset.",
                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this asset.",
                    "example": "Avalanche"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Symbol for this asset (max 4 characters).",
                    "example": "AVAX"
                  },
                  "denomination": {
                    "type": "number",
                    "description": "Denomination of this asset to represent fungibility.",
                    "example": 9
                  },
                  "type": {
                    "example": "secp256k1",
                    "type": "string",
                    "description": "Type of asset like SECP256K1 or NFT.",
                    "enum": [
                      "secp256k1",
                      "nft"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the asset.",
                    "example": "5001000"
                  }
                },
                "required": [
                  "assetId",
                  "name",
                  "symbol",
                  "denomination",
                  "type",
                  "amount"
                ]
              }
            ]
          },
          "credentials": {
            "description": "Credentials that signed this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "description": "Signature provided to consume the output.",
                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                },
                "publicKey": {
                  "type": "string",
                  "description": "Public key associated with the signature.",
                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                }
              }
            }
          }
        },
        "required": [
          "fromAddress",
          "asset",
          "credentials"
        ]
      },
      "CChainExportTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Unique ID for this transaction.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "blockHeight": {
            "type": "number",
            "description": "Height of the block this transaction belongs to.",
            "example": 1005
          },
          "blockHash": {
            "type": "string",
            "description": "Hash of the block this transaction belongs to.",
            "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
          },
          "timestamp": {
            "type": "number",
            "description": "Latest timestamp in seconds this transaction was accepted.",
            "example": 1600762738
          },
          "memo": {
            "type": "string",
            "description": "Hex encoded memo bytes for this transaction.",
            "example": "0x546865204176616c616e6368652050726f6a656374"
          },
          "amountUnlocked": {
            "description": "Assets unlocked by inputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountCreated": {
            "description": "Assets created by outputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "sourceChain": {
            "type": "string",
            "description": "Source chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "destinationChain": {
            "type": "string",
            "description": "Destination chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "txType": {
            "type": "string",
            "description": "Type of transaction.",
            "enum": [
              "ExportTx"
            ],
            "example": "ExportTx"
          },
          "evmInputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fromAddress": {
                  "type": "string",
                  "description": "EVM address from which the asset is exported in ExportTx.",
                  "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                },
                "asset": {
                  "description": "AssetAmount details for the asset being transferred.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string",
                          "description": "Unique ID for an asset.",
                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of this asset.",
                          "example": "Avalanche"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "Symbol for this asset (max 4 characters).",
                          "example": "AVAX"
                        },
                        "denomination": {
                          "type": "number",
                          "description": "Denomination of this asset to represent fungibility.",
                          "example": 9
                        },
                        "type": {
                          "example": "secp256k1",
                          "type": "string",
                          "description": "Type of asset like SECP256K1 or NFT.",
                          "enum": [
                            "secp256k1",
                            "nft"
                          ]
                        },
                        "amount": {
                          "type": "string",
                          "description": "Amount of the asset.",
                          "example": "5001000"
                        }
                      },
                      "required": [
                        "assetId",
                        "name",
                        "symbol",
                        "denomination",
                        "type",
                        "amount"
                      ]
                    }
                  ]
                },
                "credentials": {
                  "description": "Credentials that signed this transaction.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                }
              },
              "required": [
                "fromAddress",
                "asset",
                "credentials"
              ]
            }
          },
          "emittedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          }
        },
        "required": [
          "txHash",
          "blockHeight",
          "blockHash",
          "timestamp",
          "memo",
          "amountUnlocked",
          "amountCreated",
          "sourceChain",
          "destinationChain",
          "txType",
          "evmInputs",
          "emittedUtxos"
        ]
      },
      "EVMOutput": {
        "type": "object",
        "properties": {
          "toAddress": {
            "type": "string",
            "description": "EVM address to which the asset is imported in ImportTx",
            "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
          },
          "asset": {
            "description": "AssetAmount details for the asset being transferred.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "assetId": {
                    "type": "string",
                    "description": "Unique ID for an asset.",
                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this asset.",
                    "example": "Avalanche"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Symbol for this asset (max 4 characters).",
                    "example": "AVAX"
                  },
                  "denomination": {
                    "type": "number",
                    "description": "Denomination of this asset to represent fungibility.",
                    "example": 9
                  },
                  "type": {
                    "example": "secp256k1",
                    "type": "string",
                    "description": "Type of asset like SECP256K1 or NFT.",
                    "enum": [
                      "secp256k1",
                      "nft"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the asset.",
                    "example": "5001000"
                  }
                },
                "required": [
                  "assetId",
                  "name",
                  "symbol",
                  "denomination",
                  "type",
                  "amount"
                ]
              }
            ]
          }
        },
        "required": [
          "toAddress",
          "asset"
        ]
      },
      "CChainImportTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Unique ID for this transaction.",
            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
          },
          "blockHeight": {
            "type": "number",
            "description": "Height of the block this transaction belongs to.",
            "example": 1005
          },
          "blockHash": {
            "type": "string",
            "description": "Hash of the block this transaction belongs to.",
            "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
          },
          "timestamp": {
            "type": "number",
            "description": "Latest timestamp in seconds this transaction was accepted.",
            "example": 1600762738
          },
          "memo": {
            "type": "string",
            "description": "Hex encoded memo bytes for this transaction.",
            "example": "0x546865204176616c616e6368652050726f6a656374"
          },
          "amountUnlocked": {
            "description": "Assets unlocked by inputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "amountCreated": {
            "description": "Assets created by outputs of this transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount"
              ]
            }
          },
          "sourceChain": {
            "type": "string",
            "description": "Source chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "destinationChain": {
            "type": "string",
            "description": "Destination chain for an atomic transaction.",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "txType": {
            "type": "string",
            "description": "Type of transaction.",
            "enum": [
              "ImportTx"
            ],
            "example": "ImportTx"
          },
          "evmOutputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "toAddress": {
                  "type": "string",
                  "description": "EVM address to which the asset is imported in ImportTx",
                  "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                },
                "asset": {
                  "description": "AssetAmount details for the asset being transferred.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string",
                          "description": "Unique ID for an asset.",
                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of this asset.",
                          "example": "Avalanche"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "Symbol for this asset (max 4 characters).",
                          "example": "AVAX"
                        },
                        "denomination": {
                          "type": "number",
                          "description": "Denomination of this asset to represent fungibility.",
                          "example": 9
                        },
                        "type": {
                          "example": "secp256k1",
                          "type": "string",
                          "description": "Type of asset like SECP256K1 or NFT.",
                          "enum": [
                            "secp256k1",
                            "nft"
                          ]
                        },
                        "amount": {
                          "type": "string",
                          "description": "Amount of the asset.",
                          "example": "5001000"
                        }
                      },
                      "required": [
                        "assetId",
                        "name",
                        "symbol",
                        "denomination",
                        "type",
                        "amount"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "toAddress",
                "asset"
              ]
            }
          },
          "consumedUtxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          }
        },
        "required": [
          "txHash",
          "blockHeight",
          "blockHash",
          "timestamp",
          "memo",
          "amountUnlocked",
          "amountCreated",
          "sourceChain",
          "destinationChain",
          "txType",
          "evmOutputs",
          "consumedUtxos"
        ]
      },
      "BlockchainId": {
        "type": "string",
        "enum": [
          "11111111111111111111111111111111LpoYY",
          "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
          "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
          "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
          "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp",
          "p-chain",
          "x-chain",
          "c-chain"
        ]
      },
      "Network": {
        "type": "string",
        "enum": [
          "mainnet",
          "fuji"
        ]
      },
      "PrimaryNetworkChainName": {
        "type": "string",
        "enum": [
          "p-chain",
          "x-chain",
          "c-chain"
        ]
      },
      "PrimaryNetwork": {
        "type": "string",
        "enum": [
          "mainnet",
          "fuji"
        ]
      },
      "PrimaryNetworkChainInfo": {
        "type": "object",
        "properties": {
          "chainName": {
            "type": "string",
            "enum": [
              "p-chain",
              "x-chain",
              "c-chain"
            ]
          },
          "network": {
            "type": "string",
            "enum": [
              "mainnet",
              "fuji"
            ]
          }
        },
        "required": [
          "chainName",
          "network"
        ]
      },
      "ListPChainTransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "txHash": {
                  "type": "string",
                  "description": "A P-Chain transaction hash.",
                  "example": "3P91K6nuDFvDodcRuJTsgdf9SvYe5pMiKk38HppsoeAiEztCP"
                },
                "txType": {
                  "example": "AddDelegatorTx",
                  "type": "string",
                  "enum": [
                    "AddValidatorTx",
                    "AddSubnetValidatorTx",
                    "AddDelegatorTx",
                    "CreateChainTx",
                    "CreateSubnetTx",
                    "ImportTx",
                    "ExportTx",
                    "AdvanceTimeTx",
                    "RewardValidatorTx",
                    "RemoveSubnetValidatorTx",
                    "TransformSubnetTx",
                    "AddPermissionlessValidatorTx",
                    "AddPermissionlessDelegatorTx",
                    "BaseTx",
                    "TransferSubnetOwnershipTx",
                    "UNKNOWN"
                  ]
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockNumber": {
                  "type": "string"
                },
                "blockHash": {
                  "type": "string"
                },
                "consumedUtxos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "description": "Addresses that are eligible to sign the consumption of this output.",
                        "example": [
                          "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "asset": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      },
                      "consumedOnChainId": {
                        "type": "string",
                        "description": "Blockchain ID on which this output is consumed on.",
                        "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                      },
                      "consumingTxHash": {
                        "type": "string",
                        "description": "Transaction ID that consumed this output.",
                        "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                      },
                      "createdOnChainId": {
                        "type": "string",
                        "description": "Blockchain ID on which this output is created on.",
                        "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                      },
                      "utxoId": {
                        "type": "string",
                        "description": "UTXO ID for this output.",
                        "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                      },
                      "amount": {
                        "type": "string",
                        "deprecated": true
                      },
                      "assetId": {
                        "type": "string",
                        "deprecated": true
                      },
                      "blockNumber": {
                        "type": "string"
                      },
                      "blockTimestamp": {
                        "type": "number"
                      },
                      "consumingBlockNumber": {
                        "type": "string"
                      },
                      "consumingBlockTimestamp": {
                        "type": "number"
                      },
                      "platformLocktime": {
                        "type": "number"
                      },
                      "outputIndex": {
                        "type": "number"
                      },
                      "rewardType": {
                        "type": "string",
                        "enum": [
                          "VALIDATOR",
                          "DELEGATOR",
                          "VALIDATOR_FEE"
                        ]
                      },
                      "stakeableLocktime": {
                        "type": "number"
                      },
                      "staked": {
                        "type": "boolean"
                      },
                      "threshold": {
                        "type": "number"
                      },
                      "txHash": {
                        "type": "string"
                      },
                      "utxoEndTimestamp": {
                        "type": "number"
                      },
                      "utxoStartTimestamp": {
                        "type": "number"
                      },
                      "utxoType": {
                        "type": "string",
                        "enum": [
                          "STAKE",
                          "TRANSFER"
                        ]
                      }
                    },
                    "required": [
                      "addresses",
                      "asset",
                      "consumedOnChainId",
                      "createdOnChainId",
                      "utxoId",
                      "amount",
                      "assetId",
                      "blockNumber",
                      "blockTimestamp",
                      "outputIndex",
                      "txHash",
                      "utxoType"
                    ]
                  }
                },
                "emittedUtxos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "description": "Addresses that are eligible to sign the consumption of this output.",
                        "example": [
                          "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "asset": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      },
                      "consumedOnChainId": {
                        "type": "string",
                        "description": "Blockchain ID on which this output is consumed on.",
                        "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                      },
                      "consumingTxHash": {
                        "type": "string",
                        "description": "Transaction ID that consumed this output.",
                        "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                      },
                      "createdOnChainId": {
                        "type": "string",
                        "description": "Blockchain ID on which this output is created on.",
                        "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                      },
                      "utxoId": {
                        "type": "string",
                        "description": "UTXO ID for this output.",
                        "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                      },
                      "amount": {
                        "type": "string",
                        "deprecated": true
                      },
                      "assetId": {
                        "type": "string",
                        "deprecated": true
                      },
                      "blockNumber": {
                        "type": "string"
                      },
                      "blockTimestamp": {
                        "type": "number"
                      },
                      "consumingBlockNumber": {
                        "type": "string"
                      },
                      "consumingBlockTimestamp": {
                        "type": "number"
                      },
                      "platformLocktime": {
                        "type": "number"
                      },
                      "outputIndex": {
                        "type": "number"
                      },
                      "rewardType": {
                        "type": "string",
                        "enum": [
                          "VALIDATOR",
                          "DELEGATOR",
                          "VALIDATOR_FEE"
                        ]
                      },
                      "stakeableLocktime": {
                        "type": "number"
                      },
                      "staked": {
                        "type": "boolean"
                      },
                      "threshold": {
                        "type": "number"
                      },
                      "txHash": {
                        "type": "string"
                      },
                      "utxoEndTimestamp": {
                        "type": "number"
                      },
                      "utxoStartTimestamp": {
                        "type": "number"
                      },
                      "utxoType": {
                        "type": "string",
                        "enum": [
                          "STAKE",
                          "TRANSFER"
                        ]
                      }
                    },
                    "required": [
                      "addresses",
                      "asset",
                      "consumedOnChainId",
                      "createdOnChainId",
                      "utxoId",
                      "amount",
                      "assetId",
                      "blockNumber",
                      "blockTimestamp",
                      "outputIndex",
                      "txHash",
                      "utxoType"
                    ]
                  }
                },
                "sourceChain": {
                  "type": "string",
                  "description": "Source chain for an atomic transaction.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "destinationChain": {
                  "type": "string",
                  "description": "Destination chain for an atomic transaction.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "value": {
                  "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assetId": {
                        "type": "string",
                        "description": "Unique ID for an asset.",
                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of this asset.",
                        "example": "Avalanche"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "Symbol for this asset (max 4 characters).",
                        "example": "AVAX"
                      },
                      "denomination": {
                        "type": "number",
                        "description": "Denomination of this asset to represent fungibility.",
                        "example": 9
                      },
                      "type": {
                        "example": "secp256k1",
                        "type": "string",
                        "description": "Type of asset like SECP256K1 or NFT.",
                        "enum": [
                          "secp256k1",
                          "nft"
                        ]
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount of the asset.",
                        "example": "5001000"
                      }
                    },
                    "required": [
                      "assetId",
                      "name",
                      "symbol",
                      "denomination",
                      "type",
                      "amount"
                    ]
                  }
                },
                "amountBurned": {
                  "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assetId": {
                        "type": "string",
                        "description": "Unique ID for an asset.",
                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of this asset.",
                        "example": "Avalanche"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "Symbol for this asset (max 4 characters).",
                        "example": "AVAX"
                      },
                      "denomination": {
                        "type": "number",
                        "description": "Denomination of this asset to represent fungibility.",
                        "example": 9
                      },
                      "type": {
                        "example": "secp256k1",
                        "type": "string",
                        "description": "Type of asset like SECP256K1 or NFT.",
                        "enum": [
                          "secp256k1",
                          "nft"
                        ]
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount of the asset.",
                        "example": "5001000"
                      }
                    },
                    "required": [
                      "assetId",
                      "name",
                      "symbol",
                      "denomination",
                      "type",
                      "amount"
                    ]
                  }
                },
                "amountStaked": {
                  "description": "A list of objects containing P-chain Asset basic info and the amount of that Asset ID. Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assetId": {
                        "type": "string",
                        "description": "Unique ID for an asset.",
                        "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of this asset.",
                        "example": "Avalanche"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "Symbol for this asset (max 4 characters).",
                        "example": "AVAX"
                      },
                      "denomination": {
                        "type": "number",
                        "description": "Denomination of this asset to represent fungibility.",
                        "example": 9
                      },
                      "type": {
                        "example": "secp256k1",
                        "type": "string",
                        "description": "Type of asset like SECP256K1 or NFT.",
                        "enum": [
                          "secp256k1",
                          "nft"
                        ]
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount of the asset.",
                        "example": "5001000"
                      }
                    },
                    "required": [
                      "assetId",
                      "name",
                      "symbol",
                      "denomination",
                      "type",
                      "amount"
                    ]
                  }
                },
                "startTimestamp": {
                  "type": "number",
                  "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                },
                "endTimestamp": {
                  "type": "number",
                  "description": "Present for AddValidatorTx, AddSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                },
                "delegationFeePercent": {
                  "type": "string",
                  "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx"
                },
                "nodeId": {
                  "type": "string",
                  "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                },
                "subnetId": {
                  "type": "string",
                  "description": "Present for AddValidatorTx, AddSubnetValidatorTx, RemoveSubnetValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx, CreateChainTx, CreateSubnetTx"
                },
                "estimatedReward": {
                  "type": "string",
                  "description": "Present for AddValidatorTx, AddPermissionlessValidatorTx, AddDelegatorTx"
                },
                "rewardTxHash": {
                  "type": "string"
                },
                "rewardAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "memo": {
                  "type": "string"
                },
                "stakingTxHash": {
                  "type": "string",
                  "description": "Present for RewardValidatorTx"
                },
                "subnetOwnershipInfo": {
                  "description": "Subnet owner details for the CreateSubnetTx or TransferSubnetOwnershipTx",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "locktime": {
                          "type": "number",
                          "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                          "example": 0
                        },
                        "threshold": {
                          "type": "number",
                          "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                          "example": 1
                        },
                        "addresses": {
                          "description": "Addresses that are eligible to sign the Subnet update transactions.",
                          "example": [
                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "locktime",
                        "threshold",
                        "addresses"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "txHash",
                "txType",
                "blockTimestamp",
                "blockNumber",
                "blockHash",
                "consumedUtxos",
                "emittedUtxos",
                "value",
                "amountBurned",
                "amountStaked"
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "transactions",
          "chainInfo"
        ]
      },
      "ListXChainTransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string",
                      "description": "Unique ID for this transaction.",
                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                    },
                    "chainFormat": {
                      "type": "string",
                      "description": "Represents chain format this transaction is included in.",
                      "enum": [
                        "non-linear",
                        "linear"
                      ],
                      "example": "non-linear"
                    },
                    "timestamp": {
                      "type": "number",
                      "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                      "example": 1600762738
                    },
                    "txType": {
                      "example": "BaseTx",
                      "type": "string",
                      "description": "Type of transaction.",
                      "enum": [
                        "BaseTx",
                        "CreateAssetTx",
                        "OperationTx",
                        "ImportTx",
                        "ExportTx",
                        "UNKNOWN"
                      ]
                    },
                    "memo": {
                      "type": "string",
                      "description": "Hex encoded memo bytes for this transaction.",
                      "example": "0x546865204176616c616e6368652050726f6a656374"
                    },
                    "consumedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    },
                    "emittedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    },
                    "amountUnlocked": {
                      "description": "Assets unlocked by inputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "amountCreated": {
                      "description": "Assets created by outputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "sourceChain": {
                      "type": "string",
                      "description": "Source chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "destinationChain": {
                      "type": "string",
                      "description": "Destination chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "assetCreated": {
                      "description": "AssetAmount details of the asset created in CreateAssetTx",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string",
                              "description": "Unique ID for an asset.",
                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of this asset.",
                              "example": "Avalanche"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Symbol for this asset (max 4 characters).",
                              "example": "AVAX"
                            },
                            "denomination": {
                              "type": "number",
                              "description": "Denomination of this asset to represent fungibility.",
                              "example": 9
                            },
                            "type": {
                              "example": "secp256k1",
                              "type": "string",
                              "description": "Type of asset like SECP256K1 or NFT.",
                              "enum": [
                                "secp256k1",
                                "nft"
                              ]
                            },
                            "createdAtTimestamp": {
                              "type": "number",
                              "description": "Timestamp in seconds this asset was created on.",
                              "example": 1675444720
                            },
                            "cap": {
                              "example": "fixed",
                              "type": "string",
                              "description": "Cap represents if an asset is a variable or fixed cap asset.",
                              "enum": [
                                "fixed",
                                "variable"
                              ]
                            }
                          },
                          "required": [
                            "assetId",
                            "name",
                            "symbol",
                            "denomination",
                            "type",
                            "createdAtTimestamp",
                            "cap"
                          ]
                        }
                      ]
                    },
                    "vertices": {
                      "description": "A transaction on X-Chain can be accepted over multiple vertices.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "description": "Vertex ID of the vertex this transaction belongs to.",
                            "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                          },
                          "height": {
                            "type": "number",
                            "description": "Vertex height of the vertex this transaction belongs to.",
                            "example": 1961
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Timestamp in seconds this vertex was accepted.",
                            "example": 1600762738
                          }
                        },
                        "required": [
                          "hash",
                          "height",
                          "timestamp"
                        ]
                      }
                    }
                  },
                  "required": [
                    "txHash",
                    "chainFormat",
                    "timestamp",
                    "txType",
                    "memo",
                    "consumedUtxos",
                    "emittedUtxos",
                    "amountUnlocked",
                    "amountCreated",
                    "vertices"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string",
                      "description": "Unique ID for this transaction.",
                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                    },
                    "chainFormat": {
                      "type": "string",
                      "description": "Represents chain format this transaction is included in.",
                      "enum": [
                        "non-linear",
                        "linear"
                      ],
                      "example": "non-linear"
                    },
                    "timestamp": {
                      "type": "number",
                      "description": "Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.",
                      "example": 1600762738
                    },
                    "txType": {
                      "example": "BaseTx",
                      "type": "string",
                      "description": "Type of transaction.",
                      "enum": [
                        "BaseTx",
                        "CreateAssetTx",
                        "OperationTx",
                        "ImportTx",
                        "ExportTx",
                        "UNKNOWN"
                      ]
                    },
                    "memo": {
                      "type": "string",
                      "description": "Hex encoded memo bytes for this transaction.",
                      "example": "0x546865204176616c616e6368652050726f6a656374"
                    },
                    "consumedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    },
                    "emittedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    },
                    "amountUnlocked": {
                      "description": "Assets unlocked by inputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "amountCreated": {
                      "description": "Assets created by outputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "sourceChain": {
                      "type": "string",
                      "description": "Source chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "destinationChain": {
                      "type": "string",
                      "description": "Destination chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "assetCreated": {
                      "description": "AssetAmount details of the asset created in CreateAssetTx",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "assetId": {
                              "type": "string",
                              "description": "Unique ID for an asset.",
                              "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of this asset.",
                              "example": "Avalanche"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Symbol for this asset (max 4 characters).",
                              "example": "AVAX"
                            },
                            "denomination": {
                              "type": "number",
                              "description": "Denomination of this asset to represent fungibility.",
                              "example": 9
                            },
                            "type": {
                              "example": "secp256k1",
                              "type": "string",
                              "description": "Type of asset like SECP256K1 or NFT.",
                              "enum": [
                                "secp256k1",
                                "nft"
                              ]
                            },
                            "createdAtTimestamp": {
                              "type": "number",
                              "description": "Timestamp in seconds this asset was created on.",
                              "example": 1675444720
                            },
                            "cap": {
                              "example": "fixed",
                              "type": "string",
                              "description": "Cap represents if an asset is a variable or fixed cap asset.",
                              "enum": [
                                "fixed",
                                "variable"
                              ]
                            }
                          },
                          "required": [
                            "assetId",
                            "name",
                            "symbol",
                            "denomination",
                            "type",
                            "createdAtTimestamp",
                            "cap"
                          ]
                        }
                      ]
                    },
                    "blockHeight": {
                      "type": "number",
                      "description": "Height of the block this transaction belongs to.",
                      "example": 1005
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "Hash of the block this transaction belongs to.",
                      "example": "82qPRREHmh8Cfta4PGD6GymY9ZLyvgYugqW6hj9FykpMVRz1S"
                    }
                  },
                  "required": [
                    "txHash",
                    "chainFormat",
                    "timestamp",
                    "txType",
                    "memo",
                    "consumedUtxos",
                    "emittedUtxos",
                    "amountUnlocked",
                    "amountCreated",
                    "blockHeight",
                    "blockHash"
                  ]
                }
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "transactions",
          "chainInfo"
        ]
      },
      "ListCChainAtomicTransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string",
                      "description": "Unique ID for this transaction.",
                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                    },
                    "blockHeight": {
                      "type": "number",
                      "description": "Height of the block this transaction belongs to.",
                      "example": 1005
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "Hash of the block this transaction belongs to.",
                      "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                    },
                    "timestamp": {
                      "type": "number",
                      "description": "Latest timestamp in seconds this transaction was accepted.",
                      "example": 1600762738
                    },
                    "memo": {
                      "type": "string",
                      "description": "Hex encoded memo bytes for this transaction.",
                      "example": "0x546865204176616c616e6368652050726f6a656374"
                    },
                    "amountUnlocked": {
                      "description": "Assets unlocked by inputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "amountCreated": {
                      "description": "Assets created by outputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "sourceChain": {
                      "type": "string",
                      "description": "Source chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "destinationChain": {
                      "type": "string",
                      "description": "Destination chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "txType": {
                      "type": "string",
                      "description": "Type of transaction.",
                      "enum": [
                        "ExportTx"
                      ],
                      "example": "ExportTx"
                    },
                    "evmInputs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fromAddress": {
                            "type": "string",
                            "description": "EVM address from which the asset is exported in ExportTx.",
                            "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                          },
                          "asset": {
                            "description": "AssetAmount details for the asset being transferred.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              }
                            ]
                          },
                          "credentials": {
                            "description": "Credentials that signed this transaction.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "fromAddress",
                          "asset",
                          "credentials"
                        ]
                      }
                    },
                    "emittedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    }
                  },
                  "required": [
                    "txHash",
                    "blockHeight",
                    "blockHash",
                    "timestamp",
                    "memo",
                    "amountUnlocked",
                    "amountCreated",
                    "sourceChain",
                    "destinationChain",
                    "txType",
                    "evmInputs",
                    "emittedUtxos"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string",
                      "description": "Unique ID for this transaction.",
                      "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                    },
                    "blockHeight": {
                      "type": "number",
                      "description": "Height of the block this transaction belongs to.",
                      "example": 1005
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "Hash of the block this transaction belongs to.",
                      "example": "0x57a5cb7704561d1d59bd563b6421021b7563960c05ba3ae0e36fc36917c742ee"
                    },
                    "timestamp": {
                      "type": "number",
                      "description": "Latest timestamp in seconds this transaction was accepted.",
                      "example": 1600762738
                    },
                    "memo": {
                      "type": "string",
                      "description": "Hex encoded memo bytes for this transaction.",
                      "example": "0x546865204176616c616e6368652050726f6a656374"
                    },
                    "amountUnlocked": {
                      "description": "Assets unlocked by inputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "amountCreated": {
                      "description": "Assets created by outputs of this transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assetId": {
                            "type": "string",
                            "description": "Unique ID for an asset.",
                            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of this asset.",
                            "example": "Avalanche"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol for this asset (max 4 characters).",
                            "example": "AVAX"
                          },
                          "denomination": {
                            "type": "number",
                            "description": "Denomination of this asset to represent fungibility.",
                            "example": 9
                          },
                          "type": {
                            "example": "secp256k1",
                            "type": "string",
                            "description": "Type of asset like SECP256K1 or NFT.",
                            "enum": [
                              "secp256k1",
                              "nft"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the asset.",
                            "example": "5001000"
                          }
                        },
                        "required": [
                          "assetId",
                          "name",
                          "symbol",
                          "denomination",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "sourceChain": {
                      "type": "string",
                      "description": "Source chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "destinationChain": {
                      "type": "string",
                      "description": "Destination chain for an atomic transaction.",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "txType": {
                      "type": "string",
                      "description": "Type of transaction.",
                      "enum": [
                        "ImportTx"
                      ],
                      "example": "ImportTx"
                    },
                    "evmOutputs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "toAddress": {
                            "type": "string",
                            "description": "EVM address to which the asset is imported in ImportTx",
                            "example": "0xD0f2898e49d941D6d479B381d3C8F0bd8d983b4c"
                          },
                          "asset": {
                            "description": "AssetAmount details for the asset being transferred.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "assetId": {
                                    "type": "string",
                                    "description": "Unique ID for an asset.",
                                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of this asset.",
                                    "example": "Avalanche"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol for this asset (max 4 characters).",
                                    "example": "AVAX"
                                  },
                                  "denomination": {
                                    "type": "number",
                                    "description": "Denomination of this asset to represent fungibility.",
                                    "example": 9
                                  },
                                  "type": {
                                    "example": "secp256k1",
                                    "type": "string",
                                    "description": "Type of asset like SECP256K1 or NFT.",
                                    "enum": [
                                      "secp256k1",
                                      "nft"
                                    ]
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of the asset.",
                                    "example": "5001000"
                                  }
                                },
                                "required": [
                                  "assetId",
                                  "name",
                                  "symbol",
                                  "denomination",
                                  "type",
                                  "amount"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "toAddress",
                          "asset"
                        ]
                      }
                    },
                    "consumedUtxos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses that are eligible to sign the consumption of this output.",
                            "example": [
                              "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "assetId": {
                                "type": "string",
                                "description": "Unique ID for an asset.",
                                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of this asset.",
                                "example": "Avalanche"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol for this asset (max 4 characters).",
                                "example": "AVAX"
                              },
                              "denomination": {
                                "type": "number",
                                "description": "Denomination of this asset to represent fungibility.",
                                "example": 9
                              },
                              "type": {
                                "example": "secp256k1",
                                "type": "string",
                                "description": "Type of asset like SECP256K1 or NFT.",
                                "enum": [
                                  "secp256k1",
                                  "nft"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount of the asset.",
                                "example": "5001000"
                              }
                            },
                            "required": [
                              "assetId",
                              "name",
                              "symbol",
                              "denomination",
                              "type",
                              "amount"
                            ]
                          },
                          "consumedOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is consumed on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "consumingTxHash": {
                            "type": "string",
                            "description": "Transaction ID that consumed this output.",
                            "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                          },
                          "createdOnChainId": {
                            "type": "string",
                            "description": "Blockchain ID on which this output is created on.",
                            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                          },
                          "utxoId": {
                            "type": "string",
                            "description": "UTXO ID for this output.",
                            "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                          },
                          "consumingTxTimestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this output was consumed.",
                            "example": 1599696000
                          },
                          "creationTxHash": {
                            "type": "string",
                            "description": "Transaction ID that created this output.",
                            "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                          },
                          "credentials": {
                            "description": "Credentials that signed the transaction to consume this utxo",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "signature": {
                                  "type": "string",
                                  "description": "Signature provided to consume the output.",
                                  "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                                },
                                "publicKey": {
                                  "type": "string",
                                  "description": "Public key associated with the signature.",
                                  "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                                }
                              }
                            }
                          },
                          "groupId": {
                            "type": "number",
                            "description": "Index representing the minting set for the NFT mint output."
                          },
                          "locktime": {
                            "type": "number",
                            "description": "Locktime in seconds after which this output can be consumed.",
                            "example": 0
                          },
                          "outputIndex": {
                            "type": "string",
                            "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                            "example": "38"
                          },
                          "payload": {
                            "type": "string",
                            "description": "Hex encoded data for NFT assets."
                          },
                          "threshold": {
                            "type": "number",
                            "description": "Minimum number of signatures required to consume this output.",
                            "example": 1
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp in seconds at which this outptut was created.",
                            "example": 1599696000
                          },
                          "utxoType": {
                            "type": "string",
                            "description": "Type of output.",
                            "example": "mint"
                          }
                        },
                        "required": [
                          "addresses",
                          "asset",
                          "consumedOnChainId",
                          "createdOnChainId",
                          "utxoId",
                          "creationTxHash",
                          "locktime",
                          "outputIndex",
                          "threshold",
                          "timestamp",
                          "utxoType"
                        ]
                      }
                    }
                  },
                  "required": [
                    "txHash",
                    "blockHeight",
                    "blockHash",
                    "timestamp",
                    "memo",
                    "amountUnlocked",
                    "amountCreated",
                    "sourceChain",
                    "destinationChain",
                    "txType",
                    "evmOutputs",
                    "consumedUtxos"
                  ]
                }
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "transactions",
          "chainInfo"
        ]
      },
      "PrimaryNetworkTxType": {
        "type": "array",
        "enum": [
          "AddValidatorTx",
          "AddSubnetValidatorTx",
          "AddDelegatorTx",
          "CreateChainTx",
          "CreateSubnetTx",
          "ImportTx",
          "ExportTx",
          "AdvanceTimeTx",
          "RewardValidatorTx",
          "RemoveSubnetValidatorTx",
          "TransformSubnetTx",
          "AddPermissionlessValidatorTx",
          "AddPermissionlessDelegatorTx",
          "BaseTx",
          "TransferSubnetOwnershipTx",
          "UNKNOWN",
          "CreateAssetTx",
          "OperationTx"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "PChainId": {
        "type": "string",
        "enum": [
          "11111111111111111111111111111111LpoYY",
          "p-chain"
        ]
      },
      "PendingReward": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "An array of P-Chain wallet addresses.",
            "example": [
              "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "txHash": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "rewardType": {
            "type": "string",
            "enum": [
              "VALIDATOR",
              "DELEGATOR",
              "VALIDATOR_FEE"
            ]
          },
          "progress": {
            "type": "number"
          },
          "estimatedReward": {
            "description": "An object containing P-chain Asset basic info and the amount of that Asset ID.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "assetId": {
                    "type": "string",
                    "description": "Unique ID for an asset.",
                    "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this asset.",
                    "example": "Avalanche"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Symbol for this asset (max 4 characters).",
                    "example": "AVAX"
                  },
                  "denomination": {
                    "type": "number",
                    "description": "Denomination of this asset to represent fungibility.",
                    "example": 9
                  },
                  "type": {
                    "example": "secp256k1",
                    "type": "string",
                    "description": "Type of asset like SECP256K1 or NFT.",
                    "enum": [
                      "secp256k1",
                      "nft"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the asset.",
                    "example": "5001000"
                  }
                },
                "required": [
                  "assetId",
                  "name",
                  "symbol",
                  "denomination",
                  "type",
                  "amount"
                ]
              }
            ]
          }
        },
        "required": [
          "addresses",
          "txHash",
          "amountStaked",
          "nodeId",
          "startTimestamp",
          "endTimestamp",
          "rewardType",
          "progress",
          "estimatedReward"
        ]
      },
      "ListPendingRewardsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "pendingRewards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "An array of P-Chain wallet addresses.",
                  "example": [
                    "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "txHash": {
                  "type": "string"
                },
                "amountStaked": {
                  "type": "string"
                },
                "nodeId": {
                  "type": "string"
                },
                "startTimestamp": {
                  "type": "number"
                },
                "endTimestamp": {
                  "type": "number"
                },
                "rewardType": {
                  "type": "string",
                  "enum": [
                    "VALIDATOR",
                    "DELEGATOR",
                    "VALIDATOR_FEE"
                  ]
                },
                "progress": {
                  "type": "number"
                },
                "estimatedReward": {
                  "description": "An object containing P-chain Asset basic info and the amount of that Asset ID.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string",
                          "description": "Unique ID for an asset.",
                          "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of this asset.",
                          "example": "Avalanche"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "Symbol for this asset (max 4 characters).",
                          "example": "AVAX"
                        },
                        "denomination": {
                          "type": "number",
                          "description": "Denomination of this asset to represent fungibility.",
                          "example": 9
                        },
                        "type": {
                          "example": "secp256k1",
                          "type": "string",
                          "description": "Type of asset like SECP256K1 or NFT.",
                          "enum": [
                            "secp256k1",
                            "nft"
                          ]
                        },
                        "amount": {
                          "type": "string",
                          "description": "Amount of the asset.",
                          "example": "5001000"
                        }
                      },
                      "required": [
                        "assetId",
                        "name",
                        "symbol",
                        "denomination",
                        "type",
                        "amount"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "addresses",
                "txHash",
                "amountStaked",
                "nodeId",
                "startTimestamp",
                "endTimestamp",
                "rewardType",
                "progress",
                "estimatedReward"
              ]
            }
          }
        },
        "required": [
          "pendingRewards"
        ]
      },
      "CurrencyCode": {
        "type": "string",
        "description": "ISO 4217 currency code.",
        "enum": [
          "usd",
          "eur",
          "aud",
          "cad",
          "chf",
          "clp",
          "cny",
          "czk",
          "dkk",
          "gbp",
          "hkd",
          "huf",
          "jpy",
          "nzd"
        ]
      },
      "Money": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "ISO 4217 currency code.",
            "enum": [
              "usd",
              "eur",
              "aud",
              "cad",
              "chf",
              "clp",
              "cny",
              "czk",
              "dkk",
              "gbp",
              "hkd",
              "huf",
              "jpy",
              "nzd"
            ],
            "example": "usd"
          },
          "value": {
            "type": "number",
            "description": "Monetary value in base 10 decimals.",
            "example": "42.42"
          }
        },
        "required": [
          "currencyCode",
          "value"
        ]
      },
      "AssetWithPriceInfo": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          },
          "historicalPrice": {
            "description": "The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount"
        ]
      },
      "HistoricalReward": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "An array of P-Chain wallet addresses.",
            "example": [
              "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "txHash": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "rewardType": {
            "type": "string",
            "enum": [
              "VALIDATOR",
              "DELEGATOR",
              "VALIDATOR_FEE"
            ]
          },
          "utxoId": {
            "type": "string"
          },
          "outputIndex": {
            "type": "number"
          },
          "reward": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string",
                "description": "Unique ID for an asset.",
                "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
              },
              "name": {
                "type": "string",
                "description": "Name of this asset.",
                "example": "Avalanche"
              },
              "symbol": {
                "type": "string",
                "description": "Symbol for this asset (max 4 characters).",
                "example": "AVAX"
              },
              "denomination": {
                "type": "number",
                "description": "Denomination of this asset to represent fungibility.",
                "example": 9
              },
              "type": {
                "example": "secp256k1",
                "type": "string",
                "description": "Type of asset like SECP256K1 or NFT.",
                "enum": [
                  "secp256k1",
                  "nft"
                ]
              },
              "amount": {
                "type": "string",
                "description": "Amount of the asset.",
                "example": "5001000"
              },
              "historicalPrice": {
                "description": "The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              }
            },
            "required": [
              "assetId",
              "name",
              "symbol",
              "denomination",
              "type",
              "amount"
            ]
          },
          "rewardTxHash": {
            "type": "string"
          }
        },
        "required": [
          "addresses",
          "txHash",
          "amountStaked",
          "nodeId",
          "startTimestamp",
          "endTimestamp",
          "rewardType",
          "utxoId",
          "outputIndex",
          "reward",
          "rewardTxHash"
        ]
      },
      "ListHistoricalRewardsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "historicalRewards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "An array of P-Chain wallet addresses.",
                  "example": [
                    "avax1h2ccj9f5ay5acl6tyn9mwmw32p8wref8vl8ctg"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "txHash": {
                  "type": "string"
                },
                "amountStaked": {
                  "type": "string"
                },
                "nodeId": {
                  "type": "string"
                },
                "startTimestamp": {
                  "type": "number"
                },
                "endTimestamp": {
                  "type": "number"
                },
                "rewardType": {
                  "type": "string",
                  "enum": [
                    "VALIDATOR",
                    "DELEGATOR",
                    "VALIDATOR_FEE"
                  ]
                },
                "utxoId": {
                  "type": "string"
                },
                "outputIndex": {
                  "type": "number"
                },
                "reward": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "historicalPrice": {
                      "description": "The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "type": "string",
                              "description": "ISO 4217 currency code.",
                              "enum": [
                                "usd",
                                "eur",
                                "aud",
                                "cad",
                                "chf",
                                "clp",
                                "cny",
                                "czk",
                                "dkk",
                                "gbp",
                                "hkd",
                                "huf",
                                "jpy",
                                "nzd"
                              ],
                              "example": "usd"
                            },
                            "value": {
                              "type": "number",
                              "description": "Monetary value in base 10 decimals.",
                              "example": "42.42"
                            }
                          },
                          "required": [
                            "currencyCode",
                            "value"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "rewardTxHash": {
                  "type": "string"
                }
              },
              "required": [
                "addresses",
                "txHash",
                "amountStaked",
                "nodeId",
                "startTimestamp",
                "endTimestamp",
                "rewardType",
                "utxoId",
                "outputIndex",
                "reward",
                "rewardTxHash"
              ]
            }
          }
        },
        "required": [
          "historicalRewards"
        ]
      },
      "ListPChainUtxosResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "utxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "amount": {
                  "type": "string",
                  "deprecated": true
                },
                "assetId": {
                  "type": "string",
                  "deprecated": true
                },
                "blockNumber": {
                  "type": "string"
                },
                "blockTimestamp": {
                  "type": "number"
                },
                "consumingBlockNumber": {
                  "type": "string"
                },
                "consumingBlockTimestamp": {
                  "type": "number"
                },
                "platformLocktime": {
                  "type": "number"
                },
                "outputIndex": {
                  "type": "number"
                },
                "rewardType": {
                  "type": "string",
                  "enum": [
                    "VALIDATOR",
                    "DELEGATOR",
                    "VALIDATOR_FEE"
                  ]
                },
                "stakeableLocktime": {
                  "type": "number"
                },
                "staked": {
                  "type": "boolean"
                },
                "threshold": {
                  "type": "number"
                },
                "txHash": {
                  "type": "string"
                },
                "utxoEndTimestamp": {
                  "type": "number"
                },
                "utxoStartTimestamp": {
                  "type": "number"
                },
                "utxoType": {
                  "type": "string",
                  "enum": [
                    "STAKE",
                    "TRANSFER"
                  ]
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "amount",
                "assetId",
                "blockNumber",
                "blockTimestamp",
                "outputIndex",
                "txHash",
                "utxoType"
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "utxos",
          "chainInfo"
        ]
      },
      "ListUtxosResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "utxos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addresses": {
                  "description": "Addresses that are eligible to sign the consumption of this output.",
                  "example": [
                    "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount"
                  ]
                },
                "consumedOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is consumed on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "consumingTxHash": {
                  "type": "string",
                  "description": "Transaction ID that consumed this output.",
                  "example": "3j9JpF1aGuQtLLbo3YkvvKkWrCZViXZjdeJQWUSEY5hcqUn2c"
                },
                "createdOnChainId": {
                  "type": "string",
                  "description": "Blockchain ID on which this output is created on.",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "utxoId": {
                  "type": "string",
                  "description": "UTXO ID for this output.",
                  "example": "68vLva9kfKUsX88ZPM8jdbf8qHUZRoZSFH6NdpAVTspkfrXDC"
                },
                "consumingTxTimestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this output was consumed.",
                  "example": 1599696000
                },
                "creationTxHash": {
                  "type": "string",
                  "description": "Transaction ID that created this output.",
                  "example": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"
                },
                "credentials": {
                  "description": "Credentials that signed the transaction to consume this utxo",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "description": "Signature provided to consume the output.",
                        "example": "bWWoZUu0Z3STjuk/+2az7M4vP0oqc9NtiA7kOdqINCIE/2+5va5R1KNCWwEX5jE1xVHLvAxU2LHTN5gK8m84HwA"
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key associated with the signature.",
                        "example": "AdMQOtubgBFFJu++0faHPIIA6KmdZ2ERErMRGzyy6juI"
                      }
                    }
                  }
                },
                "groupId": {
                  "type": "number",
                  "description": "Index representing the minting set for the NFT mint output."
                },
                "locktime": {
                  "type": "number",
                  "description": "Locktime in seconds after which this output can be consumed.",
                  "example": 0
                },
                "outputIndex": {
                  "type": "string",
                  "description": "Postion of this output in a list of lexiographically sorted outputs of a transaction.",
                  "example": "38"
                },
                "payload": {
                  "type": "string",
                  "description": "Hex encoded data for NFT assets."
                },
                "threshold": {
                  "type": "number",
                  "description": "Minimum number of signatures required to consume this output.",
                  "example": 1
                },
                "timestamp": {
                  "type": "number",
                  "description": "Unix timestamp in seconds at which this outptut was created.",
                  "example": 1599696000
                },
                "utxoType": {
                  "type": "string",
                  "description": "Type of output.",
                  "example": "mint"
                }
              },
              "required": [
                "addresses",
                "asset",
                "consumedOnChainId",
                "createdOnChainId",
                "utxoId",
                "creationTxHash",
                "locktime",
                "outputIndex",
                "threshold",
                "timestamp",
                "utxoType"
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "utxos",
          "chainInfo"
        ]
      },
      "AggregatedAssetAmount": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          },
          "utxoCount": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount",
          "utxoCount"
        ]
      },
      "PChainSharedAsset": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          },
          "utxoCount": {
            "type": "number",
            "example": 1
          },
          "sharedWithChainId": {
            "type": "string",
            "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount",
          "utxoCount",
          "sharedWithChainId",
          "status"
        ]
      },
      "PChainBalance": {
        "type": "object",
        "properties": {
          "unlockedUnstaked": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is consumable by any transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "unlockedStaked": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that is consumable by any transaction when the staking period ends.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "lockedPlatform": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and not consumable by any transaction at the current time.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "lockedStakeable": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and only consumeable for staking transactions.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "lockedStaked": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that will be locked when the staking period ends.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "pendingStaked": {
            "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax whose staking period has not yet started.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "atomicMemoryUnlocked": {
            "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of unlocked Avax in the atomic memory between P-Chain and other chain.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId",
                "status"
              ]
            }
          },
          "atomicMemoryLocked": {
            "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of locked Avax in the atomic memory between P-Chain and other chain.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string",
                  "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId",
                "status"
              ]
            }
          }
        },
        "required": [
          "unlockedUnstaked",
          "unlockedStaked",
          "lockedPlatform",
          "lockedStakeable",
          "lockedStaked",
          "pendingStaked",
          "atomicMemoryUnlocked",
          "atomicMemoryLocked"
        ]
      },
      "ListPChainBalancesResponse": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "object",
            "properties": {
              "unlockedUnstaked": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is consumable by any transaction.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "unlockedStaked": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that is consumable by any transaction when the staking period ends.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "lockedPlatform": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and not consumable by any transaction at the current time.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "lockedStakeable": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of unstaked Avax that is locked at the platform level and only consumeable for staking transactions.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "lockedStaked": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax that will be locked when the staking period ends.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "pendingStaked": {
                "description": "A list of objects containing P-chain Asset basic info, amount,  and utxo count of that Asset ID.  Denotes the amount of staked Avax whose staking period has not yet started.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "atomicMemoryUnlocked": {
                "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of unlocked Avax in the atomic memory between P-Chain and other chain.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId",
                    "status"
                  ]
                }
              },
              "atomicMemoryLocked": {
                "description": "A list of objects containing P-chain Asset basic info, amount and utxo count of that Asset ID. Denotes the amount of locked Avax in the atomic memory between P-Chain and other chain.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string",
                      "example": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId",
                    "status"
                  ]
                }
              }
            },
            "required": [
              "unlockedUnstaked",
              "unlockedStaked",
              "lockedPlatform",
              "lockedStakeable",
              "lockedStaked",
              "pendingStaked",
              "atomicMemoryUnlocked",
              "atomicMemoryLocked"
            ]
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "balances",
          "chainInfo"
        ]
      },
      "XChainSharedAssetBalance": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          },
          "utxoCount": {
            "type": "number",
            "example": 1
          },
          "sharedWithChainId": {
            "type": "string"
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount",
          "utxoCount",
          "sharedWithChainId"
        ]
      },
      "XChainBalances": {
        "type": "object",
        "properties": {
          "locked": {
            "description": "A list of objects containing X-chain Asset balance information.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "unlocked": {
            "description": "A list of objects containing X-chain Asset balance information.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount"
              ]
            }
          },
          "atomicMemoryUnlocked": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId"
              ]
            }
          },
          "atomicMemoryLocked": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId"
              ]
            }
          }
        },
        "required": [
          "locked",
          "unlocked",
          "atomicMemoryUnlocked",
          "atomicMemoryLocked"
        ]
      },
      "ListXChainBalancesResponse": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "object",
            "properties": {
              "locked": {
                "description": "A list of objects containing X-chain Asset balance information.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "unlocked": {
                "description": "A list of objects containing X-chain Asset balance information.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount"
                  ]
                }
              },
              "atomicMemoryUnlocked": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId"
                  ]
                }
              },
              "atomicMemoryLocked": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId"
                  ]
                }
              }
            },
            "required": [
              "locked",
              "unlocked",
              "atomicMemoryUnlocked",
              "atomicMemoryLocked"
            ]
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "balances",
          "chainInfo"
        ]
      },
      "CChainSharedAssetBalance": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Unique ID for an asset.",
            "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
          },
          "name": {
            "type": "string",
            "description": "Name of this asset.",
            "example": "Avalanche"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol for this asset (max 4 characters).",
            "example": "AVAX"
          },
          "denomination": {
            "type": "number",
            "description": "Denomination of this asset to represent fungibility.",
            "example": 9
          },
          "type": {
            "example": "secp256k1",
            "type": "string",
            "description": "Type of asset like SECP256K1 or NFT.",
            "enum": [
              "secp256k1",
              "nft"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Amount of the asset.",
            "example": "5001000"
          },
          "utxoCount": {
            "type": "number",
            "example": 1
          },
          "sharedWithChainId": {
            "type": "string"
          }
        },
        "required": [
          "assetId",
          "name",
          "symbol",
          "denomination",
          "type",
          "amount",
          "utxoCount",
          "sharedWithChainId"
        ]
      },
      "CChainAtomicBalances": {
        "type": "object",
        "properties": {
          "atomicMemoryUnlocked": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId"
              ]
            }
          },
          "atomicMemoryLocked": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "Unique ID for an asset.",
                  "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this asset.",
                  "example": "Avalanche"
                },
                "symbol": {
                  "type": "string",
                  "description": "Symbol for this asset (max 4 characters).",
                  "example": "AVAX"
                },
                "denomination": {
                  "type": "number",
                  "description": "Denomination of this asset to represent fungibility.",
                  "example": 9
                },
                "type": {
                  "example": "secp256k1",
                  "type": "string",
                  "description": "Type of asset like SECP256K1 or NFT.",
                  "enum": [
                    "secp256k1",
                    "nft"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the asset.",
                  "example": "5001000"
                },
                "utxoCount": {
                  "type": "number",
                  "example": 1
                },
                "sharedWithChainId": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "name",
                "symbol",
                "denomination",
                "type",
                "amount",
                "utxoCount",
                "sharedWithChainId"
              ]
            }
          }
        },
        "required": [
          "atomicMemoryUnlocked",
          "atomicMemoryLocked"
        ]
      },
      "ListCChainAtomicBalancesResponse": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "object",
            "properties": {
              "atomicMemoryUnlocked": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId"
                  ]
                }
              },
              "atomicMemoryLocked": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string",
                      "description": "Unique ID for an asset.",
                      "example": "th5aLdWLi32yS9ED6uLGoMMubqHjzMsXhKWwzP6yZTYQKYzof"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this asset.",
                      "example": "Avalanche"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Symbol for this asset (max 4 characters).",
                      "example": "AVAX"
                    },
                    "denomination": {
                      "type": "number",
                      "description": "Denomination of this asset to represent fungibility.",
                      "example": 9
                    },
                    "type": {
                      "example": "secp256k1",
                      "type": "string",
                      "description": "Type of asset like SECP256K1 or NFT.",
                      "enum": [
                        "secp256k1",
                        "nft"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount of the asset.",
                      "example": "5001000"
                    },
                    "utxoCount": {
                      "type": "number",
                      "example": 1
                    },
                    "sharedWithChainId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetId",
                    "name",
                    "symbol",
                    "denomination",
                    "type",
                    "amount",
                    "utxoCount",
                    "sharedWithChainId"
                  ]
                }
              }
            },
            "required": [
              "atomicMemoryUnlocked",
              "atomicMemoryLocked"
            ]
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "balances",
          "chainInfo"
        ]
      },
      "ProposerDetails": {
        "type": "object",
        "properties": {
          "proposerId": {
            "type": "string"
          },
          "proposerParentId": {
            "type": "string"
          },
          "proposerNodeId": {
            "type": "string"
          },
          "proposerPChainHeight": {
            "type": "number"
          },
          "proposerTimestamp": {
            "type": "number"
          }
        }
      },
      "GetPrimaryNetworkBlockResponse": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "parentHash": {
            "type": "string"
          },
          "blockTimestamp": {
            "type": "number"
          },
          "blockType": {
            "type": "string"
          },
          "txCount": {
            "type": "number"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "blockSizeBytes": {
            "type": "number"
          },
          "currentSupply": {
            "type": "string"
          },
          "proposerDetails": {
            "type": "object",
            "properties": {
              "proposerId": {
                "type": "string"
              },
              "proposerParentId": {
                "type": "string"
              },
              "proposerNodeId": {
                "type": "string"
              },
              "proposerPChainHeight": {
                "type": "number"
              },
              "proposerTimestamp": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "blockNumber",
          "blockHash",
          "parentHash",
          "blockTimestamp",
          "blockType",
          "txCount",
          "transactions",
          "blockSizeBytes"
        ]
      },
      "PrimaryNetworkBlock": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "parentHash": {
            "type": "string"
          },
          "blockTimestamp": {
            "type": "number"
          },
          "blockType": {
            "type": "string"
          },
          "txCount": {
            "type": "number"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "blockSizeBytes": {
            "type": "number"
          },
          "currentSupply": {
            "type": "string"
          },
          "proposerDetails": {
            "type": "object",
            "properties": {
              "proposerId": {
                "type": "string"
              },
              "proposerParentId": {
                "type": "string"
              },
              "proposerNodeId": {
                "type": "string"
              },
              "proposerPChainHeight": {
                "type": "number"
              },
              "proposerTimestamp": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "blockNumber",
          "blockHash",
          "parentHash",
          "blockTimestamp",
          "blockType",
          "txCount",
          "transactions",
          "blockSizeBytes"
        ]
      },
      "ListPrimaryNetworkBlocksResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "blocks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string"
                },
                "blockHash": {
                  "type": "string"
                },
                "parentHash": {
                  "type": "string"
                },
                "blockTimestamp": {
                  "type": "number"
                },
                "blockType": {
                  "type": "string"
                },
                "txCount": {
                  "type": "number"
                },
                "transactions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "blockSizeBytes": {
                  "type": "number"
                },
                "currentSupply": {
                  "type": "string"
                },
                "proposerDetails": {
                  "type": "object",
                  "properties": {
                    "proposerId": {
                      "type": "string"
                    },
                    "proposerParentId": {
                      "type": "string"
                    },
                    "proposerNodeId": {
                      "type": "string"
                    },
                    "proposerPChainHeight": {
                      "type": "number"
                    },
                    "proposerTimestamp": {
                      "type": "number"
                    }
                  }
                }
              },
              "required": [
                "blockNumber",
                "blockHash",
                "parentHash",
                "blockTimestamp",
                "blockType",
                "txCount",
                "transactions",
                "blockSizeBytes"
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "blocks",
          "chainInfo"
        ]
      },
      "XChainId": {
        "type": "string",
        "enum": [
          "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
          "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
          "x-chain"
        ]
      },
      "XChainVertex": {
        "type": "object",
        "properties": {
          "vertexHash": {
            "type": "string"
          },
          "parentHashes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vertexHeight": {
            "type": "number"
          },
          "vertexIndex": {
            "type": "number"
          },
          "vertexTimestamp": {
            "type": "number"
          },
          "txCount": {
            "type": "number"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vertexSizeBytes": {
            "type": "number"
          }
        },
        "required": [
          "vertexHash",
          "parentHashes",
          "vertexHeight",
          "vertexIndex",
          "vertexTimestamp",
          "txCount",
          "transactions",
          "vertexSizeBytes"
        ]
      },
      "ListXChainVerticesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "vertices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "vertexHash": {
                  "type": "string"
                },
                "parentHashes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vertexHeight": {
                  "type": "number"
                },
                "vertexIndex": {
                  "type": "number"
                },
                "vertexTimestamp": {
                  "type": "number"
                },
                "txCount": {
                  "type": "number"
                },
                "transactions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vertexSizeBytes": {
                  "type": "number"
                }
              },
              "required": [
                "vertexHash",
                "parentHashes",
                "vertexHeight",
                "vertexIndex",
                "vertexTimestamp",
                "txCount",
                "transactions",
                "vertexSizeBytes"
              ]
            }
          },
          "chainInfo": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string",
                "enum": [
                  "p-chain",
                  "x-chain",
                  "c-chain"
                ]
              },
              "network": {
                "type": "string",
                "enum": [
                  "mainnet",
                  "fuji"
                ]
              }
            },
            "required": [
              "chainName",
              "network"
            ]
          }
        },
        "required": [
          "vertices",
          "chainInfo"
        ]
      },
      "BlockchainIds": {
        "type": "string",
        "enum": [
          "11111111111111111111111111111111LpoYY",
          "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
          "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
          "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
          "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp"
        ]
      },
      "ChainAddressChainIdMap": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "blockchainIds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "11111111111111111111111111111111LpoYY",
                "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp"
              ]
            }
          }
        },
        "required": [
          "address",
          "blockchainIds"
        ]
      },
      "ChainAddressChainIdMapListResponse": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "blockchainIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "11111111111111111111111111111111LpoYY",
                      "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",
                      "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm",
                      "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",
                      "yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp"
                    ]
                  }
                }
              },
              "required": [
                "address",
                "blockchainIds"
              ]
            }
          }
        },
        "required": [
          "addresses"
        ]
      },
      "StakingDistribution": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "validatorCount": {
            "type": "number"
          }
        },
        "required": [
          "version",
          "amountStaked",
          "validatorCount"
        ]
      },
      "ValidatorsDetails": {
        "type": "object",
        "properties": {
          "validatorCount": {
            "type": "number"
          },
          "totalAmountStaked": {
            "type": "string"
          },
          "estimatedAnnualStakingReward": {
            "type": "string"
          },
          "stakingDistributionByVersion": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "amountStaked": {
                  "type": "string"
                },
                "validatorCount": {
                  "type": "number"
                }
              },
              "required": [
                "version",
                "amountStaked",
                "validatorCount"
              ]
            }
          },
          "stakingRatio": {
            "type": "string"
          }
        },
        "required": [
          "validatorCount",
          "totalAmountStaked",
          "estimatedAnnualStakingReward",
          "stakingDistributionByVersion",
          "stakingRatio"
        ]
      },
      "DelegatorsDetails": {
        "type": "object",
        "properties": {
          "delegatorCount": {
            "type": "number"
          },
          "totalAmountStaked": {
            "type": "string"
          }
        },
        "required": [
          "delegatorCount",
          "totalAmountStaked"
        ]
      },
      "GetNetworkDetailsResponse": {
        "type": "object",
        "properties": {
          "validatorDetails": {
            "type": "object",
            "properties": {
              "validatorCount": {
                "type": "number"
              },
              "totalAmountStaked": {
                "type": "string"
              },
              "estimatedAnnualStakingReward": {
                "type": "string"
              },
              "stakingDistributionByVersion": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "amountStaked": {
                      "type": "string"
                    },
                    "validatorCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "version",
                    "amountStaked",
                    "validatorCount"
                  ]
                }
              },
              "stakingRatio": {
                "type": "string"
              }
            },
            "required": [
              "validatorCount",
              "totalAmountStaked",
              "estimatedAnnualStakingReward",
              "stakingDistributionByVersion",
              "stakingRatio"
            ]
          },
          "delegatorDetails": {
            "type": "object",
            "properties": {
              "delegatorCount": {
                "type": "number"
              },
              "totalAmountStaked": {
                "type": "string"
              }
            },
            "required": [
              "delegatorCount",
              "totalAmountStaked"
            ]
          }
        },
        "required": [
          "validatorDetails",
          "delegatorDetails"
        ]
      },
      "Blockchain": {
        "type": "object",
        "properties": {
          "createBlockTimestamp": {
            "type": "number"
          },
          "createBlockNumber": {
            "type": "string"
          },
          "blockchainId": {
            "type": "string"
          },
          "vmId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "blockchainName": {
            "type": "string"
          }
        },
        "required": [
          "createBlockTimestamp",
          "createBlockNumber",
          "blockchainId",
          "vmId",
          "subnetId",
          "blockchainName"
        ]
      },
      "ListBlockchainsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "blockchains": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createBlockTimestamp": {
                  "type": "number"
                },
                "createBlockNumber": {
                  "type": "string"
                },
                "blockchainId": {
                  "type": "string"
                },
                "vmId": {
                  "type": "string"
                },
                "subnetId": {
                  "type": "string"
                },
                "blockchainName": {
                  "type": "string"
                }
              },
              "required": [
                "createBlockTimestamp",
                "createBlockNumber",
                "blockchainId",
                "vmId",
                "subnetId",
                "blockchainName"
              ]
            }
          }
        },
        "required": [
          "blockchains"
        ]
      },
      "BlockchainInfo": {
        "type": "object",
        "properties": {
          "blockchainId": {
            "type": "string"
          }
        },
        "required": [
          "blockchainId"
        ]
      },
      "Subnet": {
        "type": "object",
        "properties": {
          "createBlockTimestamp": {
            "type": "number"
          },
          "createBlockIndex": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "ownerAddresses": {
            "deprecated": true,
            "description": "This field is deprecated. Use subnetOwnershipInfo instead.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "threshold": {
            "type": "number",
            "deprecated": true,
            "description": "This field is deprecated. Use subnetOwnershipInfo instead."
          },
          "locktime": {
            "type": "number",
            "deprecated": true,
            "description": "This field is deprecated. Use subnetOwnershipInfo instead."
          },
          "subnetOwnershipInfo": {
            "description": "Latest subnet owner details for this Subnet.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "locktime": {
                    "type": "number",
                    "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                    "example": 0
                  },
                  "threshold": {
                    "type": "number",
                    "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                    "example": 1
                  },
                  "addresses": {
                    "description": "Addresses that are eligible to sign the Subnet update transactions.",
                    "example": [
                      "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "locktime",
                  "threshold",
                  "addresses"
                ]
              }
            ]
          },
          "blockchains": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockchainId": {
                  "type": "string"
                }
              },
              "required": [
                "blockchainId"
              ]
            }
          }
        },
        "required": [
          "createBlockTimestamp",
          "createBlockIndex",
          "subnetId",
          "ownerAddresses",
          "threshold",
          "locktime",
          "subnetOwnershipInfo",
          "blockchains"
        ]
      },
      "ListSubnetsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "subnets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createBlockTimestamp": {
                  "type": "number"
                },
                "createBlockIndex": {
                  "type": "string"
                },
                "subnetId": {
                  "type": "string"
                },
                "ownerAddresses": {
                  "deprecated": true,
                  "description": "This field is deprecated. Use subnetOwnershipInfo instead.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "threshold": {
                  "type": "number",
                  "deprecated": true,
                  "description": "This field is deprecated. Use subnetOwnershipInfo instead."
                },
                "locktime": {
                  "type": "number",
                  "deprecated": true,
                  "description": "This field is deprecated. Use subnetOwnershipInfo instead."
                },
                "subnetOwnershipInfo": {
                  "description": "Latest subnet owner details for this Subnet.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "locktime": {
                          "type": "number",
                          "description": "Locktime in seconds after which Subnet owners can control this Subnet.",
                          "example": 0
                        },
                        "threshold": {
                          "type": "number",
                          "description": "Minimum number of signatures required to sign the Subnet update transactions.",
                          "example": 1
                        },
                        "addresses": {
                          "description": "Addresses that are eligible to sign the Subnet update transactions.",
                          "example": [
                            "avax1qm2a25eytsrj235hxg6jc0mwk99tss64eqevsw"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "locktime",
                        "threshold",
                        "addresses"
                      ]
                    }
                  ]
                },
                "blockchains": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "blockchainId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "blockchainId"
                    ]
                  }
                }
              },
              "required": [
                "createBlockTimestamp",
                "createBlockIndex",
                "subnetId",
                "ownerAddresses",
                "threshold",
                "locktime",
                "subnetOwnershipInfo",
                "blockchains"
              ]
            }
          }
        },
        "required": [
          "subnets"
        ]
      },
      "SortByOption": {
        "type": "string",
        "enum": [
          "blockIndex",
          "delegationCapacity",
          "timeRemaining",
          "delegationFee",
          "uptimePerformance"
        ]
      },
      "ValidationStatusType": {
        "type": "string",
        "enum": [
          "completed",
          "active",
          "pending",
          "removed"
        ]
      },
      "Rewards": {
        "type": "object",
        "properties": {
          "validationRewardAmount": {
            "type": "string"
          },
          "delegationRewardAmount": {
            "type": "string"
          },
          "rewardAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rewardTxHash": {
            "type": "string"
          }
        },
        "required": [
          "validationRewardAmount",
          "delegationRewardAmount"
        ]
      },
      "CompletedValidatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "delegatorCount": {
            "type": "number"
          },
          "rewards": {
            "type": "object",
            "properties": {
              "validationRewardAmount": {
                "type": "string"
              },
              "delegationRewardAmount": {
                "type": "string"
              },
              "rewardAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rewardTxHash": {
                "type": "string"
              }
            },
            "required": [
              "validationRewardAmount",
              "delegationRewardAmount"
            ]
          },
          "validationStatus": {
            "type": "string",
            "enum": [
              "completed"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "subnetId",
          "amountStaked",
          "startTimestamp",
          "endTimestamp",
          "delegatorCount",
          "rewards",
          "validationStatus"
        ]
      },
      "ValidatorHealthDetails": {
        "type": "object",
        "properties": {
          "reachabilityPercent": {
            "type": "number",
            "description": "Percent of requests responded to in last polling."
          },
          "benchedPChainRequestsPercent": {
            "type": "number",
            "description": "Percent of requests benched on the P-Chain in last polling."
          },
          "benchedXChainRequestsPercent": {
            "type": "number",
            "description": "Percentage of requests benched on the X-Chain in last polling."
          },
          "benchedCChainRequestsPercent": {
            "type": "number",
            "description": "Percentage of requests benched on the C-Chain in last polling."
          }
        },
        "required": [
          "reachabilityPercent",
          "benchedPChainRequestsPercent",
          "benchedXChainRequestsPercent",
          "benchedCChainRequestsPercent"
        ]
      },
      "ActiveValidatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "stakePercentage": {
            "type": "number"
          },
          "delegatorCount": {
            "type": "number"
          },
          "amountDelegated": {
            "type": "string"
          },
          "uptimePerformance": {
            "type": "number"
          },
          "avalancheGoVersion": {
            "type": "string"
          },
          "delegationCapacity": {
            "type": "string"
          },
          "potentialRewards": {
            "type": "object",
            "properties": {
              "validationRewardAmount": {
                "type": "string"
              },
              "delegationRewardAmount": {
                "type": "string"
              },
              "rewardAddresses": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rewardTxHash": {
                "type": "string"
              }
            },
            "required": [
              "validationRewardAmount",
              "delegationRewardAmount"
            ]
          },
          "validationStatus": {
            "type": "string",
            "enum": [
              "active"
            ]
          },
          "validatorHealth": {
            "type": "object",
            "properties": {
              "reachabilityPercent": {
                "type": "number",
                "description": "Percent of requests responded to in last polling."
              },
              "benchedPChainRequestsPercent": {
                "type": "number",
                "description": "Percent of requests benched on the P-Chain in last polling."
              },
              "benchedXChainRequestsPercent": {
                "type": "number",
                "description": "Percentage of requests benched on the X-Chain in last polling."
              },
              "benchedCChainRequestsPercent": {
                "type": "number",
                "description": "Percentage of requests benched on the C-Chain in last polling."
              }
            },
            "required": [
              "reachabilityPercent",
              "benchedPChainRequestsPercent",
              "benchedXChainRequestsPercent",
              "benchedCChainRequestsPercent"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "subnetId",
          "amountStaked",
          "startTimestamp",
          "endTimestamp",
          "stakePercentage",
          "delegatorCount",
          "uptimePerformance",
          "potentialRewards",
          "validationStatus",
          "validatorHealth"
        ]
      },
      "PendingValidatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "validationStatus": {
            "type": "string",
            "enum": [
              "pending"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "subnetId",
          "amountStaked",
          "startTimestamp",
          "endTimestamp",
          "validationStatus"
        ]
      },
      "RemovedValidatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "amountStaked": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "removeTxHash": {
            "type": "string"
          },
          "removeTimestamp": {
            "type": "number"
          },
          "validationStatus": {
            "type": "string",
            "enum": [
              "removed"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "subnetId",
          "amountStaked",
          "startTimestamp",
          "endTimestamp",
          "removeTxHash",
          "removeTimestamp",
          "validationStatus"
        ]
      },
      "ListValidatorDetailsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "validators": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "amountStaked": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "delegatorCount": {
                      "type": "number"
                    },
                    "rewards": {
                      "type": "object",
                      "properties": {
                        "validationRewardAmount": {
                          "type": "string"
                        },
                        "delegationRewardAmount": {
                          "type": "string"
                        },
                        "rewardAddresses": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "rewardTxHash": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "validationRewardAmount",
                        "delegationRewardAmount"
                      ]
                    },
                    "validationStatus": {
                      "type": "string",
                      "enum": [
                        "completed"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "subnetId",
                    "amountStaked",
                    "startTimestamp",
                    "endTimestamp",
                    "delegatorCount",
                    "rewards",
                    "validationStatus"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "amountStaked": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "stakePercentage": {
                      "type": "number"
                    },
                    "delegatorCount": {
                      "type": "number"
                    },
                    "amountDelegated": {
                      "type": "string"
                    },
                    "uptimePerformance": {
                      "type": "number"
                    },
                    "avalancheGoVersion": {
                      "type": "string"
                    },
                    "delegationCapacity": {
                      "type": "string"
                    },
                    "potentialRewards": {
                      "type": "object",
                      "properties": {
                        "validationRewardAmount": {
                          "type": "string"
                        },
                        "delegationRewardAmount": {
                          "type": "string"
                        },
                        "rewardAddresses": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "rewardTxHash": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "validationRewardAmount",
                        "delegationRewardAmount"
                      ]
                    },
                    "validationStatus": {
                      "type": "string",
                      "enum": [
                        "active"
                      ]
                    },
                    "validatorHealth": {
                      "type": "object",
                      "properties": {
                        "reachabilityPercent": {
                          "type": "number",
                          "description": "Percent of requests responded to in last polling."
                        },
                        "benchedPChainRequestsPercent": {
                          "type": "number",
                          "description": "Percent of requests benched on the P-Chain in last polling."
                        },
                        "benchedXChainRequestsPercent": {
                          "type": "number",
                          "description": "Percentage of requests benched on the X-Chain in last polling."
                        },
                        "benchedCChainRequestsPercent": {
                          "type": "number",
                          "description": "Percentage of requests benched on the C-Chain in last polling."
                        }
                      },
                      "required": [
                        "reachabilityPercent",
                        "benchedPChainRequestsPercent",
                        "benchedXChainRequestsPercent",
                        "benchedCChainRequestsPercent"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "subnetId",
                    "amountStaked",
                    "startTimestamp",
                    "endTimestamp",
                    "stakePercentage",
                    "delegatorCount",
                    "uptimePerformance",
                    "potentialRewards",
                    "validationStatus",
                    "validatorHealth"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "amountStaked": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "validationStatus": {
                      "type": "string",
                      "enum": [
                        "pending"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "subnetId",
                    "amountStaked",
                    "startTimestamp",
                    "endTimestamp",
                    "validationStatus"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "amountStaked": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "removeTxHash": {
                      "type": "string"
                    },
                    "removeTimestamp": {
                      "type": "number"
                    },
                    "validationStatus": {
                      "type": "string",
                      "enum": [
                        "removed"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "subnetId",
                    "amountStaked",
                    "startTimestamp",
                    "endTimestamp",
                    "removeTxHash",
                    "removeTimestamp",
                    "validationStatus"
                  ]
                }
              ],
              "discriminator": {
                "propertyName": "validationStatus",
                "mapping": {
                  "active": "#/components/schemas/ActiveValidatorDetails",
                  "pending": "#/components/schemas/PendingValidatorDetails",
                  "completed": "#/components/schemas/CompletedValidatorDetails",
                  "removed": "#/components/schemas/RemovedValidatorDetails"
                }
              }
            },
            "description": "The list of validator Details."
          }
        },
        "required": [
          "validators"
        ]
      },
      "DelegationStatusType": {
        "type": "string",
        "enum": [
          "completed",
          "active",
          "pending"
        ]
      },
      "CompletedDelegatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "rewardAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amountDelegated": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "grossReward": {
            "type": "string"
          },
          "netReward": {
            "type": "string"
          },
          "delegationStatus": {
            "type": "string",
            "enum": [
              "completed"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "rewardAddresses",
          "amountDelegated",
          "delegationFee",
          "startTimestamp",
          "endTimestamp",
          "grossReward",
          "netReward",
          "delegationStatus"
        ]
      },
      "ActiveDelegatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "rewardAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amountDelegated": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "estimatedGrossReward": {
            "type": "string"
          },
          "estimatedNetReward": {
            "type": "string"
          },
          "delegationStatus": {
            "type": "string",
            "enum": [
              "active"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "rewardAddresses",
          "amountDelegated",
          "delegationFee",
          "startTimestamp",
          "endTimestamp",
          "estimatedGrossReward",
          "estimatedNetReward",
          "delegationStatus"
        ]
      },
      "PendingDelegatorDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "rewardAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amountDelegated": {
            "type": "string"
          },
          "delegationFee": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "number"
          },
          "endTimestamp": {
            "type": "number"
          },
          "estimatedGrossReward": {
            "type": "string"
          },
          "estimatedNetReward": {
            "type": "string"
          },
          "delegationStatus": {
            "type": "string",
            "enum": [
              "pending"
            ]
          }
        },
        "required": [
          "txHash",
          "nodeId",
          "rewardAddresses",
          "amountDelegated",
          "delegationFee",
          "startTimestamp",
          "endTimestamp",
          "estimatedGrossReward",
          "estimatedNetReward",
          "delegationStatus"
        ]
      },
      "ListDelegatorDetailsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "delegators": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "rewardAddresses": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amountDelegated": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "grossReward": {
                      "type": "string"
                    },
                    "netReward": {
                      "type": "string"
                    },
                    "delegationStatus": {
                      "type": "string",
                      "enum": [
                        "completed"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "rewardAddresses",
                    "amountDelegated",
                    "delegationFee",
                    "startTimestamp",
                    "endTimestamp",
                    "grossReward",
                    "netReward",
                    "delegationStatus"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "rewardAddresses": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amountDelegated": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "estimatedGrossReward": {
                      "type": "string"
                    },
                    "estimatedNetReward": {
                      "type": "string"
                    },
                    "delegationStatus": {
                      "type": "string",
                      "enum": [
                        "active"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "rewardAddresses",
                    "amountDelegated",
                    "delegationFee",
                    "startTimestamp",
                    "endTimestamp",
                    "estimatedGrossReward",
                    "estimatedNetReward",
                    "delegationStatus"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "rewardAddresses": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amountDelegated": {
                      "type": "string"
                    },
                    "delegationFee": {
                      "type": "string"
                    },
                    "startTimestamp": {
                      "type": "number"
                    },
                    "endTimestamp": {
                      "type": "number"
                    },
                    "estimatedGrossReward": {
                      "type": "string"
                    },
                    "estimatedNetReward": {
                      "type": "string"
                    },
                    "delegationStatus": {
                      "type": "string",
                      "enum": [
                        "pending"
                      ]
                    }
                  },
                  "required": [
                    "txHash",
                    "nodeId",
                    "rewardAddresses",
                    "amountDelegated",
                    "delegationFee",
                    "startTimestamp",
                    "endTimestamp",
                    "estimatedGrossReward",
                    "estimatedNetReward",
                    "delegationStatus"
                  ]
                }
              ],
              "discriminator": {
                "propertyName": "delegationStatus",
                "mapping": {
                  "active": "#/components/schemas/ActiveDelegatorDetails",
                  "pending": "#/components/schemas/PendingDelegatorDetails",
                  "completed": "#/components/schemas/CompletedDelegatorDetails"
                }
              }
            },
            "description": "The list of Delegator Details."
          }
        },
        "required": [
          "delegators"
        ]
      },
      "EventType": {
        "type": "string",
        "enum": [
          "address_activity"
        ]
      },
      "RegisterWebhookRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "chainId": {
            "type": "string"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "address_activity"
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "Ethereum address(es) for the address_activity event type",
                    "example": [
                      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                    ],
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "eventSignatures": {
                    "description": "Array of hexadecimal strings of the event signatures.",
                    "example": [
                      "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "addresses"
                ]
              }
            ]
          },
          "includeInternalTxs": {
            "type": "boolean",
            "description": "Whether to include traces in the webhook payload."
          },
          "includeLogs": {
            "type": "boolean",
            "description": "Whether to include logs in the webhook payload."
          }
        },
        "required": [
          "url",
          "chainId",
          "eventType",
          "metadata"
        ]
      },
      "AddressActivityMetadata": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "Ethereum address(es) for the address_activity event type",
            "example": [
              "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
            ],
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "eventSignatures": {
            "description": "Array of hexadecimal strings of the event signatures.",
            "example": [
              "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "addresses"
        ]
      },
      "WebhookStatusType": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ]
      },
      "WebhookResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "address_activity"
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "Ethereum address(es) for the address_activity event type",
                    "example": [
                      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                    ],
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "eventSignatures": {
                    "description": "Array of hexadecimal strings of the event signatures.",
                    "example": [
                      "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "addresses"
                ]
              }
            ]
          },
          "includeInternalTxs": {
            "type": "boolean",
            "description": "Whether to include traces in the webhook payload."
          },
          "includeLogs": {
            "type": "boolean",
            "description": "Whether to include logs in the webhook payload."
          },
          "url": {
            "type": "string"
          },
          "chainId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "createdAt": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "eventType",
          "metadata",
          "url",
          "chainId",
          "status",
          "createdAt",
          "name",
          "description"
        ]
      },
      "WebhookStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ]
      },
      "ListWebhooksResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "eventType": {
                  "type": "string",
                  "enum": [
                    "address_activity"
                  ]
                },
                "metadata": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "addresses": {
                          "description": "Ethereum address(es) for the address_activity event type",
                          "example": [
                            "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                          ],
                          "items": {
                            "type": "array"
                          },
                          "type": "array"
                        },
                        "eventSignatures": {
                          "description": "Array of hexadecimal strings of the event signatures.",
                          "example": [
                            "0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "addresses"
                      ]
                    }
                  ]
                },
                "includeInternalTxs": {
                  "type": "boolean",
                  "description": "Whether to include traces in the webhook payload."
                },
                "includeLogs": {
                  "type": "boolean",
                  "description": "Whether to include logs in the webhook payload."
                },
                "url": {
                  "type": "string"
                },
                "chainId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "createdAt": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "eventType",
                "metadata",
                "url",
                "chainId",
                "status",
                "createdAt",
                "name",
                "description"
              ]
            }
          }
        },
        "required": [
          "webhooks"
        ]
      },
      "SharedSecretsResponse": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          }
        },
        "required": [
          "secret"
        ]
      },
      "UpdateWebhookRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "includeInternalTxs": {
            "type": "boolean"
          },
          "includeLogs": {
            "type": "boolean"
          }
        }
      },
      "AddressesChangeRequest": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "Ethereum address(es) for the address_activity event type",
            "example": [
              "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
            ],
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": [
          "addresses"
        ]
      },
      "ListWebhookAddressesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalAddresses": {
            "type": "number"
          }
        },
        "required": [
          "addresses",
          "totalAddresses"
        ]
      },
      "TeleporterReceipt": {
        "type": "object",
        "properties": {
          "receivedMessageNonce": {
            "type": "string"
          },
          "relayerRewardAddress": {
            "type": "string"
          }
        },
        "required": [
          "receivedMessageNonce",
          "relayerRewardAddress"
        ]
      },
      "TeleporterRewardDetails": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-20"
            ]
          },
          "price": {
            "description": "The token price, if available.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "address",
          "name",
          "symbol",
          "decimals",
          "ercType",
          "value"
        ]
      },
      "TeleporterSourceTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "gasSpent": {
            "type": "string"
          }
        },
        "required": [
          "txHash",
          "timestamp",
          "gasSpent"
        ]
      },
      "PendingTeleporterMessage": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string"
          },
          "teleporterContractAddress": {
            "type": "string"
          },
          "sourceBlockchainId": {
            "type": "string"
          },
          "destinationBlockchainId": {
            "type": "string"
          },
          "sourceEvmChainId": {
            "type": "string"
          },
          "destinationEvmChainId": {
            "type": "string"
          },
          "messageNonce": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "messageExecuted": {
            "type": "boolean"
          },
          "receipts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receivedMessageNonce": {
                  "type": "string"
                },
                "relayerRewardAddress": {
                  "type": "string"
                }
              },
              "required": [
                "receivedMessageNonce",
                "relayerRewardAddress"
              ]
            }
          },
          "receiptDelivered": {
            "type": "boolean"
          },
          "rewardDetails": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-20"
                ]
              },
              "price": {
                "description": "The token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "decimals",
              "ercType",
              "value"
            ]
          },
          "sourceTransaction": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "timestamp": {
                "type": "number"
              },
              "gasSpent": {
                "type": "string"
              }
            },
            "required": [
              "txHash",
              "timestamp",
              "gasSpent"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending"
            ]
          }
        },
        "required": [
          "messageId",
          "teleporterContractAddress",
          "sourceBlockchainId",
          "destinationBlockchainId",
          "sourceEvmChainId",
          "destinationEvmChainId",
          "messageNonce",
          "from",
          "to",
          "messageExecuted",
          "receipts",
          "receiptDelivered",
          "rewardDetails",
          "sourceTransaction",
          "status"
        ]
      },
      "TeleporterDestinationTransaction": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "gasSpent": {
            "type": "string"
          },
          "rewardRedeemer": {
            "type": "string"
          },
          "delivererAddress": {
            "type": "string"
          }
        },
        "required": [
          "txHash",
          "timestamp",
          "gasSpent",
          "rewardRedeemer",
          "delivererAddress"
        ]
      },
      "DeliveredTeleporterMessage": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string"
          },
          "teleporterContractAddress": {
            "type": "string"
          },
          "sourceBlockchainId": {
            "type": "string"
          },
          "destinationBlockchainId": {
            "type": "string"
          },
          "sourceEvmChainId": {
            "type": "string"
          },
          "destinationEvmChainId": {
            "type": "string"
          },
          "messageNonce": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "messageExecuted": {
            "type": "boolean"
          },
          "receipts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receivedMessageNonce": {
                  "type": "string"
                },
                "relayerRewardAddress": {
                  "type": "string"
                }
              },
              "required": [
                "receivedMessageNonce",
                "relayerRewardAddress"
              ]
            }
          },
          "receiptDelivered": {
            "type": "boolean"
          },
          "rewardDetails": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-20"
                ]
              },
              "price": {
                "description": "The token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "decimals",
              "ercType",
              "value"
            ]
          },
          "sourceTransaction": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "timestamp": {
                "type": "number"
              },
              "gasSpent": {
                "type": "string"
              }
            },
            "required": [
              "txHash",
              "timestamp",
              "gasSpent"
            ]
          },
          "destinationTransaction": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "timestamp": {
                "type": "number"
              },
              "gasSpent": {
                "type": "string"
              },
              "rewardRedeemer": {
                "type": "string"
              },
              "delivererAddress": {
                "type": "string"
              }
            },
            "required": [
              "txHash",
              "timestamp",
              "gasSpent",
              "rewardRedeemer",
              "delivererAddress"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "delivered"
            ]
          }
        },
        "required": [
          "messageId",
          "teleporterContractAddress",
          "sourceBlockchainId",
          "destinationBlockchainId",
          "sourceEvmChainId",
          "destinationEvmChainId",
          "messageNonce",
          "from",
          "to",
          "messageExecuted",
          "receipts",
          "receiptDelivered",
          "rewardDetails",
          "sourceTransaction",
          "destinationTransaction",
          "status"
        ]
      },
      "DeliveredSourceNotIndexedTeleporterMessage": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string"
          },
          "teleporterContractAddress": {
            "type": "string"
          },
          "sourceBlockchainId": {
            "type": "string"
          },
          "destinationBlockchainId": {
            "type": "string"
          },
          "sourceEvmChainId": {
            "type": "string"
          },
          "destinationEvmChainId": {
            "type": "string"
          },
          "messageNonce": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "messageExecuted": {
            "type": "boolean"
          },
          "receipts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receivedMessageNonce": {
                  "type": "string"
                },
                "relayerRewardAddress": {
                  "type": "string"
                }
              },
              "required": [
                "receivedMessageNonce",
                "relayerRewardAddress"
              ]
            }
          },
          "receiptDelivered": {
            "type": "boolean"
          },
          "rewardDetails": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-20"
                ]
              },
              "price": {
                "description": "The token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "decimals",
              "ercType",
              "value"
            ]
          },
          "destinationTransaction": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "timestamp": {
                "type": "number"
              },
              "gasSpent": {
                "type": "string"
              },
              "rewardRedeemer": {
                "type": "string"
              },
              "delivererAddress": {
                "type": "string"
              }
            },
            "required": [
              "txHash",
              "timestamp",
              "gasSpent",
              "rewardRedeemer",
              "delivererAddress"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "delivered_source_not_indexed"
            ]
          }
        },
        "required": [
          "messageId",
          "teleporterContractAddress",
          "sourceBlockchainId",
          "destinationBlockchainId",
          "sourceEvmChainId",
          "destinationEvmChainId",
          "messageNonce",
          "from",
          "to",
          "messageExecuted",
          "receipts",
          "receiptDelivered",
          "rewardDetails",
          "destinationTransaction",
          "status"
        ]
      },
      "NextPageToken": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          }
        }
      },
      "NetworkType": {
        "type": "string",
        "enum": [
          "mainnet",
          "testnet"
        ]
      },
      "ListTeleporterMessagesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "messages": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "string"
                    },
                    "teleporterContractAddress": {
                      "type": "string"
                    },
                    "sourceBlockchainId": {
                      "type": "string"
                    },
                    "destinationBlockchainId": {
                      "type": "string"
                    },
                    "sourceEvmChainId": {
                      "type": "string"
                    },
                    "destinationEvmChainId": {
                      "type": "string"
                    },
                    "messageNonce": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "messageExecuted": {
                      "type": "boolean"
                    },
                    "receipts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "receivedMessageNonce": {
                            "type": "string"
                          },
                          "relayerRewardAddress": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "receivedMessageNonce",
                          "relayerRewardAddress"
                        ]
                      }
                    },
                    "receiptDelivered": {
                      "type": "boolean"
                    },
                    "rewardDetails": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-20"
                          ]
                        },
                        "price": {
                          "description": "The token price, if available.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "name",
                        "symbol",
                        "decimals",
                        "ercType",
                        "value"
                      ]
                    },
                    "sourceTransaction": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "number"
                        },
                        "gasSpent": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "txHash",
                        "timestamp",
                        "gasSpent"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending"
                      ]
                    }
                  },
                  "required": [
                    "messageId",
                    "teleporterContractAddress",
                    "sourceBlockchainId",
                    "destinationBlockchainId",
                    "sourceEvmChainId",
                    "destinationEvmChainId",
                    "messageNonce",
                    "from",
                    "to",
                    "messageExecuted",
                    "receipts",
                    "receiptDelivered",
                    "rewardDetails",
                    "sourceTransaction",
                    "status"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "string"
                    },
                    "teleporterContractAddress": {
                      "type": "string"
                    },
                    "sourceBlockchainId": {
                      "type": "string"
                    },
                    "destinationBlockchainId": {
                      "type": "string"
                    },
                    "sourceEvmChainId": {
                      "type": "string"
                    },
                    "destinationEvmChainId": {
                      "type": "string"
                    },
                    "messageNonce": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "messageExecuted": {
                      "type": "boolean"
                    },
                    "receipts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "receivedMessageNonce": {
                            "type": "string"
                          },
                          "relayerRewardAddress": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "receivedMessageNonce",
                          "relayerRewardAddress"
                        ]
                      }
                    },
                    "receiptDelivered": {
                      "type": "boolean"
                    },
                    "rewardDetails": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-20"
                          ]
                        },
                        "price": {
                          "description": "The token price, if available.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "name",
                        "symbol",
                        "decimals",
                        "ercType",
                        "value"
                      ]
                    },
                    "sourceTransaction": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "number"
                        },
                        "gasSpent": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "txHash",
                        "timestamp",
                        "gasSpent"
                      ]
                    },
                    "destinationTransaction": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "number"
                        },
                        "gasSpent": {
                          "type": "string"
                        },
                        "rewardRedeemer": {
                          "type": "string"
                        },
                        "delivererAddress": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "txHash",
                        "timestamp",
                        "gasSpent",
                        "rewardRedeemer",
                        "delivererAddress"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "delivered"
                      ]
                    }
                  },
                  "required": [
                    "messageId",
                    "teleporterContractAddress",
                    "sourceBlockchainId",
                    "destinationBlockchainId",
                    "sourceEvmChainId",
                    "destinationEvmChainId",
                    "messageNonce",
                    "from",
                    "to",
                    "messageExecuted",
                    "receipts",
                    "receiptDelivered",
                    "rewardDetails",
                    "sourceTransaction",
                    "destinationTransaction",
                    "status"
                  ]
                }
              ],
              "discriminator": {
                "propertyName": "status",
                "mapping": {
                  "pending": "#/components/schemas/PendingTeleporterMessage",
                  "delivered": "#/components/schemas/DeliveredTeleporterMessage"
                }
              }
            }
          }
        },
        "required": [
          "messages"
        ]
      },
      "NativeTokenBalance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "chainId": {
            "type": "string",
            "description": "The evm chain id.",
            "example": "43114"
          },
          "price": {
            "description": "The token price, if available.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          },
          "balance": {
            "type": "string",
            "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
            "example": "2000000000000000000"
          },
          "balanceValue": {
            "description": "The monetary value of the balance, if a price is available for the token.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          }
        },
        "required": [
          "name",
          "symbol",
          "decimals",
          "chainId",
          "balance"
        ]
      },
      "GetNativeBalanceResponse": {
        "type": "object",
        "properties": {
          "nativeTokenBalance": {
            "description": "The native token balance for the address.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The contract name.",
                    "example": "Wrapped AVAX"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The contract symbol.",
                    "example": "WAVAX"
                  },
                  "decimals": {
                    "type": "number",
                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                    "example": 18
                  },
                  "logoUri": {
                    "type": "string",
                    "description": "The logo uri for the address.",
                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                  },
                  "chainId": {
                    "type": "string",
                    "description": "The evm chain id.",
                    "example": "43114"
                  },
                  "price": {
                    "description": "The token price, if available.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "currencyCode": {
                            "type": "string",
                            "description": "ISO 4217 currency code.",
                            "enum": [
                              "usd",
                              "eur",
                              "aud",
                              "cad",
                              "chf",
                              "clp",
                              "cny",
                              "czk",
                              "dkk",
                              "gbp",
                              "hkd",
                              "huf",
                              "jpy",
                              "nzd"
                            ],
                            "example": "usd"
                          },
                          "value": {
                            "type": "number",
                            "description": "Monetary value in base 10 decimals.",
                            "example": "42.42"
                          }
                        },
                        "required": [
                          "currencyCode",
                          "value"
                        ]
                      }
                    ]
                  },
                  "balance": {
                    "type": "string",
                    "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                    "example": "2000000000000000000"
                  },
                  "balanceValue": {
                    "description": "The monetary value of the balance, if a price is available for the token.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "currencyCode": {
                            "type": "string",
                            "description": "ISO 4217 currency code.",
                            "enum": [
                              "usd",
                              "eur",
                              "aud",
                              "cad",
                              "chf",
                              "clp",
                              "cny",
                              "czk",
                              "dkk",
                              "gbp",
                              "hkd",
                              "huf",
                              "jpy",
                              "nzd"
                            ],
                            "example": "usd"
                          },
                          "value": {
                            "type": "number",
                            "description": "Monetary value in base 10 decimals.",
                            "example": "42.42"
                          }
                        },
                        "required": [
                          "currencyCode",
                          "value"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "symbol",
                  "decimals",
                  "chainId",
                  "balance"
                ]
              }
            ]
          }
        },
        "required": [
          "nativeTokenBalance"
        ]
      },
      "Erc20TokenBalance": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-20"
            ]
          },
          "price": {
            "description": "The token price, if available.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          },
          "chainId": {
            "type": "string",
            "description": "The evm chain id.",
            "example": "43114"
          },
          "balance": {
            "type": "string",
            "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
            "example": "2000000000000000000"
          },
          "balanceValue": {
            "description": "The monetary value of the balance, if a price is available for the token.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          }
        },
        "required": [
          "address",
          "name",
          "symbol",
          "decimals",
          "ercType",
          "chainId",
          "balance"
        ]
      },
      "ListErc20BalancesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "erc20TokenBalances": {
            "description": "The list of ERC-20 token balances for the address.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "A wallet or contract address in mixed-case checksum encoding.",
                  "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                },
                "name": {
                  "type": "string",
                  "description": "The contract name.",
                  "example": "Wrapped AVAX"
                },
                "symbol": {
                  "type": "string",
                  "description": "The contract symbol.",
                  "example": "WAVAX"
                },
                "decimals": {
                  "type": "number",
                  "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                  "example": 18
                },
                "logoUri": {
                  "type": "string",
                  "description": "The logo uri for the address.",
                  "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                },
                "ercType": {
                  "type": "string",
                  "enum": [
                    "ERC-20"
                  ]
                },
                "price": {
                  "description": "The token price, if available.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "currencyCode": {
                          "type": "string",
                          "description": "ISO 4217 currency code.",
                          "enum": [
                            "usd",
                            "eur",
                            "aud",
                            "cad",
                            "chf",
                            "clp",
                            "cny",
                            "czk",
                            "dkk",
                            "gbp",
                            "hkd",
                            "huf",
                            "jpy",
                            "nzd"
                          ],
                          "example": "usd"
                        },
                        "value": {
                          "type": "number",
                          "description": "Monetary value in base 10 decimals.",
                          "example": "42.42"
                        }
                      },
                      "required": [
                        "currencyCode",
                        "value"
                      ]
                    }
                  ]
                },
                "chainId": {
                  "type": "string",
                  "description": "The evm chain id.",
                  "example": "43114"
                },
                "balance": {
                  "type": "string",
                  "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                  "example": "2000000000000000000"
                },
                "balanceValue": {
                  "description": "The monetary value of the balance, if a price is available for the token.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "currencyCode": {
                          "type": "string",
                          "description": "ISO 4217 currency code.",
                          "enum": [
                            "usd",
                            "eur",
                            "aud",
                            "cad",
                            "chf",
                            "clp",
                            "cny",
                            "czk",
                            "dkk",
                            "gbp",
                            "hkd",
                            "huf",
                            "jpy",
                            "nzd"
                          ],
                          "example": "usd"
                        },
                        "value": {
                          "type": "number",
                          "description": "Monetary value in base 10 decimals.",
                          "example": "42.42"
                        }
                      },
                      "required": [
                        "currencyCode",
                        "value"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "address",
                "name",
                "symbol",
                "decimals",
                "ercType",
                "chainId",
                "balance"
              ]
            }
          }
        },
        "required": [
          "erc20TokenBalances"
        ]
      },
      "Erc721TokenBalance": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-721"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "indexStatus": {
                "example": "indexed",
                "type": "string",
                "description": "The metadata indexing status of the nft.",
                "enum": [
                  "UNKNOWN",
                  "MISSING_TOKEN",
                  "INVALID_TOKEN_URI",
                  "INVALID_TOKEN_URI_SCHEME",
                  "UNREACHABLE_TOKEN_URI",
                  "THROTTLED_TOKEN_URI",
                  "METADATA_CONTENT_TOO_LARGE",
                  "INVALID_METADATA",
                  "INVALID_METADATA_JSON",
                  "INDEXED",
                  "UNINDEXED"
                ]
              },
              "metadataLastUpdatedTimestamp": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "imageUri": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "animationUri": {
                "type": "string"
              },
              "externalUrl": {
                "type": "string"
              },
              "background": {
                "type": "string"
              },
              "attributes": {
                "type": "string"
              }
            },
            "required": [
              "indexStatus"
            ]
          },
          "ownerAddress": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "chainId": {
            "type": "string",
            "description": "The evm chain id.",
            "example": "43114"
          }
        },
        "required": [
          "address",
          "name",
          "symbol",
          "ercType",
          "tokenId",
          "tokenUri",
          "metadata",
          "chainId"
        ]
      },
      "ListErc721BalancesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "erc721TokenBalances": {
            "description": "The list of ERC-721 token balances for the address.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "A wallet or contract address in mixed-case checksum encoding.",
                  "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                },
                "name": {
                  "type": "string",
                  "description": "The contract name.",
                  "example": "Wrapped AVAX"
                },
                "symbol": {
                  "type": "string",
                  "description": "The contract symbol.",
                  "example": "WAVAX"
                },
                "ercType": {
                  "type": "string",
                  "enum": [
                    "ERC-721"
                  ]
                },
                "tokenId": {
                  "type": "string"
                },
                "tokenUri": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "indexStatus": {
                      "example": "indexed",
                      "type": "string",
                      "description": "The metadata indexing status of the nft.",
                      "enum": [
                        "UNKNOWN",
                        "MISSING_TOKEN",
                        "INVALID_TOKEN_URI",
                        "INVALID_TOKEN_URI_SCHEME",
                        "UNREACHABLE_TOKEN_URI",
                        "THROTTLED_TOKEN_URI",
                        "METADATA_CONTENT_TOO_LARGE",
                        "INVALID_METADATA",
                        "INVALID_METADATA_JSON",
                        "INDEXED",
                        "UNINDEXED"
                      ]
                    },
                    "metadataLastUpdatedTimestamp": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "imageUri": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "animationUri": {
                      "type": "string"
                    },
                    "externalUrl": {
                      "type": "string"
                    },
                    "background": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "indexStatus"
                  ]
                },
                "ownerAddress": {
                  "type": "string",
                  "description": "A wallet or contract address in mixed-case checksum encoding.",
                  "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                },
                "chainId": {
                  "type": "string",
                  "description": "The evm chain id.",
                  "example": "43114"
                }
              },
              "required": [
                "address",
                "name",
                "symbol",
                "ercType",
                "tokenId",
                "tokenUri",
                "metadata",
                "chainId"
              ]
            }
          }
        },
        "required": [
          "erc721TokenBalances"
        ]
      },
      "Erc1155TokenBalance": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-1155"
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "indexStatus": {
                "example": "indexed",
                "type": "string",
                "description": "The metadata indexing status of the nft.",
                "enum": [
                  "UNKNOWN",
                  "MISSING_TOKEN",
                  "INVALID_TOKEN_URI",
                  "INVALID_TOKEN_URI_SCHEME",
                  "UNREACHABLE_TOKEN_URI",
                  "THROTTLED_TOKEN_URI",
                  "METADATA_CONTENT_TOO_LARGE",
                  "INVALID_METADATA",
                  "INVALID_METADATA_JSON",
                  "INDEXED",
                  "UNINDEXED"
                ]
              },
              "metadataLastUpdatedTimestamp": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "imageUri": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "animationUri": {
                "type": "string"
              },
              "externalUrl": {
                "type": "string"
              },
              "background": {
                "type": "string"
              },
              "decimals": {
                "type": "number"
              },
              "properties": {
                "type": "string"
              }
            },
            "required": [
              "indexStatus"
            ]
          },
          "chainId": {
            "type": "string",
            "description": "The evm chain id.",
            "example": "43114"
          },
          "balance": {
            "type": "string",
            "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
            "example": "2000000000000000000"
          }
        },
        "required": [
          "address",
          "ercType",
          "tokenId",
          "tokenUri",
          "metadata",
          "chainId",
          "balance"
        ]
      },
      "ListErc1155BalancesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "erc1155TokenBalances": {
            "description": "The list of ERC-1155 token balances for the address.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "A wallet or contract address in mixed-case checksum encoding.",
                  "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                },
                "ercType": {
                  "type": "string",
                  "enum": [
                    "ERC-1155"
                  ]
                },
                "tokenId": {
                  "type": "string"
                },
                "tokenUri": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "indexStatus": {
                      "example": "indexed",
                      "type": "string",
                      "description": "The metadata indexing status of the nft.",
                      "enum": [
                        "UNKNOWN",
                        "MISSING_TOKEN",
                        "INVALID_TOKEN_URI",
                        "INVALID_TOKEN_URI_SCHEME",
                        "UNREACHABLE_TOKEN_URI",
                        "THROTTLED_TOKEN_URI",
                        "METADATA_CONTENT_TOO_LARGE",
                        "INVALID_METADATA",
                        "INVALID_METADATA_JSON",
                        "INDEXED",
                        "UNINDEXED"
                      ]
                    },
                    "metadataLastUpdatedTimestamp": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "imageUri": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "animationUri": {
                      "type": "string"
                    },
                    "externalUrl": {
                      "type": "string"
                    },
                    "background": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "number"
                    },
                    "properties": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "indexStatus"
                  ]
                },
                "chainId": {
                  "type": "string",
                  "description": "The evm chain id.",
                  "example": "43114"
                },
                "balance": {
                  "type": "string",
                  "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                  "example": "2000000000000000000"
                }
              },
              "required": [
                "address",
                "ercType",
                "tokenId",
                "tokenUri",
                "metadata",
                "chainId",
                "balance"
              ]
            }
          }
        },
        "required": [
          "erc1155TokenBalances"
        ]
      },
      "ListCollectibleBalancesResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "collectibleBalances": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "chainId": {
                      "type": "string",
                      "description": "The evm chain id.",
                      "example": "43114"
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata",
                    "chainId"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "properties": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "chainId": {
                      "type": "string",
                      "description": "The evm chain id.",
                      "example": "43114"
                    },
                    "balance": {
                      "type": "string",
                      "description": "The address balance for the token, in units specified by the `decimals` value for the contract.",
                      "example": "2000000000000000000"
                    }
                  },
                  "required": [
                    "address",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata",
                    "chainId",
                    "balance"
                  ]
                }
              ]
            },
            "description": "The list of ERC-721 and ERC-1155 token balances for the address."
          }
        },
        "required": [
          "collectibleBalances"
        ]
      },
      "EvmBlock": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txCount": {
            "type": "number",
            "description": "The number of evm transactions in the block."
          },
          "baseFee": {
            "type": "string",
            "description": "The base gas fee for a transaction to be included in the block."
          },
          "gasUsed": {
            "type": "string",
            "description": "The gas used for transactions in the block."
          },
          "gasLimit": {
            "type": "string",
            "description": "The total gas limit set for transactions in the block."
          },
          "gasCost": {
            "type": "string"
          },
          "parentHash": {
            "type": "string",
            "description": "The hash of the parent block."
          },
          "feesSpent": {
            "type": "string",
            "description": "The amount of fees spent/burned for transactions in the block."
          },
          "cumulativeTransactions": {
            "type": "string",
            "description": "The cumulative number of transactions for the chain including this block."
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txCount",
          "baseFee",
          "gasUsed",
          "gasLimit",
          "gasCost",
          "parentHash",
          "feesSpent",
          "cumulativeTransactions"
        ]
      },
      "ListEvmBlocksResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "blocks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "txCount": {
                  "type": "number",
                  "description": "The number of evm transactions in the block."
                },
                "baseFee": {
                  "type": "string",
                  "description": "The base gas fee for a transaction to be included in the block."
                },
                "gasUsed": {
                  "type": "string",
                  "description": "The gas used for transactions in the block."
                },
                "gasLimit": {
                  "type": "string",
                  "description": "The total gas limit set for transactions in the block."
                },
                "gasCost": {
                  "type": "string"
                },
                "parentHash": {
                  "type": "string",
                  "description": "The hash of the parent block."
                },
                "feesSpent": {
                  "type": "string",
                  "description": "The amount of fees spent/burned for transactions in the block."
                },
                "cumulativeTransactions": {
                  "type": "string",
                  "description": "The cumulative number of transactions for the chain including this block."
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "txCount",
                "baseFee",
                "gasUsed",
                "gasLimit",
                "gasCost",
                "parentHash",
                "feesSpent",
                "cumulativeTransactions"
              ]
            }
          }
        },
        "required": [
          "blocks"
        ]
      },
      "GetEvmBlockResponse": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txCount": {
            "type": "number",
            "description": "The number of evm transactions in the block."
          },
          "baseFee": {
            "type": "string",
            "description": "The base gas fee for a transaction to be included in the block."
          },
          "gasUsed": {
            "type": "string",
            "description": "The gas used for transactions in the block."
          },
          "gasLimit": {
            "type": "string",
            "description": "The total gas limit set for transactions in the block."
          },
          "gasCost": {
            "type": "string"
          },
          "parentHash": {
            "type": "string",
            "description": "The hash of the parent block."
          },
          "feesSpent": {
            "type": "string",
            "description": "The amount of fees spent/burned for transactions in the block."
          },
          "cumulativeTransactions": {
            "type": "string",
            "description": "The cumulative number of transactions for the chain including this block."
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txCount",
          "baseFee",
          "gasUsed",
          "gasLimit",
          "gasCost",
          "parentHash",
          "feesSpent",
          "cumulativeTransactions"
        ]
      },
      "RichAddress": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          }
        },
        "required": [
          "address"
        ]
      },
      "Erc20Token": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-20"
            ]
          },
          "price": {
            "description": "The token price, if available.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          }
        },
        "required": [
          "address",
          "name",
          "symbol",
          "decimals",
          "ercType"
        ]
      },
      "Erc20TransferDetails": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "erc20Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-20"
                ]
              },
              "price": {
                "description": "The token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "decimals",
              "ercType"
            ]
          }
        },
        "required": [
          "from",
          "to",
          "logIndex",
          "value",
          "erc20Token"
        ]
      },
      "Erc721TransferDetails": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "erc721Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-721"
                ]
              },
              "tokenId": {
                "type": "string"
              },
              "tokenUri": {
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "indexStatus": {
                    "example": "indexed",
                    "type": "string",
                    "description": "The metadata indexing status of the nft.",
                    "enum": [
                      "UNKNOWN",
                      "MISSING_TOKEN",
                      "INVALID_TOKEN_URI",
                      "INVALID_TOKEN_URI_SCHEME",
                      "UNREACHABLE_TOKEN_URI",
                      "THROTTLED_TOKEN_URI",
                      "METADATA_CONTENT_TOO_LARGE",
                      "INVALID_METADATA",
                      "INVALID_METADATA_JSON",
                      "INDEXED",
                      "UNINDEXED"
                    ]
                  },
                  "metadataLastUpdatedTimestamp": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "imageUri": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "animationUri": {
                    "type": "string"
                  },
                  "externalUrl": {
                    "type": "string"
                  },
                  "background": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "string"
                  }
                },
                "required": [
                  "indexStatus"
                ]
              },
              "ownerAddress": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "ercType",
              "tokenId",
              "tokenUri",
              "metadata"
            ]
          }
        },
        "required": [
          "from",
          "to",
          "logIndex",
          "erc721Token"
        ]
      },
      "Erc1155TransferDetails": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "erc1155Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-1155"
                ]
              },
              "tokenId": {
                "type": "string"
              },
              "tokenUri": {
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "indexStatus": {
                    "example": "indexed",
                    "type": "string",
                    "description": "The metadata indexing status of the nft.",
                    "enum": [
                      "UNKNOWN",
                      "MISSING_TOKEN",
                      "INVALID_TOKEN_URI",
                      "INVALID_TOKEN_URI_SCHEME",
                      "UNREACHABLE_TOKEN_URI",
                      "THROTTLED_TOKEN_URI",
                      "METADATA_CONTENT_TOO_LARGE",
                      "INVALID_METADATA",
                      "INVALID_METADATA_JSON",
                      "INDEXED",
                      "UNINDEXED"
                    ]
                  },
                  "metadataLastUpdatedTimestamp": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "imageUri": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "animationUri": {
                    "type": "string"
                  },
                  "externalUrl": {
                    "type": "string"
                  },
                  "background": {
                    "type": "string"
                  },
                  "decimals": {
                    "type": "number"
                  },
                  "properties": {
                    "type": "string"
                  }
                },
                "required": [
                  "indexStatus"
                ]
              }
            },
            "required": [
              "address",
              "ercType",
              "tokenId",
              "tokenUri",
              "metadata"
            ]
          }
        },
        "required": [
          "from",
          "to",
          "logIndex",
          "value",
          "erc1155Token"
        ]
      },
      "InternalTransactionOpCall": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "CALL",
          "CREATE",
          "CREATE2",
          "CALLCODE",
          "DELEGATECALL",
          "STATICCALL"
        ]
      },
      "InternalTransactionDetails": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "internalTxType": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "CALL",
              "CREATE",
              "CREATE2",
              "CALLCODE",
              "DELEGATECALL",
              "STATICCALL"
            ]
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "isReverted": {
            "type": "boolean",
            "description": "True if the internal transaction was reverted."
          },
          "gasUsed": {
            "type": "string"
          },
          "gasLimit": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to",
          "internalTxType",
          "value",
          "isReverted",
          "gasUsed",
          "gasLimit"
        ]
      },
      "NetworkToken": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "logoUri": {
            "type": "string",
            "description": "The logo uri for the address.",
            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "symbol",
          "decimals"
        ]
      },
      "NetworkTokenDetails": {
        "type": "object",
        "properties": {
          "networkToken": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals"
            ]
          },
          "currentPrice": {
            "description": "The current token price, if available.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          },
          "historicalPrice": {
            "description": "The historical token price at the time the transaction occured, if available. Note, this is only provided if the transaction occured more than 24 hours ago.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "type": "string",
                    "description": "ISO 4217 currency code.",
                    "enum": [
                      "usd",
                      "eur",
                      "aud",
                      "cad",
                      "chf",
                      "clp",
                      "cny",
                      "czk",
                      "dkk",
                      "gbp",
                      "hkd",
                      "huf",
                      "jpy",
                      "nzd"
                    ],
                    "example": "usd"
                  },
                  "value": {
                    "type": "number",
                    "description": "Monetary value in base 10 decimals.",
                    "example": "42.42"
                  }
                },
                "required": [
                  "currencyCode",
                  "value"
                ]
              }
            ]
          }
        },
        "required": [
          "networkToken"
        ]
      },
      "TransactionMethodType": {
        "type": "string",
        "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
        "enum": [
          "NATIVE_TRANSFER",
          "CONTRACT_CALL",
          "CONTRACT_CREATION"
        ]
      },
      "Method": {
        "type": "object",
        "properties": {
          "callType": {
            "example": "CONTRACT_CALL",
            "type": "string",
            "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
            "enum": [
              "NATIVE_TRANSFER",
              "CONTRACT_CALL",
              "CONTRACT_CREATION"
            ]
          },
          "methodHash": {
            "type": "string",
            "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
            "example": "0xa9059cbb"
          },
          "methodName": {
            "type": "string",
            "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
            "example": "transfer(address,uint256)"
          }
        },
        "required": [
          "callType",
          "methodHash"
        ]
      },
      "FullNativeTransactionDetails": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "blockIndex": {
            "type": "number",
            "description": "The index at which the transaction occured in the block (0-indexed).",
            "example": 0
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "txStatus": {
            "type": "string",
            "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
            "example": "1"
          },
          "txType": {
            "type": "number",
            "description": "The transaction type.",
            "example": 1
          },
          "gasLimit": {
            "type": "string",
            "description": "The gas limit set for the transaction.",
            "example": "51373"
          },
          "gasUsed": {
            "type": "string",
            "description": "The amount of gas used.",
            "example": "51373"
          },
          "gasPrice": {
            "type": "string",
            "description": "The gas price denominated by the number of decimals of the native token.",
            "example": "470000000000"
          },
          "nonce": {
            "type": "string",
            "description": "The nonce used by the sender of the transaction.",
            "example": "1"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "method": {
            "type": "object",
            "properties": {
              "callType": {
                "example": "CONTRACT_CALL",
                "type": "string",
                "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                "enum": [
                  "NATIVE_TRANSFER",
                  "CONTRACT_CALL",
                  "CONTRACT_CREATION"
                ]
              },
              "methodHash": {
                "type": "string",
                "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                "example": "0xa9059cbb"
              },
              "methodName": {
                "type": "string",
                "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                "example": "transfer(address,uint256)"
              }
            },
            "required": [
              "callType",
              "methodHash"
            ]
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "input": {
            "type": "string",
            "description": "The data sent for the transaction."
          },
          "baseFeePerGas": {
            "type": "string"
          },
          "maxFeePerGas": {
            "type": "string"
          },
          "maxPriorityFeePerGas": {
            "type": "string"
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "blockIndex",
          "txHash",
          "txStatus",
          "txType",
          "gasLimit",
          "gasUsed",
          "gasPrice",
          "nonce",
          "from",
          "to",
          "value",
          "input",
          "baseFeePerGas"
        ]
      },
      "GetTransactionResponse": {
        "type": "object",
        "properties": {
          "erc20Transfers": {
            "description": "The list of ERC-20 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc20Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-20"
                      ]
                    },
                    "price": {
                      "description": "The token price, if available.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "type": "string",
                              "description": "ISO 4217 currency code.",
                              "enum": [
                                "usd",
                                "eur",
                                "aud",
                                "cad",
                                "chf",
                                "clp",
                                "cny",
                                "czk",
                                "dkk",
                                "gbp",
                                "hkd",
                                "huf",
                                "jpy",
                                "nzd"
                              ],
                              "example": "usd"
                            },
                            "value": {
                              "type": "number",
                              "description": "Monetary value in base 10 decimals.",
                              "example": "42.42"
                            }
                          },
                          "required": [
                            "currencyCode",
                            "value"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "decimals",
                    "ercType"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "value",
                "erc20Token"
              ]
            }
          },
          "erc721Transfers": {
            "description": "The list of ERC-721 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "erc721Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "erc721Token"
              ]
            }
          },
          "erc1155Transfers": {
            "description": "The list of ERC-1155 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc1155Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "properties": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "value",
                "erc1155Token"
              ]
            }
          },
          "internalTransactions": {
            "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "internalTxType": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "CALL",
                    "CREATE",
                    "CREATE2",
                    "CALLCODE",
                    "DELEGATECALL",
                    "STATICCALL"
                  ]
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "isReverted": {
                  "type": "boolean",
                  "description": "True if the internal transaction was reverted."
                },
                "gasUsed": {
                  "type": "string"
                },
                "gasLimit": {
                  "type": "string"
                }
              },
              "required": [
                "from",
                "to",
                "internalTxType",
                "value",
                "isReverted",
                "gasUsed",
                "gasLimit"
              ]
            }
          },
          "networkTokenDetails": {
            "type": "object",
            "properties": {
              "networkToken": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The contract name.",
                    "example": "Wrapped AVAX"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The contract symbol.",
                    "example": "WAVAX"
                  },
                  "decimals": {
                    "type": "number",
                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                    "example": 18
                  },
                  "logoUri": {
                    "type": "string",
                    "description": "The logo uri for the address.",
                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "symbol",
                  "decimals"
                ]
              },
              "currentPrice": {
                "description": "The current token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              },
              "historicalPrice": {
                "description": "The historical token price at the time the transaction occured, if available. Note, this is only provided if the transaction occured more than 24 hours ago.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              }
            },
            "required": [
              "networkToken"
            ]
          },
          "nativeTransaction": {
            "type": "object",
            "properties": {
              "blockNumber": {
                "type": "string",
                "description": "The block number on the chain.",
                "example": "339"
              },
              "blockTimestamp": {
                "type": "number",
                "description": "The block finality timestamp.",
                "example": 1648672486
              },
              "blockHash": {
                "type": "string",
                "description": "The block hash identifier.",
                "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
              },
              "blockIndex": {
                "type": "number",
                "description": "The index at which the transaction occured in the block (0-indexed).",
                "example": 0
              },
              "txHash": {
                "type": "string",
                "description": "The transaction hash identifier.",
                "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
              },
              "txStatus": {
                "type": "string",
                "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                "example": "1"
              },
              "txType": {
                "type": "number",
                "description": "The transaction type.",
                "example": 1
              },
              "gasLimit": {
                "type": "string",
                "description": "The gas limit set for the transaction.",
                "example": "51373"
              },
              "gasUsed": {
                "type": "string",
                "description": "The amount of gas used.",
                "example": "51373"
              },
              "gasPrice": {
                "type": "string",
                "description": "The gas price denominated by the number of decimals of the native token.",
                "example": "470000000000"
              },
              "nonce": {
                "type": "string",
                "description": "The nonce used by the sender of the transaction.",
                "example": "1"
              },
              "from": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The contract name.",
                    "example": "Wrapped AVAX"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The contract symbol.",
                    "example": "WAVAX"
                  },
                  "decimals": {
                    "type": "number",
                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                    "example": 18
                  },
                  "logoUri": {
                    "type": "string",
                    "description": "The logo uri for the address.",
                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                  },
                  "address": {
                    "type": "string",
                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                  }
                },
                "required": [
                  "address"
                ]
              },
              "to": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The contract name.",
                    "example": "Wrapped AVAX"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The contract symbol.",
                    "example": "WAVAX"
                  },
                  "decimals": {
                    "type": "number",
                    "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                    "example": 18
                  },
                  "logoUri": {
                    "type": "string",
                    "description": "The logo uri for the address.",
                    "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                  },
                  "address": {
                    "type": "string",
                    "description": "A wallet or contract address in mixed-case checksum encoding.",
                    "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                  }
                },
                "required": [
                  "address"
                ]
              },
              "method": {
                "type": "object",
                "properties": {
                  "callType": {
                    "example": "CONTRACT_CALL",
                    "type": "string",
                    "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                    "enum": [
                      "NATIVE_TRANSFER",
                      "CONTRACT_CALL",
                      "CONTRACT_CREATION"
                    ]
                  },
                  "methodHash": {
                    "type": "string",
                    "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                    "example": "0xa9059cbb"
                  },
                  "methodName": {
                    "type": "string",
                    "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                    "example": "transfer(address,uint256)"
                  }
                },
                "required": [
                  "callType",
                  "methodHash"
                ]
              },
              "value": {
                "type": "string",
                "example": "10000000000000000000"
              },
              "input": {
                "type": "string",
                "description": "The data sent for the transaction."
              },
              "baseFeePerGas": {
                "type": "string"
              },
              "maxFeePerGas": {
                "type": "string"
              },
              "maxPriorityFeePerGas": {
                "type": "string"
              }
            },
            "required": [
              "blockNumber",
              "blockTimestamp",
              "blockHash",
              "blockIndex",
              "txHash",
              "txStatus",
              "txType",
              "gasLimit",
              "gasUsed",
              "gasPrice",
              "nonce",
              "from",
              "to",
              "value",
              "input",
              "baseFeePerGas"
            ]
          }
        },
        "required": [
          "networkTokenDetails",
          "nativeTransaction"
        ]
      },
      "ImageAsset": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string"
          },
          "imageUri": {
            "type": "string",
            "description": "OUTPUT ONLY"
          }
        }
      },
      "ResourceLinkType": {
        "type": "string",
        "enum": [
          "Blog",
          "CoinGecko",
          "CoinMarketCap",
          "Discord",
          "Documentation",
          "Facebook",
          "Github",
          "Instagram",
          "LinkedIn",
          "Medium",
          "Reddit",
          "Support",
          "Telegram",
          "TikTok",
          "Twitter",
          "Website",
          "Whitepaper",
          "Youtube"
        ]
      },
      "ResourceLink": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Blog",
              "CoinGecko",
              "CoinMarketCap",
              "Discord",
              "Documentation",
              "Facebook",
              "Github",
              "Instagram",
              "LinkedIn",
              "Medium",
              "Reddit",
              "Support",
              "Telegram",
              "TikTok",
              "Twitter",
              "Website",
              "Whitepaper",
              "Youtube"
            ]
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "url"
        ]
      },
      "ContractDeploymentDetails": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "deployerAddress": {
            "type": "string",
            "description": "The address that initiated the transaction which deployed this contract."
          },
          "deployerContractAddress": {
            "type": "string",
            "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
          }
        },
        "required": [
          "txHash",
          "deployerAddress"
        ]
      },
      "UnknownContract": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "description": {
            "type": "string"
          },
          "officialSite": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "logoAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "bannerAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "color": {
            "type": "string"
          },
          "resourceLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Blog",
                    "CoinGecko",
                    "CoinMarketCap",
                    "Discord",
                    "Documentation",
                    "Facebook",
                    "Github",
                    "Instagram",
                    "LinkedIn",
                    "Medium",
                    "Reddit",
                    "Support",
                    "Telegram",
                    "TikTok",
                    "Twitter",
                    "Website",
                    "Whitepaper",
                    "Youtube"
                  ]
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "url"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "deploymentDetails": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "deployerAddress": {
                "type": "string",
                "description": "The address that initiated the transaction which deployed this contract."
              },
              "deployerContractAddress": {
                "type": "string",
                "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
              }
            },
            "required": [
              "txHash",
              "deployerAddress"
            ]
          },
          "ercType": {
            "type": "string",
            "enum": [
              "UNKNOWN"
            ]
          }
        },
        "required": [
          "address",
          "deploymentDetails",
          "ercType"
        ]
      },
      "PricingProviders": {
        "type": "object",
        "properties": {
          "coingeckoCoinId": {
            "type": "string"
          }
        }
      },
      "Erc20Contract": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "description": {
            "type": "string"
          },
          "officialSite": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "logoAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "bannerAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "color": {
            "type": "string"
          },
          "resourceLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Blog",
                    "CoinGecko",
                    "CoinMarketCap",
                    "Discord",
                    "Documentation",
                    "Facebook",
                    "Github",
                    "Instagram",
                    "LinkedIn",
                    "Medium",
                    "Reddit",
                    "Support",
                    "Telegram",
                    "TikTok",
                    "Twitter",
                    "Website",
                    "Whitepaper",
                    "Youtube"
                  ]
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "url"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "deploymentDetails": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "deployerAddress": {
                "type": "string",
                "description": "The address that initiated the transaction which deployed this contract."
              },
              "deployerContractAddress": {
                "type": "string",
                "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
              }
            },
            "required": [
              "txHash",
              "deployerAddress"
            ]
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-20"
            ]
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "decimals": {
            "type": "number",
            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
            "example": 18
          },
          "pricingProviders": {
            "type": "object",
            "properties": {
              "coingeckoCoinId": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "address",
          "deploymentDetails",
          "ercType",
          "decimals"
        ]
      },
      "Erc721Contract": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "description": {
            "type": "string"
          },
          "officialSite": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "logoAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "bannerAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "color": {
            "type": "string"
          },
          "resourceLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Blog",
                    "CoinGecko",
                    "CoinMarketCap",
                    "Discord",
                    "Documentation",
                    "Facebook",
                    "Github",
                    "Instagram",
                    "LinkedIn",
                    "Medium",
                    "Reddit",
                    "Support",
                    "Telegram",
                    "TikTok",
                    "Twitter",
                    "Website",
                    "Whitepaper",
                    "Youtube"
                  ]
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "url"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "deploymentDetails": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "deployerAddress": {
                "type": "string",
                "description": "The address that initiated the transaction which deployed this contract."
              },
              "deployerContractAddress": {
                "type": "string",
                "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
              }
            },
            "required": [
              "txHash",
              "deployerAddress"
            ]
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-721"
            ]
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          }
        },
        "required": [
          "address",
          "deploymentDetails",
          "ercType"
        ]
      },
      "Erc1155Contract": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contract name.",
            "example": "Wrapped AVAX"
          },
          "description": {
            "type": "string"
          },
          "officialSite": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "logoAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "bannerAsset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "string"
              },
              "imageUri": {
                "type": "string",
                "description": "OUTPUT ONLY"
              }
            }
          },
          "color": {
            "type": "string"
          },
          "resourceLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Blog",
                    "CoinGecko",
                    "CoinMarketCap",
                    "Discord",
                    "Documentation",
                    "Facebook",
                    "Github",
                    "Instagram",
                    "LinkedIn",
                    "Medium",
                    "Reddit",
                    "Support",
                    "Telegram",
                    "TikTok",
                    "Twitter",
                    "Website",
                    "Whitepaper",
                    "Youtube"
                  ]
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "url"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "type": "string",
            "description": "A wallet or contract address in mixed-case checksum encoding.",
            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
          },
          "deploymentDetails": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "deployerAddress": {
                "type": "string",
                "description": "The address that initiated the transaction which deployed this contract."
              },
              "deployerContractAddress": {
                "type": "string",
                "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
              }
            },
            "required": [
              "txHash",
              "deployerAddress"
            ]
          },
          "ercType": {
            "type": "string",
            "enum": [
              "ERC-1155"
            ]
          },
          "symbol": {
            "type": "string",
            "description": "The contract symbol.",
            "example": "WAVAX"
          },
          "pricingProviders": {
            "type": "object",
            "properties": {
              "coingeckoCoinId": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "address",
          "deploymentDetails",
          "ercType"
        ]
      },
      "ListContractsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "contracts": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "description": {
                      "type": "string"
                    },
                    "officialSite": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "logoAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "bannerAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "resourceLinks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Blog",
                              "CoinGecko",
                              "CoinMarketCap",
                              "Discord",
                              "Documentation",
                              "Facebook",
                              "Github",
                              "Instagram",
                              "LinkedIn",
                              "Medium",
                              "Reddit",
                              "Support",
                              "Telegram",
                              "TikTok",
                              "Twitter",
                              "Website",
                              "Whitepaper",
                              "Youtube"
                            ]
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "url"
                        ]
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "deploymentDetails": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "deployerAddress": {
                          "type": "string",
                          "description": "The address that initiated the transaction which deployed this contract."
                        },
                        "deployerContractAddress": {
                          "type": "string",
                          "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                        }
                      },
                      "required": [
                        "txHash",
                        "deployerAddress"
                      ]
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    }
                  },
                  "required": [
                    "address",
                    "deploymentDetails",
                    "ercType"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "description": {
                      "type": "string"
                    },
                    "officialSite": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "logoAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "bannerAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "resourceLinks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Blog",
                              "CoinGecko",
                              "CoinMarketCap",
                              "Discord",
                              "Documentation",
                              "Facebook",
                              "Github",
                              "Instagram",
                              "LinkedIn",
                              "Medium",
                              "Reddit",
                              "Support",
                              "Telegram",
                              "TikTok",
                              "Twitter",
                              "Website",
                              "Whitepaper",
                              "Youtube"
                            ]
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "url"
                        ]
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "deploymentDetails": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "deployerAddress": {
                          "type": "string",
                          "description": "The address that initiated the transaction which deployed this contract."
                        },
                        "deployerContractAddress": {
                          "type": "string",
                          "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                        }
                      },
                      "required": [
                        "txHash",
                        "deployerAddress"
                      ]
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "pricingProviders": {
                      "type": "object",
                      "properties": {
                        "coingeckoCoinId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "address",
                    "deploymentDetails",
                    "ercType"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "description": {
                      "type": "string"
                    },
                    "officialSite": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "logoAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "bannerAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "resourceLinks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Blog",
                              "CoinGecko",
                              "CoinMarketCap",
                              "Discord",
                              "Documentation",
                              "Facebook",
                              "Github",
                              "Instagram",
                              "LinkedIn",
                              "Medium",
                              "Reddit",
                              "Support",
                              "Telegram",
                              "TikTok",
                              "Twitter",
                              "Website",
                              "Whitepaper",
                              "Youtube"
                            ]
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "url"
                        ]
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "deploymentDetails": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "deployerAddress": {
                          "type": "string",
                          "description": "The address that initiated the transaction which deployed this contract."
                        },
                        "deployerContractAddress": {
                          "type": "string",
                          "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                        }
                      },
                      "required": [
                        "txHash",
                        "deployerAddress"
                      ]
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-20"
                      ]
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "pricingProviders": {
                      "type": "object",
                      "properties": {
                        "coingeckoCoinId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "address",
                    "deploymentDetails",
                    "ercType",
                    "decimals"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "description": {
                      "type": "string"
                    },
                    "officialSite": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "logoAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "bannerAsset": {
                      "type": "object",
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string",
                          "description": "OUTPUT ONLY"
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "resourceLinks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Blog",
                              "CoinGecko",
                              "CoinMarketCap",
                              "Discord",
                              "Documentation",
                              "Facebook",
                              "Github",
                              "Instagram",
                              "LinkedIn",
                              "Medium",
                              "Reddit",
                              "Support",
                              "Telegram",
                              "TikTok",
                              "Twitter",
                              "Website",
                              "Whitepaper",
                              "Youtube"
                            ]
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "url"
                        ]
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "deploymentDetails": {
                      "type": "object",
                      "properties": {
                        "txHash": {
                          "type": "string"
                        },
                        "deployerAddress": {
                          "type": "string",
                          "description": "The address that initiated the transaction which deployed this contract."
                        },
                        "deployerContractAddress": {
                          "type": "string",
                          "description": "The contract address which deployed this contract via smart contract. This field is only populated when the contract was deployed as part of smart contract execution."
                        }
                      },
                      "required": [
                        "txHash",
                        "deployerAddress"
                      ]
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "UNKNOWN"
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "deploymentDetails",
                    "ercType"
                  ]
                }
              ],
              "discriminator": {
                "propertyName": "ercType",
                "mapping": {
                  "ERC-721": "#/components/schemas/Erc721Contract",
                  "ERC-1155": "#/components/schemas/Erc1155Contract",
                  "ERC-20": "#/components/schemas/Erc20Contract",
                  "UNKNOWN": "#/components/schemas/UnknownContract"
                }
              }
            }
          }
        },
        "required": [
          "contracts"
        ]
      },
      "GlacierApiFeature": {
        "type": "string",
        "enum": [
          "nftIndexing",
          "webhooks"
        ]
      },
      "ChainStatus": {
        "type": "string",
        "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
        "enum": [
          "OK",
          "UNAVAILABLE"
        ]
      },
      "VmName": {
        "type": "string",
        "enum": [
          "EVM",
          "BITCOIN",
          "ETHEREUM"
        ]
      },
      "UtilityAddresses": {
        "type": "object",
        "properties": {
          "multicall": {
            "type": "string"
          }
        }
      },
      "ChainInfo": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
            "enum": [
              "OK",
              "UNAVAILABLE"
            ]
          },
          "chainName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "platformChainId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "vmId": {
            "type": "string"
          },
          "vmName": {
            "type": "string",
            "enum": [
              "EVM",
              "BITCOIN",
              "ETHEREUM"
            ]
          },
          "explorerUrl": {
            "type": "string"
          },
          "rpcUrl": {
            "type": "string"
          },
          "wsUrl": {
            "type": "string"
          },
          "isTestnet": {
            "type": "boolean"
          },
          "utilityAddresses": {
            "type": "object",
            "properties": {
              "multicall": {
                "type": "string"
              }
            }
          },
          "networkToken": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals"
            ]
          },
          "chainLogoUri": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "enabledFeatures": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "nftIndexing",
                "webhooks"
              ]
            }
          }
        },
        "required": [
          "chainId",
          "status",
          "chainName",
          "description",
          "vmName",
          "rpcUrl",
          "isTestnet",
          "networkToken"
        ]
      },
      "ListChainsResponse": {
        "type": "object",
        "properties": {
          "chains": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
                  "enum": [
                    "OK",
                    "UNAVAILABLE"
                  ]
                },
                "chainName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "platformChainId": {
                  "type": "string"
                },
                "subnetId": {
                  "type": "string"
                },
                "vmId": {
                  "type": "string"
                },
                "vmName": {
                  "type": "string",
                  "enum": [
                    "EVM",
                    "BITCOIN",
                    "ETHEREUM"
                  ]
                },
                "explorerUrl": {
                  "type": "string"
                },
                "rpcUrl": {
                  "type": "string"
                },
                "wsUrl": {
                  "type": "string"
                },
                "isTestnet": {
                  "type": "boolean"
                },
                "utilityAddresses": {
                  "type": "object",
                  "properties": {
                    "multicall": {
                      "type": "string"
                    }
                  }
                },
                "networkToken": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "symbol",
                    "decimals"
                  ]
                },
                "chainLogoUri": {
                  "type": "string"
                },
                "private": {
                  "type": "boolean"
                },
                "enabledFeatures": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "nftIndexing",
                      "webhooks"
                    ]
                  }
                }
              },
              "required": [
                "chainId",
                "status",
                "chainName",
                "description",
                "vmName",
                "rpcUrl",
                "isTestnet",
                "networkToken"
              ]
            }
          }
        },
        "required": [
          "chains"
        ]
      },
      "GetChainResponse": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Status of chain nodes. Chain nodes can become temporarily `UNAVAILABLE` for several reasons, such as validator stake falling below threshold. If chain nodes are `UNAVAILABLE`, requests that rely on data from the chain nodes may return 503 errors.",
            "enum": [
              "OK",
              "UNAVAILABLE"
            ]
          },
          "chainName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "platformChainId": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "vmId": {
            "type": "string"
          },
          "vmName": {
            "type": "string",
            "enum": [
              "EVM",
              "BITCOIN",
              "ETHEREUM"
            ]
          },
          "explorerUrl": {
            "type": "string"
          },
          "rpcUrl": {
            "type": "string"
          },
          "wsUrl": {
            "type": "string"
          },
          "isTestnet": {
            "type": "boolean"
          },
          "utilityAddresses": {
            "type": "object",
            "properties": {
              "multicall": {
                "type": "string"
              }
            }
          },
          "networkToken": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals"
            ]
          },
          "chainLogoUri": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "enabledFeatures": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "nftIndexing",
                "webhooks"
              ]
            }
          }
        },
        "required": [
          "chainId",
          "status",
          "chainName",
          "description",
          "vmName",
          "rpcUrl",
          "isTestnet",
          "networkToken"
        ]
      },
      "Erc20Transfer": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "erc20Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-20"
                ]
              },
              "price": {
                "description": "The token price, if available.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "description": "ISO 4217 currency code.",
                        "enum": [
                          "usd",
                          "eur",
                          "aud",
                          "cad",
                          "chf",
                          "clp",
                          "cny",
                          "czk",
                          "dkk",
                          "gbp",
                          "hkd",
                          "huf",
                          "jpy",
                          "nzd"
                        ],
                        "example": "usd"
                      },
                      "value": {
                        "type": "number",
                        "description": "Monetary value in base 10 decimals.",
                        "example": "42.42"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "value"
                    ]
                  }
                ]
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "decimals",
              "ercType"
            ]
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txHash",
          "from",
          "to",
          "logIndex",
          "value",
          "erc20Token"
        ]
      },
      "Erc721Transfer": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "erc721Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-721"
                ]
              },
              "tokenId": {
                "type": "string"
              },
              "tokenUri": {
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "indexStatus": {
                    "example": "indexed",
                    "type": "string",
                    "description": "The metadata indexing status of the nft.",
                    "enum": [
                      "UNKNOWN",
                      "MISSING_TOKEN",
                      "INVALID_TOKEN_URI",
                      "INVALID_TOKEN_URI_SCHEME",
                      "UNREACHABLE_TOKEN_URI",
                      "THROTTLED_TOKEN_URI",
                      "METADATA_CONTENT_TOO_LARGE",
                      "INVALID_METADATA",
                      "INVALID_METADATA_JSON",
                      "INDEXED",
                      "UNINDEXED"
                    ]
                  },
                  "metadataLastUpdatedTimestamp": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "imageUri": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "animationUri": {
                    "type": "string"
                  },
                  "externalUrl": {
                    "type": "string"
                  },
                  "background": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "string"
                  }
                },
                "required": [
                  "indexStatus"
                ]
              },
              "ownerAddress": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address",
              "name",
              "symbol",
              "ercType",
              "tokenId",
              "tokenUri",
              "metadata"
            ]
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txHash",
          "from",
          "to",
          "logIndex",
          "erc721Token"
        ]
      },
      "Erc1155Transfer": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "logIndex": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "erc1155Token": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              },
              "ercType": {
                "type": "string",
                "enum": [
                  "ERC-1155"
                ]
              },
              "tokenId": {
                "type": "string"
              },
              "tokenUri": {
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "indexStatus": {
                    "example": "indexed",
                    "type": "string",
                    "description": "The metadata indexing status of the nft.",
                    "enum": [
                      "UNKNOWN",
                      "MISSING_TOKEN",
                      "INVALID_TOKEN_URI",
                      "INVALID_TOKEN_URI_SCHEME",
                      "UNREACHABLE_TOKEN_URI",
                      "THROTTLED_TOKEN_URI",
                      "METADATA_CONTENT_TOO_LARGE",
                      "INVALID_METADATA",
                      "INVALID_METADATA_JSON",
                      "INDEXED",
                      "UNINDEXED"
                    ]
                  },
                  "metadataLastUpdatedTimestamp": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "imageUri": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "animationUri": {
                    "type": "string"
                  },
                  "externalUrl": {
                    "type": "string"
                  },
                  "background": {
                    "type": "string"
                  },
                  "decimals": {
                    "type": "number"
                  },
                  "properties": {
                    "type": "string"
                  }
                },
                "required": [
                  "indexStatus"
                ]
              }
            },
            "required": [
              "address",
              "ercType",
              "tokenId",
              "tokenUri",
              "metadata"
            ]
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txHash",
          "from",
          "to",
          "logIndex",
          "value",
          "erc1155Token"
        ]
      },
      "ListTransfersResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transfers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "string",
                      "description": "The block number on the chain.",
                      "example": "339"
                    },
                    "blockTimestamp": {
                      "type": "number",
                      "description": "The block finality timestamp.",
                      "example": 1648672486
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "The block hash identifier.",
                      "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                    },
                    "txHash": {
                      "type": "string",
                      "description": "The transaction hash identifier.",
                      "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                    },
                    "from": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "to": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "logIndex": {
                      "type": "number"
                    },
                    "value": {
                      "type": "string",
                      "example": "10000000000000000000"
                    },
                    "erc20Token": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-20"
                          ]
                        },
                        "price": {
                          "description": "The token price, if available.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currencyCode": {
                                  "type": "string",
                                  "description": "ISO 4217 currency code.",
                                  "enum": [
                                    "usd",
                                    "eur",
                                    "aud",
                                    "cad",
                                    "chf",
                                    "clp",
                                    "cny",
                                    "czk",
                                    "dkk",
                                    "gbp",
                                    "hkd",
                                    "huf",
                                    "jpy",
                                    "nzd"
                                  ],
                                  "example": "usd"
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Monetary value in base 10 decimals.",
                                  "example": "42.42"
                                }
                              },
                              "required": [
                                "currencyCode",
                                "value"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "address",
                        "name",
                        "symbol",
                        "decimals",
                        "ercType"
                      ]
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockTimestamp",
                    "blockHash",
                    "txHash",
                    "from",
                    "to",
                    "logIndex",
                    "value",
                    "erc20Token"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "string",
                      "description": "The block number on the chain.",
                      "example": "339"
                    },
                    "blockTimestamp": {
                      "type": "number",
                      "description": "The block finality timestamp.",
                      "example": 1648672486
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "The block hash identifier.",
                      "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                    },
                    "txHash": {
                      "type": "string",
                      "description": "The transaction hash identifier.",
                      "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                    },
                    "from": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "to": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "logIndex": {
                      "type": "number"
                    },
                    "erc721Token": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-721"
                          ]
                        },
                        "tokenId": {
                          "type": "string"
                        },
                        "tokenUri": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "indexStatus": {
                              "example": "indexed",
                              "type": "string",
                              "description": "The metadata indexing status of the nft.",
                              "enum": [
                                "UNKNOWN",
                                "MISSING_TOKEN",
                                "INVALID_TOKEN_URI",
                                "INVALID_TOKEN_URI_SCHEME",
                                "UNREACHABLE_TOKEN_URI",
                                "THROTTLED_TOKEN_URI",
                                "METADATA_CONTENT_TOO_LARGE",
                                "INVALID_METADATA",
                                "INVALID_METADATA_JSON",
                                "INDEXED",
                                "UNINDEXED"
                              ]
                            },
                            "metadataLastUpdatedTimestamp": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "animationUri": {
                              "type": "string"
                            },
                            "externalUrl": {
                              "type": "string"
                            },
                            "background": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "indexStatus"
                          ]
                        },
                        "ownerAddress": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address",
                        "name",
                        "symbol",
                        "ercType",
                        "tokenId",
                        "tokenUri",
                        "metadata"
                      ]
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockTimestamp",
                    "blockHash",
                    "txHash",
                    "from",
                    "to",
                    "logIndex",
                    "erc721Token"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "string",
                      "description": "The block number on the chain.",
                      "example": "339"
                    },
                    "blockTimestamp": {
                      "type": "number",
                      "description": "The block finality timestamp.",
                      "example": 1648672486
                    },
                    "blockHash": {
                      "type": "string",
                      "description": "The block hash identifier.",
                      "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                    },
                    "txHash": {
                      "type": "string",
                      "description": "The transaction hash identifier.",
                      "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                    },
                    "from": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "to": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The contract name.",
                          "example": "Wrapped AVAX"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The contract symbol.",
                          "example": "WAVAX"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                          "example": 18
                        },
                        "logoUri": {
                          "type": "string",
                          "description": "The logo uri for the address.",
                          "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                        },
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    },
                    "logIndex": {
                      "type": "number"
                    },
                    "value": {
                      "type": "string",
                      "example": "10000000000000000000"
                    },
                    "erc1155Token": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "A wallet or contract address in mixed-case checksum encoding.",
                          "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                        },
                        "ercType": {
                          "type": "string",
                          "enum": [
                            "ERC-1155"
                          ]
                        },
                        "tokenId": {
                          "type": "string"
                        },
                        "tokenUri": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "indexStatus": {
                              "example": "indexed",
                              "type": "string",
                              "description": "The metadata indexing status of the nft.",
                              "enum": [
                                "UNKNOWN",
                                "MISSING_TOKEN",
                                "INVALID_TOKEN_URI",
                                "INVALID_TOKEN_URI_SCHEME",
                                "UNREACHABLE_TOKEN_URI",
                                "THROTTLED_TOKEN_URI",
                                "METADATA_CONTENT_TOO_LARGE",
                                "INVALID_METADATA",
                                "INVALID_METADATA_JSON",
                                "INDEXED",
                                "UNINDEXED"
                              ]
                            },
                            "metadataLastUpdatedTimestamp": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "imageUri": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "animationUri": {
                              "type": "string"
                            },
                            "externalUrl": {
                              "type": "string"
                            },
                            "background": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "properties": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "indexStatus"
                          ]
                        }
                      },
                      "required": [
                        "address",
                        "ercType",
                        "tokenId",
                        "tokenUri",
                        "metadata"
                      ]
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockTimestamp",
                    "blockHash",
                    "txHash",
                    "from",
                    "to",
                    "logIndex",
                    "value",
                    "erc1155Token"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "transfers"
        ]
      },
      "NativeTransaction": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "blockIndex": {
            "type": "number",
            "description": "The index at which the transaction occured in the block (0-indexed).",
            "example": 0
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "txStatus": {
            "type": "string",
            "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
            "example": "1"
          },
          "txType": {
            "type": "number",
            "description": "The transaction type.",
            "example": 1
          },
          "gasLimit": {
            "type": "string",
            "description": "The gas limit set for the transaction.",
            "example": "51373"
          },
          "gasUsed": {
            "type": "string",
            "description": "The amount of gas used.",
            "example": "51373"
          },
          "gasPrice": {
            "type": "string",
            "description": "The gas price denominated by the number of decimals of the native token.",
            "example": "470000000000"
          },
          "nonce": {
            "type": "string",
            "description": "The nonce used by the sender of the transaction.",
            "example": "1"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "method": {
            "type": "object",
            "properties": {
              "callType": {
                "example": "CONTRACT_CALL",
                "type": "string",
                "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                "enum": [
                  "NATIVE_TRANSFER",
                  "CONTRACT_CALL",
                  "CONTRACT_CREATION"
                ]
              },
              "methodHash": {
                "type": "string",
                "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                "example": "0xa9059cbb"
              },
              "methodName": {
                "type": "string",
                "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                "example": "transfer(address,uint256)"
              }
            },
            "required": [
              "callType",
              "methodHash"
            ]
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "blockIndex",
          "txHash",
          "txStatus",
          "txType",
          "gasLimit",
          "gasUsed",
          "gasPrice",
          "nonce",
          "from",
          "to",
          "value"
        ]
      },
      "TransactionDetails": {
        "type": "object",
        "properties": {
          "nativeTransaction": {
            "description": "The native (top-level) transaction details.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "blockNumber": {
                    "type": "string",
                    "description": "The block number on the chain.",
                    "example": "339"
                  },
                  "blockTimestamp": {
                    "type": "number",
                    "description": "The block finality timestamp.",
                    "example": 1648672486
                  },
                  "blockHash": {
                    "type": "string",
                    "description": "The block hash identifier.",
                    "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                  },
                  "blockIndex": {
                    "type": "number",
                    "description": "The index at which the transaction occured in the block (0-indexed).",
                    "example": 0
                  },
                  "txHash": {
                    "type": "string",
                    "description": "The transaction hash identifier.",
                    "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                  },
                  "txStatus": {
                    "type": "string",
                    "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                    "example": "1"
                  },
                  "txType": {
                    "type": "number",
                    "description": "The transaction type.",
                    "example": 1
                  },
                  "gasLimit": {
                    "type": "string",
                    "description": "The gas limit set for the transaction.",
                    "example": "51373"
                  },
                  "gasUsed": {
                    "type": "string",
                    "description": "The amount of gas used.",
                    "example": "51373"
                  },
                  "gasPrice": {
                    "type": "string",
                    "description": "The gas price denominated by the number of decimals of the native token.",
                    "example": "470000000000"
                  },
                  "nonce": {
                    "type": "string",
                    "description": "The nonce used by the sender of the transaction.",
                    "example": "1"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The contract name.",
                        "example": "Wrapped AVAX"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The contract symbol.",
                        "example": "WAVAX"
                      },
                      "decimals": {
                        "type": "number",
                        "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                        "example": 18
                      },
                      "logoUri": {
                        "type": "string",
                        "description": "The logo uri for the address.",
                        "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                      },
                      "address": {
                        "type": "string",
                        "description": "A wallet or contract address in mixed-case checksum encoding.",
                        "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                      }
                    },
                    "required": [
                      "address"
                    ]
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The contract name.",
                        "example": "Wrapped AVAX"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The contract symbol.",
                        "example": "WAVAX"
                      },
                      "decimals": {
                        "type": "number",
                        "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                        "example": 18
                      },
                      "logoUri": {
                        "type": "string",
                        "description": "The logo uri for the address.",
                        "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                      },
                      "address": {
                        "type": "string",
                        "description": "A wallet or contract address in mixed-case checksum encoding.",
                        "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                      }
                    },
                    "required": [
                      "address"
                    ]
                  },
                  "method": {
                    "type": "object",
                    "properties": {
                      "callType": {
                        "example": "CONTRACT_CALL",
                        "type": "string",
                        "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                        "enum": [
                          "NATIVE_TRANSFER",
                          "CONTRACT_CALL",
                          "CONTRACT_CREATION"
                        ]
                      },
                      "methodHash": {
                        "type": "string",
                        "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                        "example": "0xa9059cbb"
                      },
                      "methodName": {
                        "type": "string",
                        "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                        "example": "transfer(address,uint256)"
                      }
                    },
                    "required": [
                      "callType",
                      "methodHash"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "example": "10000000000000000000"
                  }
                },
                "required": [
                  "blockNumber",
                  "blockTimestamp",
                  "blockHash",
                  "blockIndex",
                  "txHash",
                  "txStatus",
                  "txType",
                  "gasLimit",
                  "gasUsed",
                  "gasPrice",
                  "nonce",
                  "from",
                  "to",
                  "value"
                ]
              }
            ]
          },
          "erc20Transfers": {
            "description": "The list of ERC-20 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc20Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-20"
                      ]
                    },
                    "price": {
                      "description": "The token price, if available.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "type": "string",
                              "description": "ISO 4217 currency code.",
                              "enum": [
                                "usd",
                                "eur",
                                "aud",
                                "cad",
                                "chf",
                                "clp",
                                "cny",
                                "czk",
                                "dkk",
                                "gbp",
                                "hkd",
                                "huf",
                                "jpy",
                                "nzd"
                              ],
                              "example": "usd"
                            },
                            "value": {
                              "type": "number",
                              "description": "Monetary value in base 10 decimals.",
                              "example": "42.42"
                            }
                          },
                          "required": [
                            "currencyCode",
                            "value"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "decimals",
                    "ercType"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "value",
                "erc20Token"
              ]
            }
          },
          "erc721Transfers": {
            "description": "The list of ERC-721 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "erc721Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "erc721Token"
              ]
            }
          },
          "erc1155Transfers": {
            "description": "The list of ERC-1155 transfers.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc1155Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "properties": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "from",
                "to",
                "logIndex",
                "value",
                "erc1155Token"
              ]
            }
          },
          "internalTransactions": {
            "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "internalTxType": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "CALL",
                    "CREATE",
                    "CREATE2",
                    "CALLCODE",
                    "DELEGATECALL",
                    "STATICCALL"
                  ]
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "isReverted": {
                  "type": "boolean",
                  "description": "True if the internal transaction was reverted."
                },
                "gasUsed": {
                  "type": "string"
                },
                "gasLimit": {
                  "type": "string"
                }
              },
              "required": [
                "from",
                "to",
                "internalTxType",
                "value",
                "isReverted",
                "gasUsed",
                "gasLimit"
              ]
            }
          }
        },
        "required": [
          "nativeTransaction"
        ]
      },
      "ListTransactionDetailsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nativeTransaction": {
                  "description": "The native (top-level) transaction details.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string",
                          "description": "The block number on the chain.",
                          "example": "339"
                        },
                        "blockTimestamp": {
                          "type": "number",
                          "description": "The block finality timestamp.",
                          "example": 1648672486
                        },
                        "blockHash": {
                          "type": "string",
                          "description": "The block hash identifier.",
                          "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                        },
                        "blockIndex": {
                          "type": "number",
                          "description": "The index at which the transaction occured in the block (0-indexed).",
                          "example": 0
                        },
                        "txHash": {
                          "type": "string",
                          "description": "The transaction hash identifier.",
                          "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                        },
                        "txStatus": {
                          "type": "string",
                          "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                          "example": "1"
                        },
                        "txType": {
                          "type": "number",
                          "description": "The transaction type.",
                          "example": 1
                        },
                        "gasLimit": {
                          "type": "string",
                          "description": "The gas limit set for the transaction.",
                          "example": "51373"
                        },
                        "gasUsed": {
                          "type": "string",
                          "description": "The amount of gas used.",
                          "example": "51373"
                        },
                        "gasPrice": {
                          "type": "string",
                          "description": "The gas price denominated by the number of decimals of the native token.",
                          "example": "470000000000"
                        },
                        "nonce": {
                          "type": "string",
                          "description": "The nonce used by the sender of the transaction.",
                          "example": "1"
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The contract name.",
                              "example": "Wrapped AVAX"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The contract symbol.",
                              "example": "WAVAX"
                            },
                            "decimals": {
                              "type": "number",
                              "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                              "example": 18
                            },
                            "logoUri": {
                              "type": "string",
                              "description": "The logo uri for the address.",
                              "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                            },
                            "address": {
                              "type": "string",
                              "description": "A wallet or contract address in mixed-case checksum encoding.",
                              "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                            }
                          },
                          "required": [
                            "address"
                          ]
                        },
                        "method": {
                          "type": "object",
                          "properties": {
                            "callType": {
                              "example": "CONTRACT_CALL",
                              "type": "string",
                              "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                              "enum": [
                                "NATIVE_TRANSFER",
                                "CONTRACT_CALL",
                                "CONTRACT_CREATION"
                              ]
                            },
                            "methodHash": {
                              "type": "string",
                              "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                              "example": "0xa9059cbb"
                            },
                            "methodName": {
                              "type": "string",
                              "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                              "example": "transfer(address,uint256)"
                            }
                          },
                          "required": [
                            "callType",
                            "methodHash"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "example": "10000000000000000000"
                        }
                      },
                      "required": [
                        "blockNumber",
                        "blockTimestamp",
                        "blockHash",
                        "blockIndex",
                        "txHash",
                        "txStatus",
                        "txType",
                        "gasLimit",
                        "gasUsed",
                        "gasPrice",
                        "nonce",
                        "from",
                        "to",
                        "value"
                      ]
                    }
                  ]
                },
                "erc20Transfers": {
                  "description": "The list of ERC-20 transfers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "logIndex": {
                        "type": "number"
                      },
                      "value": {
                        "type": "string",
                        "example": "10000000000000000000"
                      },
                      "erc20Token": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-20"
                            ]
                          },
                          "price": {
                            "description": "The token price, if available.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "type": "string",
                                    "description": "ISO 4217 currency code.",
                                    "enum": [
                                      "usd",
                                      "eur",
                                      "aud",
                                      "cad",
                                      "chf",
                                      "clp",
                                      "cny",
                                      "czk",
                                      "dkk",
                                      "gbp",
                                      "hkd",
                                      "huf",
                                      "jpy",
                                      "nzd"
                                    ],
                                    "example": "usd"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Monetary value in base 10 decimals.",
                                    "example": "42.42"
                                  }
                                },
                                "required": [
                                  "currencyCode",
                                  "value"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "name",
                          "symbol",
                          "decimals",
                          "ercType"
                        ]
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "logIndex",
                      "value",
                      "erc20Token"
                    ]
                  }
                },
                "erc721Transfers": {
                  "description": "The list of ERC-721 transfers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "logIndex": {
                        "type": "number"
                      },
                      "erc721Token": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-721"
                            ]
                          },
                          "tokenId": {
                            "type": "string"
                          },
                          "tokenUri": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "indexStatus": {
                                "example": "indexed",
                                "type": "string",
                                "description": "The metadata indexing status of the nft.",
                                "enum": [
                                  "UNKNOWN",
                                  "MISSING_TOKEN",
                                  "INVALID_TOKEN_URI",
                                  "INVALID_TOKEN_URI_SCHEME",
                                  "UNREACHABLE_TOKEN_URI",
                                  "THROTTLED_TOKEN_URI",
                                  "METADATA_CONTENT_TOO_LARGE",
                                  "INVALID_METADATA",
                                  "INVALID_METADATA_JSON",
                                  "INDEXED",
                                  "UNINDEXED"
                                ]
                              },
                              "metadataLastUpdatedTimestamp": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "imageUri": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "animationUri": {
                                "type": "string"
                              },
                              "externalUrl": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "indexStatus"
                            ]
                          },
                          "ownerAddress": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address",
                          "name",
                          "symbol",
                          "ercType",
                          "tokenId",
                          "tokenUri",
                          "metadata"
                        ]
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "logIndex",
                      "erc721Token"
                    ]
                  }
                },
                "erc1155Transfers": {
                  "description": "The list of ERC-1155 transfers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "logIndex": {
                        "type": "number"
                      },
                      "value": {
                        "type": "string",
                        "example": "10000000000000000000"
                      },
                      "erc1155Token": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          },
                          "ercType": {
                            "type": "string",
                            "enum": [
                              "ERC-1155"
                            ]
                          },
                          "tokenId": {
                            "type": "string"
                          },
                          "tokenUri": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "indexStatus": {
                                "example": "indexed",
                                "type": "string",
                                "description": "The metadata indexing status of the nft.",
                                "enum": [
                                  "UNKNOWN",
                                  "MISSING_TOKEN",
                                  "INVALID_TOKEN_URI",
                                  "INVALID_TOKEN_URI_SCHEME",
                                  "UNREACHABLE_TOKEN_URI",
                                  "THROTTLED_TOKEN_URI",
                                  "METADATA_CONTENT_TOO_LARGE",
                                  "INVALID_METADATA",
                                  "INVALID_METADATA_JSON",
                                  "INDEXED",
                                  "UNINDEXED"
                                ]
                              },
                              "metadataLastUpdatedTimestamp": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "imageUri": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "animationUri": {
                                "type": "string"
                              },
                              "externalUrl": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              },
                              "properties": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "indexStatus"
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "ercType",
                          "tokenId",
                          "tokenUri",
                          "metadata"
                        ]
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "logIndex",
                      "value",
                      "erc1155Token"
                    ]
                  }
                },
                "internalTransactions": {
                  "description": "The list of internal transactions. Note that this list only includes CALL and CALLCODE internal transactions that had a non-zero value and CREATE/CREATE2 calls. Use a client provider to recieve a full debug trace of the transaction.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The contract name.",
                            "example": "Wrapped AVAX"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "The contract symbol.",
                            "example": "WAVAX"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                            "example": 18
                          },
                          "logoUri": {
                            "type": "string",
                            "description": "The logo uri for the address.",
                            "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                          },
                          "address": {
                            "type": "string",
                            "description": "A wallet or contract address in mixed-case checksum encoding.",
                            "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                          }
                        },
                        "required": [
                          "address"
                        ]
                      },
                      "internalTxType": {
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "CALL",
                          "CREATE",
                          "CREATE2",
                          "CALLCODE",
                          "DELEGATECALL",
                          "STATICCALL"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "example": "10000000000000000000"
                      },
                      "isReverted": {
                        "type": "boolean",
                        "description": "True if the internal transaction was reverted."
                      },
                      "gasUsed": {
                        "type": "string"
                      },
                      "gasLimit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "internalTxType",
                      "value",
                      "isReverted",
                      "gasUsed",
                      "gasLimit"
                    ]
                  }
                }
              },
              "required": [
                "nativeTransaction"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "ListNativeTransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "blockIndex": {
                  "type": "number",
                  "description": "The index at which the transaction occured in the block (0-indexed).",
                  "example": 0
                },
                "txHash": {
                  "type": "string",
                  "description": "The transaction hash identifier.",
                  "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                },
                "txStatus": {
                  "type": "string",
                  "description": "The transaction status, which is either 0 (failed) or 1 (successful).",
                  "example": "1"
                },
                "txType": {
                  "type": "number",
                  "description": "The transaction type.",
                  "example": 1
                },
                "gasLimit": {
                  "type": "string",
                  "description": "The gas limit set for the transaction.",
                  "example": "51373"
                },
                "gasUsed": {
                  "type": "string",
                  "description": "The amount of gas used.",
                  "example": "51373"
                },
                "gasPrice": {
                  "type": "string",
                  "description": "The gas price denominated by the number of decimals of the native token.",
                  "example": "470000000000"
                },
                "nonce": {
                  "type": "string",
                  "description": "The nonce used by the sender of the transaction.",
                  "example": "1"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "method": {
                  "type": "object",
                  "properties": {
                    "callType": {
                      "example": "CONTRACT_CALL",
                      "type": "string",
                      "description": "The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.",
                      "enum": [
                        "NATIVE_TRANSFER",
                        "CONTRACT_CALL",
                        "CONTRACT_CREATION"
                      ]
                    },
                    "methodHash": {
                      "type": "string",
                      "description": "The contract method hash identifier. The method hash is only set if the `callType` is `CONTRACT_CALL`.",
                      "example": "0xa9059cbb"
                    },
                    "methodName": {
                      "type": "string",
                      "description": "The contract method name including parameter types. If the `callType` is `NATIVE_TRANSFER` this is set to 'Native Transfer'. If the `callType` is `CONTRACT_CREATION` this is set to 'Contract Created'.",
                      "example": "transfer(address,uint256)"
                    }
                  },
                  "required": [
                    "callType",
                    "methodHash"
                  ]
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "blockIndex",
                "txHash",
                "txStatus",
                "txType",
                "gasLimit",
                "gasUsed",
                "gasPrice",
                "nonce",
                "from",
                "to",
                "value"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "ListErc20TransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "txHash": {
                  "type": "string",
                  "description": "The transaction hash identifier.",
                  "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc20Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-20"
                      ]
                    },
                    "price": {
                      "description": "The token price, if available.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "type": "string",
                              "description": "ISO 4217 currency code.",
                              "enum": [
                                "usd",
                                "eur",
                                "aud",
                                "cad",
                                "chf",
                                "clp",
                                "cny",
                                "czk",
                                "dkk",
                                "gbp",
                                "hkd",
                                "huf",
                                "jpy",
                                "nzd"
                              ],
                              "example": "usd"
                            },
                            "value": {
                              "type": "number",
                              "description": "Monetary value in base 10 decimals.",
                              "example": "42.42"
                            }
                          },
                          "required": [
                            "currencyCode",
                            "value"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "decimals",
                    "ercType"
                  ]
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "txHash",
                "from",
                "to",
                "logIndex",
                "value",
                "erc20Token"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "ListErc721TransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "txHash": {
                  "type": "string",
                  "description": "The transaction hash identifier.",
                  "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "erc721Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-721"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    },
                    "ownerAddress": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "txHash",
                "from",
                "to",
                "logIndex",
                "erc721Token"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "ListErc1155TransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "txHash": {
                  "type": "string",
                  "description": "The transaction hash identifier.",
                  "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "logIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "erc1155Token": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "ercType": {
                      "type": "string",
                      "enum": [
                        "ERC-1155"
                      ]
                    },
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenUri": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "indexStatus": {
                          "example": "indexed",
                          "type": "string",
                          "description": "The metadata indexing status of the nft.",
                          "enum": [
                            "UNKNOWN",
                            "MISSING_TOKEN",
                            "INVALID_TOKEN_URI",
                            "INVALID_TOKEN_URI_SCHEME",
                            "UNREACHABLE_TOKEN_URI",
                            "THROTTLED_TOKEN_URI",
                            "METADATA_CONTENT_TOO_LARGE",
                            "INVALID_METADATA",
                            "INVALID_METADATA_JSON",
                            "INDEXED",
                            "UNINDEXED"
                          ]
                        },
                        "metadataLastUpdatedTimestamp": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "imageUri": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "animationUri": {
                          "type": "string"
                        },
                        "externalUrl": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "properties": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indexStatus"
                      ]
                    }
                  },
                  "required": [
                    "address",
                    "ercType",
                    "tokenId",
                    "tokenUri",
                    "metadata"
                  ]
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "txHash",
                "from",
                "to",
                "logIndex",
                "value",
                "erc1155Token"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "InternalTransaction": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The block number on the chain.",
            "example": "339"
          },
          "blockTimestamp": {
            "type": "number",
            "description": "The block finality timestamp.",
            "example": 1648672486
          },
          "blockHash": {
            "type": "string",
            "description": "The block hash identifier.",
            "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
          },
          "txHash": {
            "type": "string",
            "description": "The transaction hash identifier.",
            "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
          },
          "from": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "to": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The contract name.",
                "example": "Wrapped AVAX"
              },
              "symbol": {
                "type": "string",
                "description": "The contract symbol.",
                "example": "WAVAX"
              },
              "decimals": {
                "type": "number",
                "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                "example": 18
              },
              "logoUri": {
                "type": "string",
                "description": "The logo uri for the address.",
                "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
              },
              "address": {
                "type": "string",
                "description": "A wallet or contract address in mixed-case checksum encoding.",
                "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
              }
            },
            "required": [
              "address"
            ]
          },
          "internalTxType": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "CALL",
              "CREATE",
              "CREATE2",
              "CALLCODE",
              "DELEGATECALL",
              "STATICCALL"
            ]
          },
          "value": {
            "type": "string",
            "example": "10000000000000000000"
          },
          "isReverted": {
            "type": "boolean",
            "description": "True if the internal transaction was reverted."
          },
          "gasUsed": {
            "type": "string"
          },
          "gasLimit": {
            "type": "string"
          }
        },
        "required": [
          "blockNumber",
          "blockTimestamp",
          "blockHash",
          "txHash",
          "from",
          "to",
          "internalTxType",
          "value",
          "isReverted",
          "gasUsed",
          "gasLimit"
        ]
      },
      "ListInternalTransactionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages."
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blockNumber": {
                  "type": "string",
                  "description": "The block number on the chain.",
                  "example": "339"
                },
                "blockTimestamp": {
                  "type": "number",
                  "description": "The block finality timestamp.",
                  "example": 1648672486
                },
                "blockHash": {
                  "type": "string",
                  "description": "The block hash identifier.",
                  "example": "0x17533aeb5193378b9ff441d61728e7a2ebaf10f61fd5310759451627dfca2e7c"
                },
                "txHash": {
                  "type": "string",
                  "description": "The transaction hash identifier.",
                  "example": "0x3e9303f81be00b4af28515dab7b914bf3dbff209ea10e7071fa24d4af0a112d4"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The contract name.",
                      "example": "Wrapped AVAX"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The contract symbol.",
                      "example": "WAVAX"
                    },
                    "decimals": {
                      "type": "number",
                      "description": "The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.",
                      "example": 18
                    },
                    "logoUri": {
                      "type": "string",
                      "description": "The logo uri for the address.",
                      "example": "https://images.ctfassets.net/gcj8jwzm6086/5VHupNKwnDYJvqMENeV7iJ/fdd6326b7a82c8388e4ee9d4be7062d4/avalanche-avax-logo.svg"
                    },
                    "address": {
                      "type": "string",
                      "description": "A wallet or contract address in mixed-case checksum encoding.",
                      "example": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    }
                  },
                  "required": [
                    "address"
                  ]
                },
                "internalTxType": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "CALL",
                    "CREATE",
                    "CREATE2",
                    "CALLCODE",
                    "DELEGATECALL",
                    "STATICCALL"
                  ]
                },
                "value": {
                  "type": "string",
                  "example": "10000000000000000000"
                },
                "isReverted": {
                  "type": "boolean",
                  "description": "True if the internal transaction was reverted."
                },
                "gasUsed": {
                  "type": "string"
                },
                "gasLimit": {
                  "type": "string"
                }
              },
              "required": [
                "blockNumber",
                "blockTimestamp",
                "blockHash",
                "txHash",
                "from",
                "to",
                "internalTxType",
                "value",
                "isReverted",
                "gasUsed",
                "gasLimit"
              ]
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "TransactionStatus": {
        "type": "string",
        "enum": [
          "failed",
          "success"
        ]
      }
    }
  }
}